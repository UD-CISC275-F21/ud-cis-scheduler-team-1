{"version":3,"sources":["components/SemesterTable.tsx","components/FourYearPlan.tsx","components/Requirements.tsx","components/CoursePool.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["SemesterTable","semester","useState","courses","setCourses","Col","Table","striped","bordered","hover","className","colSpan","title","map","course","name","credits","Button","color","onClick","filter","FourYearPlan","semesters","setSemesters","id","Row","xs","md","ButtonGroup","variant","length","splice","Requirements","CoursePool","defaultSemesters","App","Container","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f926a672.chunk.js","sourcesContent":["\nimport React, { useState } from \"react\";\nimport { Button, Col, Table } from \"react-bootstrap\";\nimport { Course } from \"../interfaces/course\";\nimport { Semester } from \"../interfaces/semester\";\n\nexport function SemesterTable({ semester }: { semester: Semester }): JSX.Element {\n\n    const [courses, setCourses] = useState<Course[]>(semester.courses);\n\n    // Removes a course from a semester based on its name\n    function removeCourse(name: string): void {\n        setCourses([...courses.filter(course => course.name !== name)]);\n        semester.courses = courses;\n    }\n\n    return <Col>\n        <Table striped bordered hover className=\"semester\">\n            <thead>\n                <tr>\n                    <th colSpan={3}>{semester.title}</th>\n                </tr>\n                <tr>\n                    <th>Course</th>\n                    <th>Credits</th>\n                    <th>{\"\"}</th>\n                </tr>\n            </thead>\n            <tbody>\n                {courses.map((course) =>\n                    <tr key={course.name}>\n                        <td>{course.name}</td>\n                        <td>{course.credits}</td>\n                        <td>\n                            <Button\n                                color=\"red\"\n                                onClick={() => removeCourse(course.name)}>\n                                {\" \"}X{\" \"}\n                            </Button>\n                        </td>\n                    </tr>\n                )}\n            </tbody>\n        </Table>\n    </Col>;\n}\n","import React from \"react\";\nimport { Button, Row, ButtonGroup } from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"../App.css\";\nimport { Semester } from \"../interfaces/semester\";\nimport { SemesterTable } from \"./SemesterTable\";\n// import { Course } from \"../interfaces/course\";\n\n/* Getting a table to render based on a list is from https://stackoverflow.com/questions/54659039/remove-table-row-using-hooks */\n/* Removing from a list is from https://www.robinwieruch.de/react-remove-item-from-list */\n\n\nexport function FourYearPlan({ semesters, setSemesters, }:\n    { semesters: Semester[], setSemesters: (s: Semester[]) => void }): JSX.Element {\n\n    /*\n    // Removes a semester based on its name (ex. \"Fall 2021\")\n    function removeSemester(title: string): void {\n        setSemesters(semesters.filter(semester => semester.title != title));\n    }\n    */\n\n    // Removes the most recently added semester in the list, does nothing if no semesters left\n    function removeLastSemester(): void {\n        if (semesters.length) {\n            semesters.splice(-1);\n            setSemesters([...semesters]);\n        }\n    }\n\n    // Adds a new semester with the given title (ex. \"Fall 2021\") and no courses\n    function addSemester(title: string): void {\n        setSemesters([...semesters, { title: title, courses: [] }]);\n    }\n    /*\n        // Removes a course from a semester based on its name\n        function removeCourse(semesterName: string, courseName: string): void {\n            setSemesters([...courses.filter(course => course.name !== name)]);\n            semester.courses = courses;\n        }\n    */\n    return <div id=\"plan\">\n        <h2 className=\"subtitle\">Four Year Plan</h2>\n        <Row xs={1} md={2} className=\"g-4\">\n            {semesters.map((semester) => <div key={semester.title}>\n                <SemesterTable semester={semester}></SemesterTable>\n            </div>)}\n        </Row>\n        <Row>\n            <ButtonGroup>\n                <Button\n                    onClick={() => {\n                        addSemester(\"test semester\");\n                    }}>\n                    + Add Semester\n                </Button>\n                <Button\n                    variant=\"danger\"\n                    onClick={() => {\n                        removeLastSemester();\n                    }}>\n                    - Delete Semester\n                </Button>\n                {/*\n                <Button\n                    variant=\"secondary\"\n                    onClick={() => {\n                        setSemesters([...defaultSemesters]);\n                    }}>\n                    Reset Plan\n                </Button>\n                */}\n            </ButtonGroup>;\n        </Row>\n    </div>;\n}","import React from \"react\";\nimport { Col } from \"react-bootstrap\";\nimport \"../App.css\";\n\nexport function Requirements(): JSX.Element {\n\n    return<Col>\n        <h2 className = \"subtitle\">Degree Requirements</h2>\n        <p>Below are the list of degree requirements that remain unsatisfied.</p>\n    </Col>;\n}","import React from \"react\";\nimport { Col } from \"react-bootstrap\";\nimport \"../App.css\";\n\nexport function CoursePool(): JSX.Element {\n\n    return<Col>\n        <h2 className = \"subtitle\">Course Pool</h2>\n    </Col>;\n}","import React, {useState} from \"react\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport {Col, Container, Row} from \"react-bootstrap\";\nimport {FourYearPlan} from \"./components/FourYearPlan\";\nimport {Requirements} from \"./components/Requirements\";\nimport {CoursePool} from \"./components/CoursePool\";\nimport {Course} from \"./interfaces/course\";\nimport { Semester } from \"./interfaces/semester\";\n\nconst testCourses: Course[] = [\n    {name: \"EGGG101 Introduction to Engineering\", credits: 2},\n    {name: \"CISC108 Introduction to Computer Science I\", credits: 3},\n    {name: \"MATH241 Analytic Geometry and Calculus A\", credits: 3},\n    {name: \"ENGL110 Seminar in Composition\", credits: 3},\n    {name: \"ARTH237 Art in Tibet\", credits: 3},\n];\n\nconst defaultSemesters: Semester[] = [\n    {title: \"Fall 2021\", courses: testCourses},\n    {title: \"Spring 2022\", courses: []}\n];\n\nfunction App(): JSX.Element {\n    // All courses in our database\n    // const [courses, setCourses] = useState<Course[]>(testCourses);\n    const [semesters, setSemesters] = useState<Semester[]>([...defaultSemesters] as Semester[]);\n\n    return (\n        <Container className=\"App\">\n            <h1 id=\"title\">UD CIS Scheduler</h1>\n\n            <Row>\n                <Col><CoursePool></CoursePool></Col>\n                <Col xs={6}><FourYearPlan semesters={semesters} setSemesters={setSemesters}></FourYearPlan></Col>\n                <Col><Requirements></Requirements></Col>\n            </Row>\n        </Container>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}