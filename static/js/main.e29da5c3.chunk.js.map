{"version":3,"sources":["components/semester.tsx","components/Requirements.tsx","components/CoursePool.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Semester","classes","setClasses","Col","className","Table","striped","bordered","hover","map","item","index","name","credits","Button","color","onClick","newList","filter","removeRow","Requirements","CoursePool","App","useState","classes1","setClasses1","Container","id","Row","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iRAaO,SAASA,EAAT,GAAiE,IAA9CC,EAA6C,EAA7CA,QAASC,EAAoC,EAApCA,WAM/B,OAAO,eAACC,EAAA,EAAD,WACH,oBAAIC,UAAY,WAAhB,4BACA,eAACC,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACJ,UAAU,WAAxC,UACI,kCACI,+BACI,6BAAK,cACL,6BAAK,KACL,6BAAK,QAET,+BACI,wCACA,yCACA,6BAAK,WAGb,gCACKH,EAAQQ,KAAI,SAACC,EAAMC,GAAP,OACT,+BACI,6BAAKD,EAAKE,OACV,6BAAKF,EAAKG,UACV,6BAAI,cAACC,EAAA,EAAD,CAAQC,MAAO,MAAMC,QAAS,kBAzBtD,SAAmBJ,GACf,IAAMK,EAAUhB,EAAQiB,QAAO,SAACR,GAAD,OAAUA,EAAKE,MAAQA,KACtDV,EAAWe,GAuB4CE,CAAUT,EAAKE,OAAlD,qBAHED,cChCvB,SAASS,IAEZ,OAAM,eAACjB,EAAA,EAAD,WACF,oBAAIC,UAAY,WAAhB,iCACA,sGCJD,SAASiB,IAEZ,OAAM,cAAClB,EAAA,EAAD,UACF,oBAAIC,UAAY,WAAhB,2BCER,IAAMH,EAA4B,CAC9B,CAACW,KAAM,sCAAuCC,QAAS,GACvD,CAACD,KAAM,6CAA8CC,QAAS,GAC9D,CAACD,KAAM,2CAA4CC,QAAS,GAC5D,CAACD,KAAM,iCAAkCC,QAAS,GAClD,CAACD,KAAM,uBAAwBC,QAAS,IAmB7BS,MAff,WACI,MAAgCC,mBAA4BtB,GAA5D,mBAAOuB,EAAP,KAAiBC,EAAjB,KACA,OACI,eAACC,EAAA,EAAD,CAAWtB,UAAY,MAAvB,UACI,oBAAIuB,GAAK,QAAT,8BAEA,eAACC,EAAA,EAAD,WACI,cAACP,EAAD,IACA,cAACrB,EAAD,CAAUC,QAAWuB,EAAUtB,WAAauB,IAC5C,cAACL,EAAD,WCbDS,EAZS,SAACC,GACjBA,GAAeA,aAAuBC,UACtC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QACzDJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHpBQ,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,SAM5Bb,K","file":"static/js/main.e29da5c3.chunk.js","sourcesContent":["import React from \"react\";\nimport { Button, Col, Table } from \"react-bootstrap\";\nimport \"../App.css\";\nimport { classTable } from \"../interfaces/classTable\";\n\n/* Getting a table to render based on a list is from https://stackoverflow.com/questions/54659039/remove-table-row-using-hooks */\n/* Removing from a list is from https://www.robinwieruch.de/react-remove-item-from-list */\n\ninterface indSemes{\n    classes: Array<classTable>\n    setClasses: (classes:Array<classTable>) => void\n}\n\nexport function Semester({classes, setClasses}: indSemes): JSX.Element {\n    function removeRow(name:string):void {\n        const newList = classes.filter((item) => item.name != name);\n        setClasses(newList);              \n    } \n\n    return <Col>\n        <h2 className = \"subtitle\">Four Year Plan</h2>\n        <Table striped bordered hover className=\"semester\">\n            <thead>\n                <tr>\n                    <th>{\"Fall 2021\"}</th>\n                    <th>{\"\"}</th>\n                    <th>{\"\"}</th>\n                </tr>\n                <tr>\n                    <th>Course</th>\n                    <th>Credits</th>\n                    <th>{\"\"}</th>\n                </tr>\n            </thead>\n            <tbody>\n                {classes.map((item, index) =>\n                    <tr key ={index}>\n                        <td>{item.name}</td>\n                        <td>{item.credits}</td>\n                        <td><Button color =\"red\" onClick={() =>removeRow(item.name)}> X </Button></td>\n                    </tr>\n                )}\n            </tbody>\n        </Table>\n    </Col>;\n}","import React from \"react\";\nimport { Col } from \"react-bootstrap\";\nimport \"../App.css\";\n\nexport function Requirements(): JSX.Element {\n\n    return<Col>\n        <h2 className = \"subtitle\">Degree Requirements</h2>\n        <p>Below are the list of degree requirements that remain unsatisfied.</p>\n    </Col>;\n}","import React from \"react\";\nimport { Col } from \"react-bootstrap\";\nimport \"../App.css\";\n\nexport function CoursePool(): JSX.Element {\n\n    return<Col>\n        <h2 className = \"subtitle\">Course Pool</h2>\n    </Col>;\n}","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport {Container, Row} from \"react-bootstrap\";\nimport { Semester } from \"./components/semester\";\nimport { Requirements } from \"./components/Requirements\";\nimport { CoursePool } from \"./components/CoursePool\";\nimport { classTable } from \"./interfaces/classTable\";\n\nconst classes:Array<classTable> = [\n    {name: \"EGGG101 Introduction to Engineering\", credits: 2},\n    {name: \"CISC108 Introduction to Computer Science I\", credits: 3},\n    {name: \"MATH241 Analytic Geometry and Calculus A\", credits: 3},\n    {name: \"ENGL110 Seminar in Composition\", credits: 3},\n    {name: \"ARTH237 Art in Tibet\", credits: 3},\n\n];\n\nfunction App(): JSX.Element {\n    const [classes1, setClasses1] = useState<Array<classTable>>(classes);\n    return (\n        <Container className = \"App\">\n            <h1 id = \"title\">UD CIS Scheduler</h1>\n            \n            <Row>\n                <CoursePool></CoursePool>\n                <Semester classes = {classes1} setClasses ={setClasses1} ></Semester>\n                <Requirements></Requirements>\n            </Row>\n        </Container>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}