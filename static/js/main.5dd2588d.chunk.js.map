{"version":3,"sources":["components/CourseModal.tsx","components/SemesterTable.tsx","interfaces/semester.ts","components/AddSemesterModal.tsx","components/FourYearPlan.tsx","utilities/findCourse.ts","data/univReqs.ts","data/csBA.ts","components/ReqCourseText.tsx","data/csAIRobots.ts","data/csBio.ts","data/csCyber.ts","data/csData.ts","data/csSystems.ts","data/csTheory.ts","utilities/findConcentration.ts","data/csBS.ts","data/csHighPerf.ts","components/Requirements.tsx","data/minor.ts","components/DraggableCourse.tsx","components/CoursePool.tsx","components/Concentrations.tsx","components/Welcome.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["CourseModal","show","setShow","semester","setSemester","mod","setMod","handleSave","name","value","previousValue","newMod","info","descr","credits","preReq","restrict","breadth","typ","console","log","Modal","size","onHide","Header","closeButton","Title","code","defaultValue","onSave","Body","Row","Col","md","rows","Footer","Button","variant","onClick","newSem","courses","findIndex","c","handleSaveChanges","SemesterTable","sem","setSemesters","semesters","coursesPool","setCoursesPool","useState","updateSemesters","tmp","i","length","year","season","useDrop","accept","drop","item","semesterHasCourse","alert","newCP","filter","course","collect","monitor","isOver","dropRef","ref","Table","striped","bordered","hover","className","colSpan","removeSemester","map","OverlayTrigger","placement","delay","hide","overlay","Tooltip","id","JSON","parse","stringify","Form","Select","onChange","ev","grade","target","updateGrades","removeCourse","AddSemesterModal","fall","inputSeason","setInputSeason","inputYear","setInputYear","setAlert","years","Array","from","keys","x","compareSemesters","semester1","semester2","seasonsOrder","Object","values","indexOf","Dropdown","Toggle","Menu","Item","winter","spring","summer","s","push","sort","handleSaveSem","FourYearPlan","downloadJSON","a","downloadData","fileName","json","blob","Blob","URL","createObjectURL","fileDownloadUrl","link","document","createElement","href","download","body","appendChild","click","removeChild","CSVdata","forEach","courseName","creditShown","gradeShown","toString","nlist","xs","ButtonGroup","window","location","reload","data","headers","label","key","filename","findCourse","substr","CATALOG_DATA","Catalog","undefined","getAllCourses","departments","allCourses","concat","multiCult","firstYearExp","dle","groupA","groupB","groupC","groupD","capstone","secondWrite","engineerBreadth","engineerProfess","noTech","accumulateCourses","cours","Map","j","set","findCommonCourses","subCourse","potentialCourses","includes","languages","TITLES","ReqCourseText","courseKeys","getTitle","fulfilled","dispatch","totalCreds","courseNames","e110","fys","dles","multi","groupa","groupb","groupc","groupd","caps","extra9","c108","c181","c210","c220","c260","c275","c303","c320","c361","c372","m210","m241","m242","sixat300","extra12","stats","majCaps","science","m300","writing","c355","total124","six","b","d","c304","c442","c481","c483","c484","systems","extra34","sys","e12","b207","b208","b401","ch103","ch133","ch104","ch134","c436","m349","orgo","extra6","dat","e6","c450","c464","cp465","cp494","advanced","adv","c437","m205","m243","advDS","advMath","extra3","ds","math","e3","apComp","datComp","c360","c471","m351","m428","apElec","m350","m450","ml","datElec","total","track","apMath","security","advSys","sec","c401","c404","m245","m315","m451","m302","m535","m426","disComp","conComp","discrete","continuous","Requirements","bsba","major","conc","remainingCourses","setRemainingCourses","fulfilledCourses","setFulfilledCourses","getConc","intro","CSMinorUpdate","aExtra","bExtra","cExtra","dExtra","lang","secondWrites","fifteenat301","potLang","fifteen","updateCSBA","findConcentration","useEffect","newRemCourses","newFulCourses","entries","univKey","univValue","trackComplete","trackCount","DraggableCourse","useDrag","type","isDragging","dragRef","role","CoursePool","inpu","setInpu","addCourse","some","el","onSubmit","event","preventDefault","Group","controlId","Label","Autocomplete","disablePortal","options","renderInput","params","TextField","Concentration","setBSBA","setMajor","setConc","Container","Welcome","index","setIndex","Carousel","activeIndex","interval","onSelect","selectedIndex","e","Caption","defaultSemesters","App","DndProvider","backend","HTML5Backend","fluid","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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AY,WAAY,WACxH,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACxH,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACxH,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACxH,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACxH,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACxH,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACxH,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACxH,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,YAG/DC,EAAe,CAAC,WAAY,WAAY,WAAY,WAAY,WAAY,WACrF,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,YAG/DC,EAAM,CAAC,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACpnH,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACxH,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACxH,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACxH,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACxH,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACxH,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACxH,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACxH,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACxH,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACxH,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACxH,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACxH,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACxH,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACxH,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACxH,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACxH,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACxH,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACxH,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACxH,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACxH,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACxH,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACxH,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACxH,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACxH,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,YAG3EC,EAAS,CAAC,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAC/H,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACxH,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACxH,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACxH,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACxH,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACxH,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACxH,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACxH,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACxH,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACxH,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACxH,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACxH,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACxH,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACxH,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACxH,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACxH,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACxH,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACxH,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACxH,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACxH,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACxH,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACxH,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACxH,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACxH,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACxH,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACxH,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACxH,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACxH,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACxH,YAGSC,EAAS,CAAC,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAC/H,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACxH,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACxH,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACxH,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACxH,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACxH,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACxH,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACxH,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACxH,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACxH,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACxH,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACxH,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACxH,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACxH,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACxH,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACxH,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACxH,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACxH,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACxH,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACxH,WAAY,WAAY,WAAY,WAAY,YAGvCC,EAAS,CAAC,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAC/H,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACxH,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACxH,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACxH,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACxH,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACxH,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACxH,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACxH,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACxH,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACxH,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACxH,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACxH,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACxH,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,YAGnGC,EAAW,CAAC,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACjI,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACxH,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACxH,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACxH,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACxH,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACxH,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACxH,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACxH,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACxH,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACxH,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACxH,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACxH,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACxH,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACxH,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACxH,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACxH,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACxH,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACxH,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACxH,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACxH,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,YAG/GC,EAAc,CAAC,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACxH,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACxH,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACxH,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACxH,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACxH,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACxH,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACxH,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACxH,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACxH,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACxH,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACxH,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACxH,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACxH,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACxH,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACxH,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACxH,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACxH,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACxH,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACxH,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACxH,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACxH,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACxH,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACxH,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACxH,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACxH,YAgBSC,EAAkB,CAAC,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAC5H,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACxH,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACxH,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACxH,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACxH,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACxH,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACxH,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACxH,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACxH,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACxH,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACxH,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACxH,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACxH,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACxH,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACxH,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACxH,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACxH,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACxH,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACxH,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACxH,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACxH,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACxH,WAAY,WAAY,WAAY,WAAY,YAGvCC,EAAkB,CAAC,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAC5H,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACxH,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACxH,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACxH,WAAY,WAAY,YAGfC,EAAS,CAAC,WAAY,WAAY,WAAY,WAAY,WAAY,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","file":"static/js/main.5dd2588d.chunk.js","sourcesContent":["import React from \"react\";\nimport { Button, Col, Row, Modal } from \"react-bootstrap\";\nimport { EditText, EditTextarea } from \"react-edit-text\";\nimport { CourseDisplay } from \"../interfaces/course\";\nimport \"react-edit-text/dist/index.css\";\nimport { Semester } from \"../interfaces/semester\";\nimport \"../App.css\";\n\n\ninterface iCourseModal {\n    show: boolean;\n    setShow: (s: boolean) => void;\n    semester: Semester;\n    setSemester: (setC: Semester) => void;\n    mod: CourseDisplay;\n    setMod: (setMod: CourseDisplay) => void;\n}\ninterface save {\n    name: string;\n    value: string;\n    previousValue: string;\n}\n\nexport function CourseModal({\n    show,\n    setShow,\n    semester,\n    setSemester,\n    mod,\n    setMod,\n}: iCourseModal): JSX.Element {\n\n    //handle staging change info into mod but not update the actual semester yet\n    const handleSave = ({\n        name,\n        value,\n        previousValue,\n    }: save) => {\n        const newMod: CourseDisplay = mod;\n        switch (name) {\n        case \"name\": {\n            newMod.info.name = value;\n            break;\n        }\n        case \"descr\": {\n            newMod.info.descr = value;\n            break;\n        }\n        case \"credits\": {\n            newMod.info.credits = value;\n            break;\n        }\n        case \"preReq\": {\n            newMod.info.preReq = value;\n            break;\n        }\n        case \"restrict\": {\n            newMod.info.restrict = value;\n            break;\n        }\n        case \"breadth\": {\n            newMod.info.breadth = value;\n            break;\n        }\n        case \"typ\": {\n            newMod.info.typ = value;\n            break;\n        }\n        }\n        setMod(newMod);\n        console.log(\"Previous info: \" + previousValue);\n        console.log(\"New info: \" + value);\n    };\n\n    //actual semester updated with new course info after save button is clicked \n    function handleSaveChanges(): void {\n        const newSem: Semester = semester;\n        newSem.courses[semester.courses.findIndex(c => c.info.code == mod.info.code)] = mod;\n        setSemester(newSem);\n    }\n    return (\n        <Modal\n            show={show}\n            size=\"lg\"\n            onHide={() => {\n                setShow(false);\n            }}>\n            <Modal.Header closeButton>\n                <Modal.Title>\n                    {mod?.info.code}\n                    <EditText\n                        name=\"name\"\n                        defaultValue={mod?.info.name}\n                        onSave={handleSave}></EditText>\n                </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <Row>\n                    <Col md=\"2\">\n                        <strong>Description:</strong>\n                    </Col>\n                    <Col>\n                        <EditTextarea\n                            rows={4}\n                            name=\"descr\"\n                            defaultValue={mod?.info.descr}\n                            onSave={handleSave}></EditTextarea>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col md=\"2\">\n                        <strong>Credits:</strong>\n                    </Col>\n                    <Col>\n                        <EditText\n                            name=\"credits\"\n                            defaultValue={mod?.info.credits}\n                            onSave={handleSave}></EditText>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col md=\"2\">\n                        <strong>Pre-Reqs:</strong>\n                    </Col>\n                    <Col>\n                        <EditTextarea\n                            rows={2}\n                            name=\"preReq\"\n                            defaultValue={mod?.info.preReq}\n                            onSave={handleSave}></EditTextarea>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col md=\"2\">\n                        <strong>Restriction:</strong>\n                    </Col>\n                    <Col>\n                        <EditTextarea\n                            rows={2}\n                            name=\"restrict\"\n                            defaultValue={mod?.info.restrict}\n                            onSave={handleSave}></EditTextarea>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col md=\"2\">\n                        <strong>Breadth:</strong>\n                    </Col>\n                    <Col>\n                        <EditTextarea\n                            rows={2}\n                            name=\"breadth\"\n                            defaultValue={mod?.info.breadth}\n                            onSave={handleSave}></EditTextarea>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col md=\"2\">\n                        <strong>Avalability:</strong>\n                    </Col>\n                    <Col>\n                        <EditText\n                            name=\"typ\"\n                            defaultValue={mod?.info.typ}\n                            onSave={handleSave}></EditText>\n                    </Col>\n                </Row>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button\n                    variant=\"secondary\"\n                    onClick={() => {\n                        setShow(false);\n                    }}>\n                    Close\n                </Button>\n                <Button\n                    variant=\"primary\"\n                    onClick={() => {\n                        handleSaveChanges();\n                        setShow(false);\n                    }}>\n                    Save Changes\n                </Button>\n            </Modal.Footer>\n        </Modal>\n    );\n}","import React, { useState } from \"react\";\nimport { Button, Col, Table, Form, OverlayTrigger, Tooltip } from \"react-bootstrap\";\nimport { Semester } from \"../interfaces/semester\";\nimport { CourseDisplay } from \"../interfaces/course\";\nimport { CourseModal } from \"./CourseModal\";\nimport \"../App.css\";\nimport { useDrop } from \"react-dnd\";\n\n/* Getting a table to render based on a list is from https://stackoverflow.com/questions/54659039/remove-table-row-using-hooks */\n/* Removing from a list is from https://www.robinwieruch.de/react-remove-item-from-list */\n/* Drag and Drop came from https://medium.com/nmc-techblog/easy-drag-and-drop-in-react-22778b30ba37 */\n\ninterface semesterTable {\n    sem: Semester;\n    setSemesters: (s: Semester[]) => void;\n    semesters: Semester[];\n    coursesPool: CourseDisplay[],\n    setCoursesPool: (cs: CourseDisplay[]) => void;\n}\n\nexport function SemesterTable({ sem, setSemesters, semesters, coursesPool, setCoursesPool }: semesterTable): JSX.Element {\n    const [semester, setSemester] = useState<Semester>(sem);\n    const [show, setShow] = useState<boolean>(false); //To show Modal when Course is clicked\n    const [mod, setMod] = useState<CourseDisplay>(semester.courses[0]); // staging the changed info before save\n\n    // Removes a course from a semester based on its name\n    function removeCourse(name: string): void {\n        const newSem: Semester = semester;\n        newSem.courses = [...semester.courses.filter(course => course.info.name !== name)];\n        setSemester(newSem);\n        updateSemesters();\n    }\n\n    //remove semester when button is clicked\n    function removeSemester(sem: Semester): void {\n        setSemesters([...semesters.filter(semester => semester.season + semester.year !== sem.season + sem.year)]);\n    }\n\n    //update semester when called, will find semester that is current semester being altered and replace it\n    function updateSemesters(): void {\n        let tmp: Semester[] = [];\n        for (let i = 0; i < semesters.length; i++) {\n            if ((semesters[i].year === semester.year) && (semesters[i].season === semester.season)) {\n                tmp = [...tmp, semester];\n            } else {\n                tmp = [...tmp, semesters[i]];\n            }\n        }\n        setSemesters(tmp);\n    }\n\n    //check if semester already has a course\n    //helps to prohibit courses from being dropped in semester if course in semester\n    function semesterHasCourse(courses: CourseDisplay[], item: CourseDisplay): boolean {\n        for (let i = 0; i < courses.length; i++) {\n            if (courses[i].info.code === item.info.code) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    //drop hook, from website with some adjustments\n    const [{ isOver }, dropRef] = useDrop({\n        accept: \"course\",\n        drop: (item: CourseDisplay) => {\n            if (!semesterHasCourse(semester.courses, item)) {\n                const newSem: Semester = semester;\n                newSem.courses = [...semester.courses, item];\n                setSemester(newSem); //updating semester\n                updateSemesters(); //updating list of semesters\n                const newCP = coursesPool.filter(course => course.info.code !== item.info.code);\n                coursesPool = newCP;\n                setCoursesPool(newCP);  //updating courses pool, so card is gone after dropped\n            } else {\n                alert(\"Course is Already in Semester\");\n            }\n        },\n        collect: (monitor) => ({\n            isOver: monitor.isOver()\n        })\n    });\n\n    //update grade on change\n    function updateGrades(sem: Semester, course: CourseDisplay): CourseDisplay[] {\n        let tmp: CourseDisplay[] = [];\n        for (let i = 0; i < sem.courses.length; i++) {\n            if (sem.courses[i].info.code === course.info.code) {\n                tmp = [...tmp, course];\n            } else {\n                tmp = [...tmp, sem.courses[i]];\n            }\n        }\n        return tmp;\n    }\n\n    return (\n        <Col ref={dropRef}>\n            <Table striped bordered hover className=\"semester\">\n                <thead>\n                    <tr>\n                        <th colSpan={3}>{semester.season}{\" \"}{semester.year}</th>\n                        <th>\n                            <Button size=\"sm\" variant=\"outline-danger\" onClick={() => removeSemester(semester)}>\n                                X\n                            </Button>\n                        </th>\n                    </tr>\n                    <tr>\n                        <th>Course</th>\n                        <th>Credits</th>\n                        <th>Grade</th>\n                        <th></th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {semester.courses.map(course =>\n                        <tr key={course.info.name}>\n                            <OverlayTrigger placement=\"right\"  delay={{ show: 1000, hide: 0 }} overlay={<Tooltip id=\"tooltip-disabled\">Click to edit information!</Tooltip>}>\n                                <td>\n                                    <a\n                                        onClick={() => {\n                                            setShow(true);\n                                            setMod(JSON.parse(JSON.stringify(course)));\n                                        }}><div>{course.info.code}{\" - \"}\n                                            {course.info.name}</div>\n                                        {course.info.preReq !==\"\" && <div className = \"courseTableReq\">{\"*Check Prerequisites*\"}</div>}\n                                    </a>\n                                </td>\n                            </OverlayTrigger>\n                            <td>{course.info.credits}</td>\n                            <td><Form>\n                                <Form.Select size=\"sm\" aria-label=\"Select grade\" defaultValue=\"-\"\n                                    onChange={(ev: React.ChangeEvent<HTMLSelectElement>) => {\n                                        course = { ...course, grade: ev.target.value as string };\n                                        const newSem = semester;\n                                        newSem.courses = updateGrades(newSem, course);\n                                        setSemester(newSem);\n                                        updateSemesters();\n                                    }}>\n                                    <option value={\"-\"}>-</option>\n                                    <option value={\"A\"}>A</option>\n                                    <option value={\"A-\"}>A-</option>\n                                    <option value={\"B+\"}>B+</option>\n                                    <option value={\"B\"}>B</option>\n                                    <option value={\"B-\"}>B-</option>\n                                    <option value={\"C+\"}>C+</option>\n                                    <option value={\"C\"}>C</option>\n                                    <option value={\"C-\"}>C-</option>\n                                    <option value={\"D+\"}>D+</option>\n                                    <option value={\"D\"}>D</option>\n                                    <option value={\"D-\"}>D-</option>\n                                    <option value={\"F\"}>F</option>\n                                    <option value={\"P\"}>P</option>\n                                </Form.Select>\n                            </Form></td>\n                            <td>\n                                <Button size=\"sm\" variant=\"outline-danger\" onClick={() => removeCourse(course.info.name)}>\n                                    X\n                                </Button>\n                            </td>\n                        </tr>\n                    )}\n                    {isOver}\n                </tbody>\n            </Table>\n            <Button\n                variant=\"secondary\"\n                onClick={() => {\n                    setSemester({ ...semester, courses: [] });\n                }}>\n                Delete All Courses\n            </Button>\n            {show && <CourseModal \n                show={show}\n                setShow={setShow}\n                semester={semester}\n                setSemester={setSemester}\n                mod={mod}\n                setMod={setMod}></CourseModal>}\n        </Col>\n    );\n}\n","import { CourseDisplay } from \"./course\";\n\n//enumerated type of what possible semester types are\nexport enum season {\n    winter = \"Winter\",\n    spring = \"Spring\",\n    summer = \"Summer\", \n    fall = \"Fall\"\n}\n\n//interface for a single semester\nexport interface Semester {\n    season: season      //above type\n    year: number        //year of semester, ex 2021\n    courses: CourseDisplay[]        //array of courses that are in semester\n}","import React, { useState } from \"react\";\nimport { Button, Row, Modal, Dropdown, Col } from \"react-bootstrap\";\nimport \"react-edit-text/dist/index.css\";\nimport { season, Semester } from \"../interfaces/semester\";\nimport \"../App.css\";\n\ninterface addSemModal {\n    show: boolean;\n    setShow: (s: boolean) => void;\n    semesters: Semester[];\n    setSemesters: (setC: Semester[]) => void;\n}\nexport function AddSemesterModal({\n    show,\n    setShow,\n    semesters,\n    setSemesters,\n}: addSemModal): JSX.Element {\n    const [inputSeason, setInputSeason] = useState<season>(season.fall);\n    const [inputYear, setInputYear] = useState<number>(2021);\n    const [alert, setAlert] = useState<string>(\"\");\n    const years = Array.from(Array(30).keys()).map(x => x + 2012);\n\n\n    //handle save new semester if its not in the plan yet \n    function handleSaveSem(): void {\n        const newSem: Semester[] = semesters;\n        if (semesters.filter(s => s.season === inputSeason && s.year === inputYear).length > 0) {\n            setAlert(\"Semester already in your plan!\");\n        } else {\n            newSem.push({ season: inputSeason, year: inputYear, courses: [] });\n            newSem.sort(compareSemesters);\n            setSemesters(newSem);\n            setAlert(\"\");\n            setShow(false);\n        }\n    }\n    //compares semesters by year and season in order to sort them\n    function compareSemesters(semester1: Semester, semester2: Semester): number {\n        if (semester1.year < semester2.year) {\n            return -1;\n        } else if (semester1.year > semester2.year) {\n            return 1;\n        } else {\n            const seasonsOrder = Object.values(season);\n            if (seasonsOrder.indexOf(semester1.season) < seasonsOrder.indexOf(semester2.season)) {\n                return -1;\n            } else if (seasonsOrder.indexOf(semester1.season) > seasonsOrder.indexOf(semester2.season)) {\n                return 1;\n            }\n        }\n        return 0;\n    }\n    return (\n        <Modal\n            show={show}\n            onHide={() => {\n                setShow(false);\n            }}>\n            <Modal.Header closeButton>\n                <Modal.Title><strong>Adding New Semester</strong></Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <Row id=\"add-sems-dropdown\">\n                    <Col id=\"add-sems-col\">\n                        <Dropdown>\n                            <strong>Season : </strong>\n                            <Dropdown.Toggle size=\"sm\" variant=\"outline-dark\" id=\"dropdown-basic\">\n                                {inputSeason}\n                            </Dropdown.Toggle>\n                            <Dropdown.Menu>\n                                <Dropdown.Item\n                                    onClick={() => {\n                                        setInputSeason(season.fall);\n                                        setAlert(\"\");\n                                    }}>\n                                    Fall\n                                </Dropdown.Item>\n                                <Dropdown.Item\n                                    onClick={() => {\n                                        setInputSeason(season.winter);\n                                        setAlert(\"\");\n                                    }}>\n                                    Winter\n                                </Dropdown.Item>\n                                <Dropdown.Item\n                                    onClick={() => {\n                                        setInputSeason(season.spring);\n                                        setAlert(\"\");\n                                    }}>\n                                    Spring\n                                </Dropdown.Item>\n                                <Dropdown.Item\n                                    onClick={() => {\n                                        setInputSeason(season.summer);\n                                        setAlert(\"\");\n                                    }}>\n                                    Summer\n                                </Dropdown.Item>\n                            </Dropdown.Menu>\n                        </Dropdown>\n                    </Col>\n                    <Col>\n                        <Dropdown>\n                            <strong>Year : </strong>\n                            <Dropdown.Toggle size=\"sm\" variant=\"outline-dark\" id=\"dropdown-basic\">\n                                {inputYear}\n                            </Dropdown.Toggle>\n                            <Dropdown.Menu id=\"scrolling\">\n                                {years.map(year =>\n                                    <Dropdown.Item key={year}\n                                        onClick={() => {\n                                            setInputYear(year);\n                                        }}>\n                                        {year}\n                                    </Dropdown.Item>\n                                )}\n                            </Dropdown.Menu>\n                        </Dropdown>\n                    </Col>\n                </Row>\n                <p id=\"alert\">{alert}</p>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button\n                    variant=\"secondary\"\n                    onClick={() => {\n                        setShow(false);\n                    }}>\n                    Cancel\n                </Button>\n                <Button\n                    variant=\"primary\"\n                    onClick={() => {\n                        handleSaveSem();\n                    }}>\n                    Add Semester\n                </Button>\n            </Modal.Footer>\n        </Modal>\n    );\n}\n","import React, {useState} from \"react\";\nimport {Button, Row, ButtonGroup} from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"../App.css\";\nimport { Semester} from \"../interfaces/semester\";\nimport {SemesterTable} from \"./SemesterTable\";\nimport {CSVLink} from \"react-csv\";\nimport {AddSemesterModal} from \"./AddSemesterModal\";\nimport { CourseDisplay } from \"../interfaces/course\";\n\n/* Getting a table to render based on a list is from https://stackoverflow.com/questions/54659039/remove-table-row-using-hooks */\n/* Removing from a list is from https://www.robinwieruch.de/react-remove-item-from-list */\n/* Downloading CSV file code helper from https://stackoverflow.com/a/65794124/17305181*/\n\ninterface iCSVdata {\n    courseName: string;\n    creditShown: string;\n    gradeShown: string;\n}\ninterface iFourYearPlan{\n    semesters : Semester[];\n    setSemesters : (s : Semester[])=>void;\n    coursesPool: CourseDisplay[],\n    setCoursesPool: (cs: CourseDisplay[]) => void;\n}\nexport function FourYearPlan({semesters,setSemesters, coursesPool, setCoursesPool}:iFourYearPlan): JSX.Element {\n    const [show, setShow] = useState(false);// Show the modal when adding new semester\n\n    //Download JSON file \n    const downloadJSON = async () => {\n        const downloadData: Semester[] = semesters;\n        const fileName = \"My-Schedule\";\n        const json = JSON.stringify(downloadData); //Convert JSON Array to string.\n        const blob = new Blob([json]); //Convert JSON string to BLOB.\n        const fileDownloadUrl = await URL.createObjectURL(blob);\n        const link = document.createElement(\"a\");\n        link.href = fileDownloadUrl;\n        link.download = fileName + \".json\";\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n    };\n\n    //Download CSV file \n    const CSVheaders = [ \n        {label: \"\", key: \"courseName\"},\n        {label: \"My Schedule\", key: \"creditShown\"},\n        {label: \"\", key: \"gradeShown\"},\n    ];\n    const CSVdata: iCSVdata[] = [];\n    semesters.forEach(item => {\n        CSVdata.push({\n            courseName: \"\",\n            creditShown: \"\",\n            gradeShown: \"\",\n        });\n        CSVdata.push({\n            courseName: item.season,\n            creditShown: item.year.toString(),\n            gradeShown: \"\",\n        });\n        CSVdata.push({\n            courseName: \"Courses\",\n            creditShown: \"Credits\",\n            gradeShown: \"Grades\",\n        });\n        CSVdata.push({\n            courseName: item.courses[0]?.info.code,\n            creditShown: item.courses[0]?.info.credits,\n            gradeShown: item.courses[0]?.grade,\n        });\n        for (let i = 1; i < item.courses.length; i++) {\n            const nlist = item.courses[i];\n            CSVdata.push({\n                courseName: nlist.info.code,\n                creditShown: nlist.info.credits,\n                gradeShown: nlist.grade,\n            });\n        }\n    });\n    return (\n        <div id=\"plan\">\n            <Row xs={1} md={2} className=\"g-4\">\n                {semesters.map(sem => \n                    <SemesterTable\n                        key={sem.season + sem.year}\n                        sem={sem}\n                        setSemesters={setSemesters}\n                        semesters={semesters}\n                        coursesPool = {coursesPool}\n                        setCoursesPool = {setCoursesPool}></SemesterTable>\n                )}\n            </Row>\n            <Row>\n                <ButtonGroup id=\"buttonGroup\">\n                    <Button\n                        id=\"big-scope-button\"\n                        onClick={() => {\n                            setShow(true);\n                        }}>\n                        + Add Semester\n                    </Button>\n                    <Button\n                        id=\"big-scope-button\"\n                        variant=\"secondary\"\n                        onClick={() => {\n                            window.location.reload();\n                        }}>\n                        Reset Plan\n                    </Button>\n                    <Button id=\"big-scope-button\" variant=\"info\">\n                        <CSVLink\n                            id=\"csvlink\"\n                            data={CSVdata}\n                            headers={CSVheaders}\n                            filename={\"My-Schedule.csv\"}>\n                            Download as .CSV\n                        </CSVLink>\n                    </Button>\n                    <Button id=\"big-scope-button\" variant=\"info\" onClick={downloadJSON}>\n                        Download as .JSON\n                    </Button>\n                </ButtonGroup>\n            </Row>\n            {show && \n                <AddSemesterModal\n                    show={show}\n                    setShow={setShow}\n                    semesters={semesters}\n                    setSemesters={setSemesters}></AddSemesterModal>\n            }\n        </div>\n    );\n}\n","import { Course } from \"../interfaces/course\";\nimport Catalog from \"../data/catalog.json\";\n\n//function that will return the course object\nexport function findCourse(name:string): Course{\n    const code = name.substr(0, 4);  //gets department, Ex ACCT\n    const CATALOG_DATA: Record<string, Record<string, Course>> = Catalog;  //converting json to record type\n    let course:Course;\n    try{\n        course = CATALOG_DATA[code][name]; //tries to get course in catalog, has default null course if not\n    }catch{\n        console.log(\"catch\");\n        course = {\n            code: \"\",\n            name: \"\",\n            descr: \"\",\n            credits: \"\",\n            preReq: \"\",\n            restrict: \"\",\n            breadth: \"\",\n            typ: \"\",\n        };\n    }\n    //exception handling\n    if(course === undefined){\n        course = {\n            code: \"\",\n            name: \"\",\n            descr: \"\",\n            credits: \"\",\n            preReq: \"\",\n            restrict: \"\",\n            breadth: \"\",\n            typ: \"\",\n        };\n    }\n    return course;\n}\n\n//returns list of all possible courses, for drop down option for course pool\nexport function getAllCourses(): string[]{\n    const departments: string[] = Object.keys(Catalog);\n    const CATALOG_DATA: Record<string, Record<string, Course>> = Catalog;\n    let allCourses: string[] = [];\n    for(let i = 0; i < departments.length; i++){\n        allCourses = allCourses.concat(Object.keys(CATALOG_DATA[departments[i]]));\n    } \n    return allCourses;\n}","import { Semester } from \"../interfaces/semester\";\n\n//courses satisfying multicultural\nexport const multiCult = [\"AFRA 110\", \"AFRA 193\", \"AFRA 205\", \"AFRA 206\", \"AFRA 220\", \"AFRA 221\", \"AFRA 222\", \"AFRA 223\", \"AFRA 225\", \n    \"AFRA 250\", \"AFRA 251\", \"AFRA 304\", \"AFRA 305\", \"AFRA 306\", \"AFRA 314\", \"AFRA 315\", \"AFRA 318\", \"AFRA 320\", \"AFRA 321\", \"AFRA 325\", \n    \"AFRA 329\", \"AFRA 334\", \"AFRA 362\", \"AFRA 370\", \"AFRA 371\", \"AFRA 372\", \"AFRA 373\", \"AFRA 381\", \"AFRA 398\", \"AFRA 434\", \"AFRA 440\", \n    \"AFRA 442\", \"AFRA 443\", \"AFRA 445\", \"AFRA 446\", \"AFRA 447\", \"AFRA 484\", \"ANFS 100\", \"ANFS 102\", \"ANTH 101\", \"ANTH 103\", \"ANTH 201\", \n    \"ANTH 209\", \"ANTH 210\", \"ANTH 211\", \"ANTH 212\", \"ANTH 223\", \"ANTH 228\", \"ANTH 229\", \"ANTH 230\", \"ANTH 232\", \"ANTH 233\", \"ANTH 234\", \n    \"ANTH 235\", \"ANTH 236\", \"ANTH 239\", \"ANTH 245\", \"ANTH 265\", \"ANTH 269\", \"ANTH 310\", \"ANTH 312\", \"ANTH 318\", \"ANTH 320\", \"ANTH 321\", \n    \"ANTH 325\", \"ANTH 326\", \"ANTH 330\", \"ANTH 333\", \"ANTH 343\", \"ANTH 344\", \"ANTH 351\", \"ANTH 352\", \"ANTH 354\", \"ANTH 356\", \"ANTH 360\", \n    \"ANTH 372\", \"ANTH 375\", \"ANTH 381\", \"ANTH 383\", \"ANTH 401\", \"APEC 100\", \"ARAB 208\", \"ART 204 \", \"ART 324 \", \"ART 407 \", \"ARTC 110\", \n    \"ARTH 101\", \"ARTH 151\", \"ARTH 153\", \"ARTH 163\", \"ARTH 164\", \"ARTH 175\", \"ARTH 204\", \"ARTH 210\", \"ARTH 228\", \"ARTH 229\", \"ARTH 232\", \n    \"ARTH 233\", \"ARTH 237\", \"ARTH 246\", \"ARTH 248\", \"ARTH 299\", \"ARTH 303\", \"ARTH 311\", \"ARTH 323\", \"ARTH 332\", \"ARTH 333\", \"ARTH 380\", \n    \"ARTH 419\", \"ARTH 440\", \"ARTH 444\", \"ARTH 445\", \"ARTH 456\", \"BHAN 236\", \"BHAN 322\", \"BISC 127\", \"DIST 250\", \"CHIN 204\", \"CHIN 451\", \n    \"CHIN 452\", \"CIEG 492\", \"COMM 204\", \"COMM 263\", \"COMM 421\", \"CRJU 350\", \"CRJU 355\", \"CRJU 452\", \"ECON 311\", \"ECON 418\", \"EDUC 247\", \n    \"EDUC 258\", \"EDUC 419\", \"EDUC 459\", \"ENGL 215\", \"ENGL 216\", \"ENGL 278\", \"ENGL 345\", \"ENGL 350\", \"ENGL 376\", \"ENGL 380\", \"ENGL 381\", \n    \"ENGL 382\", \"ENWC 413\", \"FASH 213\", \"FASH 319\", \"FREN 207\", \"FREN 457\", \"FREN 458\", \"GAME 352\", \"GEOG 102\", \"GEOG 120\", \"GEOG 203\", \n    \"GEOG 226\", \"GEOG 310\", \"GEOG 430\", \"GEOG 450\", \"HDFS 202\", \"HDFS 203\", \"HIST 103\", \"HIST 104\", \"HIST 130\", \"HIST 131\", \"HIST 134\", \n    \"HIST 135\", \"HIST 137\", \"HIST 138\", \"HIST 139\", \"HIST 140\", \"HIST 145\", \"HIST 146\", \"HIST 224\", \"HIST 300\", \"HIST 304\", \"HIST 327\", \n    \"HIST 335\", \"HIST 364\", \"HIST 368\", \"HIST 369\", \"HIST 370\", \"HIST 371\", \"HIST 377\", \"HIST 378\", \"HIST 380\", \"HIST 381\", \"HIST 388\", \n    \"HIST 390\", \"HIST 392\", \"HIST 395\", \"HIST 397\", \"HIST 439\", \"HIST 444\", \"HIST 460\", \"HIST 477\", \"HLPR 233\", \"HLTH 245\", \"HLTH 315\", \n    \"HOSP 214\", \"HOSP 316\", \"HOSP 317\", \"HOSP 328\", \"HOSP 330\", \"HOSP 355\", \"JAPN 208\", \"LARC 202\", \"LING 101\", \"LING 102\", \"LING 203\", \n    \"LING 222\", \"LING 480\", \"LLCU 207\", \"LLCU 332\", \"LLCU 333\", \"LLCU 335\", \"LLCU 345\", \"MAST 202\", \"MAST 375\", \"MUSC 205\", \"MUSC 227\", \n    \"MUSC 302\", \"MUSC 438\", \"NTDT 301\", \"NTDT 475\", \"NURS 235\", \"NURS 412\", \"NURS 414\", \"PHIL 204\", \"PHIL 208\", \"PHIL 307\", \"PHIL 309\", \n    \"PHIL 310\", \"PHIL 327\", \"PHIL 335\", \"PHIL 337\", \"PHIL 338\", \"PHIL 410\", \"PLSC 100\", \"POSC 230\", \"POSC 322\", \"POSC 361\", \"POSC 406\", \n    \"POSC 412\", \"POSC 422\", \"POSC 433\", \"POSC 455\", \"RUSS 325\", \"SOCI 213\", \"SOCI 471\", \"SPAN 207\", \"SPAN 208\", \"SPAN 326\", \"SPAN 447\", \n    \"SPAN 471\", \"SPAN 472\", \"SPAN 473\", \"SPAN 474\", \"SPAN 479\", \"SPAN 491\", \"SPTM 318\", \"SPTM 416\", \"THEA 240\", \"THEA 241\", \"THEA 340\", \n    \"UAPP 449\", \"WOMS 200\", \"WOMS 201\", \"WOMS 202\", \"WOMS 209\", \"WOMS 210\", \"WOMS 212\", \"WOMS 214\", \"WOMS 216\", \"WOMS 240\", \"WOMS 284\", \n    \"WOMS 304\", \"WOMS 306\", \"WOMS 314\", \"WOMS 332\", \"WOMS 336\", \"WOMS 341\", \"WOMS 356\"];\n\n//courses satisfying first year experience\nexport const firstYearExp = [\"ARSC 116\", \"BHAN 135\", \"BMEG 101\", \"BUAD 110\", \"EDUC 100\", \"EGGG 101\", \n    \"ENSC 101\", \"KAAP 105\", \"KAAP 155\", \"LLCU 111\", \"MAST 100\", \"NURS 100\", \"UNIV 101\"];\n\n//courses satisfying discovery learning experience\nexport const dle = [\"ACCT 363\", \"ACCT 364\", \"AFRA 446\", \"AFRA 464\", \"AFRA 468\", \"AFSC 310\", \"ANFS 404\", \"ANFS 411\", \n    \"ANFS 417\", \"ANFS 418\", \"ANFS 421\", \"ANFS 422\", \"ANFS 426\", \"ANFS 464\", \"ANTH 218\", \"ANTH 232\", \"ANTH 334\", \"ANTH 338\", \n    \"ANTH 341\", \"ANTH 350\", \"ANTH 375\", \"ANTH 404\", \"ANTH 424\", \"ANTH 463\", \"ANTH 486\", \"ANTH 489\", \"APEC 409\", \"APEC 412\", \n    \"APEC 430\", \"ARSC 316\", \"ARSC 480\", \"ARSC 482\", \"ART 408 \", \"ART 416 \", \"ARTC 464\", \"ARTH 264\", \"ARTH 364\", \"ARTH 464\", \n    \"BHAN 464\", \"BISC 312\", \"BISC 316\", \"BISC 411\", \"BISC 412\", \"BISC 413\", \"BISC 451\", \"BISC 452\", \"BISC 468\", \"BISC 484\", \n    \"BMEG 450\", \"BREG 450\", \"BUAD 364\", \"BUAD 430\", \"BUAD 444\", \"BUAD 445\", \"BUAD 448\", \"BUAD 468\", \"BUAD 478\", \"CGSC 310\", \n    \"CGSC 420\", \"CHEG 432\", \"CHEG 468\", \"CHEM 402\", \"CHEM 468\", \"CIEG 461\", \"CIEG 465\", \"CIEG 491\", \"CISC 357\", \"CISC 374\", \n    \"CISC 475\", \"CISC 498\", \"CISC 499\", \"COMM 326\", \"COMM 351\", \"COMM 364\", \"COMM 388\", \"COMM 408\", \"COMM 409\", \"COMM 424\", \n    \"COMM 426\", \"COMM 427\", \"COMM 468\", \"COMM 490\", \"CPEG 422\", \"CPEG 460\", \"CRJU 368\", \"CRJU 424\", \"CRJU 451\", \"CRJU 452\", \n    \"CRJU 495\", \"DANC 210\", \"DANC 400\", \"DANC 401\", \"DIST 200\", \"DIST 345\", \"DIST 400\", \"ECON 436\", \"EDUC 205\", \"EDUC 310\", \n    \"EDUC 400\", \"EDUC 413\", \"ELEG 450\", \"ELEG 498\", \"ELEG 499\", \"ENEP 364\", \"ENEP 472\", \"ENGL 308\", \"ENGL 462\", \"ENGL 464\", \n    \"ENGL 468\", \"ENGL 469\", \"ENGL 480\", \"ENSC 425\", \"ENSC 426\", \"ENSC 464\", \"ENTR 353\", \"ENTR 364\", \"ENTR 420\", \"ENTR 450\", \n    \"ENTR 455\", \"ENTR 456\", \"ENTR 458\", \"ENTR 461\", \"ENTR 464\", \"ENTR 489\", \"ENWC 408\", \"ENWC 409\", \"ENWC 415\", \"ENWC 423\", \n    \"ENWC 426\", \"ENWC 468\", \"FASH 320\", \"FASH 417\", \"FASH 419\", \"FASH 425\", \"FINC 364\", \"FINC 418\", \"FINC 425\", \"FINC 426\", \n    \"FREN 456\", \"GAME 401\", \"GEOG 309\", \"GEOG 315\", \"GEOL 306\", \"GEOL 434\", \"HDFS 225\", \"HDFS 334\", \"HDFS 335\", \"HDFS 436\", \n    \"HIST 268\", \"HIST 304\", \"HIST 464\", \"HIST 468\", \"HIST 491\", \"HLTH 215\", \"HLTH 320\", \"HLTH 395\", \"HLTH 490\", \"HLTH 491\", \n    \"HLTH 495\", \"HOSP 300\", \"HOSP 355\", \"HOSP 364\", \"HOSP 488\", \"HOSP 489\", \"HOSP 495\", \"JAPN 490\", \"JOUR 464\", \"KAAP 106\", \n    \"KAAP 107\", \"KAAP 206\", \"KAAP 207\", \"KAAP 285\", \"KAAP 301\", \"KAAP 306\", \"KAAP 307\", \"KAAP 400\", \"KAAP 458\", \"KAAP 459\", \n    \"LAMS 464\", \"LARC 332\", \"LARC 364\", \"LARC 456\", \"LEAD 268\", \"LEAD 340\", \"LEAD 390\", \"LEAD 468\", \"LEAD 490\", \"LING 353\", \n    \"LING 471\", \"MAST 407\", \"MAST 421\", \"MAST 432\", \"MAST 443\", \"MAST 468\", \"MCST 464\", \"MEEG 401\", \"MEEG 402\", \"MISY 364\", \n    \"MLSC 105\", \"MLSC 106\", \"MLSC 205\", \"MLSC 206\", \"MLSC 305\", \"MLSC 306\", \"MLSC 405\", \"MLSC 406\", \"MMSC 410\", \"MMSC 444\", \n    \"MMSC 455\", \"MMSC 462\", \"MMSC 473\", \"MMSC 474\", \"MMSC 475\", \"MMSC 476\", \"MMSC 477\", \"MMSC 478\", \"MMSC 479\", \"MMSC 481\", \n    \"MSEG 401\", \"MSST 401\", \"MSST 402\", \"MSST 407\", \"MSST 410\", \"MSST 464\", \"MUSC 401\", \"MUSC 423\", \"MUSC 457\", \"MUSC 458\", \n    \"MUSC 464\", \"MUSC 483\", \"MUSC 499\", \"NSCI 368\", \"NSCI 468\", \"NTDT 350\", \"NTDT 460\", \"NURS 353\", \"NURS 355\", \"NURS 357\", \n    \"NURS 375\", \"NURS 443\", \"NURS 453\", \"NURS 457\", \"NURS 459\", \"NURS 478\", \"NURS 485\", \"PHIL 338\", \"PHYS 468\", \"PLSC 364\", \n    \"PLSC 405\", \"POSC 423\", \"POSC 447\", \"POSC 464\", \"POSC 468\", \"POSC 469\", \"POSC 471\", \"POSC 475\", \"POSC 497\", \"POSC 498\", \n    \"PSYC 365\", \"PSYC 369\", \"PSYC 405\", \"PSYC 468\", \"SCEN 105\", \"SCEN 111\", \"SCEN 117\", \"SCEN 119\", \"SOCI 368\", \"SOCI 410\", \n    \"SOCI 441\", \"SOCI 449\", \"SOCI 464\", \"SOCI 471\", \"SPAN 318\", \"SPTM 420\", \"STAT 468\", \"THEA 314\", \"THEA 408\", \"UAPP 268\", \n    \"UAPP 300\", \"UAPP 390\", \"UAPP 468\", \"UNIV 118\", \"UNIV 240\", \"UNIV 260\", \"UNIV 262\", \"UNIV 268\", \"UNIV 301\", \"UNIV 302\", \n    \"UNIV 303\", \"UNIV 304\", \"UNIV 305\", \"UNIV 320\", \"UNIV 321\", \"UNIV 322\", \"UNIV 340\", \"UNIV 360\", \"UNIV 361\", \"UNIV 362\", \n    \"UNIV 364\", \"UNIV 365\", \"UNIV 368\", \"UNIV 370\", \"UNIV 371\", \"UNIV 372\", \"UNIV 373\", \"UNIV 401\", \"UNIV 402\", \"UNIV 440\", \n    \"UNIV 460\", \"UNIV 462\", \"UNIV 468\", \"WOMS 498\"];\n\n//courses satisfying arts and sciences group A requirement\nexport const groupA = [\"AFRA 206\", \"AFRA 250\", \"AFRA 295\", \"AFRA 305\", \"AFRA 314\", \"AFRA 315\", \"AFRA 318\", \"AFRA 325\", \"AFRA 370\", \n    \"AFRA 372\", \"AFRA 442\", \"AFRA 447\", \"ANTH 201\", \"ANTH 205\", \"ANTH 216\", \"ANTH 227\", \"ANTH 239\", \"ANTH 251\", \"ANTH 338\", \"ANTH 344\", \n    \"ANTH 381\", \"ANTH 457\", \"ART 129 \", \"ART 133 \", \"ART 180 \", \"ART 200 \", \"ART 204 \", \"ART 230 \", \"ART 231 \", \"ART 233 \", \"ART 243 \", \n    \"ART 246 \", \"ART 250 \", \"ART 280 \", \"ART 281 \", \"ART 289 \", \"ART 290 \", \"ARTC 110\", \"ARTH 101\", \"ARTH 150\", \"ARTH 151\", \"ARTH 153\", \n    \"ARTH 154\", \"ARTH 162\", \"ARTH 198\", \"ARTH 199\", \"ARTH 203\", \"ARTH 213\", \"ARTH 219\", \"ARTH 229\", \"ARTH 237\", \"ARTH 243\", \"ARTH 248\", \n    \"ARTH 249\", \"ARTH 251\", \"ARTH 302\", \"ARTH 307\", \"ARTH 319\", \"ARTH 321\", \"ARTH 323\", \"ARTH 325\", \"ARTH 332\", \"ARTH 333\", \"ARTH 403\", \n    \"ARTH 444\", \"ARTH 445\", \"ARTH 456\", \"ARSC 297\", \"ARSC 298\", \"ARSC 301\", \"CHIN 204\", \"CGSC 421\", \"COMM 256\", \"CISC 355\", \"CRJU 335\", \n    \"CRJU 336\", \"DANC 101\", \"DANC 202\", \"DANC 203\", \"DANC 204\", \"DANC 206\", \"DANC 207\", \"DANC 208\", \"DANC 210\", \"DANC 302\", \"DANC 303\", \n    \"DANC 304\", \"DANC 305\", \"DANC 306\", \"DANC 307\", \"DANC 309\", \"DANC 310\", \"DANC 312\", \"DANC 313\", \"EDUC 240\", \"EDUC 470\", \"EDUC 485\", \n    \"ENGL 101\", \"ENGL 150\", \"ENGL 151\", \"ENGL 201\", \"ENGL 202\", \"ENGL 207\", \"ENGL 208\", \"ENGL 209\", \"ENGL 210\", \"ENGL 217\", \"ENGL 220\", \n    \"ENGL 230\", \"ENGL 280\", \"ENGL 284\", \"ENGL 290\", \"ENGL 318\", \"ENGL 324\", \"ENGL 338\", \"ENGL 348\", \"ENGL 350\", \"ENGL 365\", \"ENGL 372\", \n    \"ENGL 374\", \"ENGL 376\", \"ENGL 380\", \"ENTR 356\", \"FASH 133\", \"FREN 211\", \"GAME 201\", \"GAME 351\", \"GAME 352\", \"GEOG 203\", \"GEOG 345\", \n    \"GEOG 346\", \"GEOG 416\", \"GRMN 211\", \"GREK 301\", \"GREK 302\", \"HLTH 215\", \"HLTH 241\", \"HONR 290\", \"HONR 295\", \"ITAL 211\", \"ITAL 212\", \n    \"JAPN 204\", \"LARC 103\", \"LARC 232\", \"LLCU 316\", \"LLCU 319\", \"LLCU 320\", \"LLCU 321\", \"LLCU 322\", \"LLCU 323\", \"LLCU 326\", \"LLCU 327\", \n    \"LLCU 328\", \"LLCU 329\", \"LLCU 331\", \"LLCU 332\", \"LLCU 337\", \"LLCU 338\", \"LLCU 380\", \"LLCU 416\", \"LLCU 420\", \"LATN 301\", \"LATN 302\", \n    \"MUSC 101\", \"MUSC 102\", \"MUSC 105\", \"MUSC 112\", \"MUSC 119\", \"MUSC 120\", \"MUSC 122\", \"MUSC 123\", \"MUSC 124\", \"MUSC 150\", \"MUSC 177\", \n    \"MUSC 181\", \"MUSC 182\", \"MUSC 204\", \"MUSC 224\", \"MUSC 227\", \"MUSC 228\", \"MUSC 241\", \"MUSC 281\", \"MUSC 293\", \"MUSC 334\", \"MUSC 430\", \n    \"MUSC 432\", \"MUSC 433\", \"MUSC 438\", \"MUSC 460\", \"MUSC 461\", \"MUSC 462\", \"MUSC 463\", \"MUSC 470\", \"MUSC 471\", \"MUSC 472\", \"MUSC 473\", \n    \"MUSC 474\", \"MUSC 475\", \"MUSC 476\", \"MUSC 477\", \"MUSC 478\", \"MUSC 491\", \"PHIL 100\", \"PHIL 102\", \"PHIL 105\", \"PHIL 125\", \"PHIL 200\", \n    \"PHIL 201\", \"PHIL 202\", \"PHIL 203\", \"PHIL 204\", \"PHIL 208\", \"PHIL 209\", \"PHIL 212\", \"PHIL 241\", \"PHIL 244\", \"PHIL 302\", \"PHIL 306\", \n    \"PHIL 307\", \"PHIL 308\", \"PHIL 309\", \"PHIL 310\", \"PHIL 313\", \"PHIL 315\", \"PHIL 316\", \"PHIL 320\", \"PHIL 322\", \"PHIL 327\", \"PHIL 335\", \n    \"PHIL 337\", \"PHIL 338\", \"PHIL 344\", \"PHIL 346\", \"PHIL 448\", \"POSC 285\", \"POSC 333\", \"POSC 435\", \"POSC 436\", \"PSYC 447\", \"RUSS 211\", \n    \"SPAN 201\", \"THEA 102\", \"THEA 104\", \"THEA 106\", \"THEA 200\", \"THEA 202\", \"THEA 203\", \"THEA 204\", \"THEA 205\", \"THEA 212\", \"THEA 226\", \n    \"THEA 227\", \"THEA 240\", \"THEA 242\", \"THEA 300\", \"THEA 301\", \"THEA 302\", \"THEA 304\", \"THEA 305\", \"THEA 308\", \"THEA 309\", \"THEA 311\", \n    \"THEA 314\", \"THEA 340\", \"THEA 360\", \"THEA 361\", \"WOMS 205\", \"WOMS 216\", \"WOMS 332\", \"WOMS 336\"]; \n\n//courses satisying arts and sciences group B requirement\nexport const groupB = [\"AFRA 110\", \"AFRA 193\", \"AFRA 220\", \"AFRA 304\", \"AFRA 306\", \"AFRA 320\", \"AFRA 329\", \"AFRA 334\", \"AFRA 362\", \"AFRA 363\", \n    \"AFRA 364\", \"AFRA 369\", \"AFRA 371\", \"AFRA 393\", \"AFRA 398\", \"AFRA 434\", \"AFRA 440\", \"AFRA 445\", \"AFRA 446\", \"AFRA 484\", \"ANTH 101\", \n    \"ANTH 105\", \"ANTH 209\", \"ANTH 210\", \"ANTH 211\", \"ANTH 212\", \"ANTH 225\", \"ANTH 228\", \"ANTH 233\", \"ANTH 265\", \"ANTH 269\", \"ANTH 275\", \n    \"ANTH 312\", \"ANTH 323\", \"ANTH 325\", \"ANTH 326\", \"ANTH 330\", \"ANTH 333\", \"ANTH 334\", \"ANTH 342\", \"ANTH 351\", \"ANTH 360\", \"ANTH 372\", \n    \"ANTH 375\", \"ANTH 383\", \"ARTH 156\", \"ARTH 158\", \"ARTH 163\", \"ARTH 164\", \"ARTH 175\", \"ARTH 204\", \"ARTH 206\", \"ARTH 207\", \"ARTH 208\", \n    \"ARTH 209\", \"ARTH 210\", \"ARTH 217\", \"ARTH 218\", \"ARTH 222\", \"ARTH 225\", \"ARTH 227\", \"ARTH 228\", \"ARTH 230\", \"ARTH 231\", \"ARTH 232\", \n    \"ARTH 233\", \"ARTH 236\", \"ARTH 238\", \"ARTH 239\", \"ARTH 242\", \"ARTH 244\", \"ARTH 246\", \"ARTH 298\", \"ARTH 299\", \"ARTH 303\", \"ARTH 304\", \n    \"ARTH 305\", \"ARTH 310\", \"ARTH 311\", \"ARTH 314\", \"ARTH 318\", \"ARTH 320\", \"ARTH 335\", \"ARTH 380\", \"ARTH 399\", \"ASIA 136\", \"BHAN 351\", \n    \"CHEM 410\", \"CHEM 412\", \"DIST 250\", \"CMLT 207\", \"CMLT 208\", \"CRJU 312\", \"CRJU 324\", \"CRJU 351\", \"CRJU 352\", \"DANC 209\", \"ECON 315\", \n    \"ECON 316\", \"EDUC 247\", \"ENGL 204\", \"ENGL 205\", \"ENGL 206\", \"ENGL 214\", \"ENGL 215\", \"ENGL 216\", \"ENGL 278\", \"ENGL 283\", \"ENGL 317\", \n    \"ENGL 321\", \"ENGL 334\", \"ENGL 340\", \"ENGL 341\", \"ENGL 342\", \"ENGL 344\", \"ENGL 345\", \"ENGL 349\", \"ENGL 368\", \"ENGL 378\", \"ENGL 381\", \n    \"ENGL 382\", \"ENGL 386\", \"FASH 213\", \"FASH 214\", \"FASH 224\", \"FASH 319\", \"FREN 207\", \"GEOG 103\", \"GEOG 226\", \"GEOG 310\", \"GRMN 208\", \n    \"GRMN 255\", \"GRMN 326\", \"HEBR 208\", \"HEBR 209\", \"HIST 101\", \"HIST 102\", \"HIST 103\", \"HIST 104\", \"HIST 105\", \"HIST 106\", \"HIST 130\", \n    \"HIST 131\", \"HIST 134\", \"HIST 135\", \"HIST 137\", \"HIST 138\", \"HIST 139\", \"HIST 140\", \"HIST 145\", \"HIST 146\", \"HIST 150\", \"HIST 152\", \n    \"HIST 156\", \"HIST 158\", \"HIST 170\", \"HIST 178\", \"HIST 180\", \"HIST 190\", \"HIST 200\", \"HIST 201\", \"HIST 210\", \"HIST 211\", \"HIST 221\", \n    \"HIST 222\", \"HIST 223\", \"HIST 224\", \"HIST 241\", \"HIST 243\", \"HIST 250\", \"HIST 252\", \"HIST 254\", \"HIST 280\", \"HIST 300\", \"HIST 302\", \n    \"HIST 304\", \"HIST 307\", \"HIST 308\", \"HIST 309\", \"HIST 310\", \"HIST 311\", \"HIST 312\", \"HIST 313\", \"HIST 314\", \"HIST 315\", \"HIST 316\", \n    \"HIST 317\", \"HIST 318\", \"HIST 319\", \"HIST 321\", \"HIST 323\", \"HIST 327\", \"HIST 328\", \"HIST 331\", \"HIST 332\", \"HIST 335\", \"HIST 336\", \n    \"HIST 337\", \"HIST 338\", \"HIST 339\", \"HIST 340\", \"HIST 341\", \"HIST 342\", \"HIST 343\", \"HIST 344\", \"HIST 345\", \"HIST 347\", \"HIST 348\", \n    \"HIST 349\", \"HIST 350\", \"HIST 351\", \"HIST 352\", \"HIST 353\", \"HIST 354\", \"HIST 355\", \"HIST 356\", \"HIST 357\", \"HIST 359\", \"HIST 360\", \n    \"HIST 361\", \"HIST 363\", \"HIST 364\", \"HIST 365\", \"HIST 368\", \"HIST 369\", \"HIST 370\", \"HIST 371\", \"HIST 373\", \"HIST 374\", \"HIST 375\", \n    \"HIST 376\", \"HIST 377\", \"HIST 378\", \"HIST 380\", \"HIST 381\", \"HIST 382\", \"HIST 384\", \"HIST 385\", \"HIST 387\", \"HIST 388\", \"HIST 389\", \n    \"HIST 390\", \"HIST 392\", \"HIST 395\", \"HIST 396\", \"HIST 397\", \"HIST 398\", \"HIST 460\", \"HONR 291\", \"HONR 293\", \"HONR 330\", \"HONR 338\", \n    \"HOSP 316\", \"HOSP 425\", \"HDFS 203\", \"ITAL 208\", \"JOUR 301\", \"JWST 101\", \"JWST 303\", \"JWST 310\", \"LARC 202\", \"LEAD 101\", \"LING 401\", \n    \"LLCU 207\", \"LLCU 208\", \"LLCU 330\", \"LLCU 333\", \"LLCU 335\", \"LLCU 336\", \"LLCU 340\", \"LLCU 345\", \"LLCU 375\", \"LLCU 430\", \"MATH 308\", \n    \"MSST 203\", \"MUSC 107\", \"MUSC 205\", \"MUSC 206\", \"MUSC 207\", \"MUSC 208\", \"MUSC 226\", \"MUSC 302\", \"MUSC 345\", \"NTDT 475\", \"PHIL 101\", \n    \"PHIL 300\", \"PHIL 301\", \"PHIL 303\", \"PHIL 305\", \"PHIL 311\", \"PHIL 312\", \"PHYS 480\", \"PLSC 100\", \"POSC 304\", \"POSC 361\", \"POSC 387\", \n    \"POSC 491\", \"PORT 207\", \"PSYC 415\", \"PSYC 420\", \"SOCI 322\", \"SPAN 207\", \"SPAN 208\", \"SPAN 307\", \"SPAN 325\", \"SPAN 326\", \"THEA 241\", \n    \"THEA 341\", \"UAPP 220\", \"WOMS 200\", \"WOMS 202\", \"WOMS 210\", \"WOMS 260\", \"WOMS 284\", \"WOMS 291\", \"WOMS 313\", \"WOMS 314\", \"WOMS 324\", \n    \"WOMS 356\"];\n\n//courses satisfying group c arts and sciences requirement\nexport const groupC = [\"AFRA 205\", \"AFRA 223\", \"AFRA 225\", \"AFRA 251\", \"AFRA 321\", \"AFRA 350\", \"AFRA 373\", \"AFRA 381\", \"ANFS 100\", \"ANTH 103\",\n    \"ANTH 218\", \"ANTH 222\", \"ANTH 223\", \"ANTH 229\", \"ANTH 230\", \"ANTH 232\", \"ANTH 234\", \"ANTH 235\", \"ANTH 236\", \"ANTH 245\", \"ANTH 255\",\n    \"ANTH 302\", \"ANTH 303\", \"ANTH 304\", \"ANTH 310\", \"ANTH 311\", \"ANTH 316\", \"ANTH 318\", \"ANTH 320\", \"ANTH 321\", \"ANTH 324\", \"ANTH 329\", \n    \"ANTH 332\", \"ANTH 337\", \"ANTH 341\", \"ANTH 352\", \"ANTH 355\", \"ANTH 356\", \"ANTH 370\", \"ANTH 379\", \"ANTH 382\", \"ANTH 401\", \"ANTH 463\", \n    \"APEC 100\", \"APEC 150\", \"APEC 212\", \"APEC 305\", \"APEC 316\", \"APEC 343\", \"APEC 406\", \"APEC 409\", \"APEC 410\", \"APEC 450\", \"ARSC 299\", \n    \"ART 215 \", \"ART 324 \", \"BHAN 155\", \"BHAN 226\", \"BHAN 236\", \"BHAN 301\", \"BHAN 322\", \"BHAN 335\", \"BUAD 301\", \"BUAD 309\", \"CGSC 170\", \n    \"CGSC 404\", \"CGSC 410\", \"CISC 356\", \"COMM 200\", \"COMM 204\", \"COMM 206\", \"COMM 227\", \"COMM 228\", \"COMM 230\", \"COMM 245\", \"COMM 305\", \n    \"COMM 341\", \"COMM 370\", \"CRJU 110\", \"CRJU 201\", \"CRJU 202\", \"CRJU 203\", \"ECON 100\", \"ECON 101\", \"ECON 103\", \"ECON 251\", \"ECON 300\", \n    \"ECON 301\", \"ECON 303\", \"ECON 304\", \"ECON 311\", \"ECON 332\", \"ECON 360\", \"ECON 381\", \"ECON 385\", \"ECON 393\", \"EDUC 297\", \"EDUC 459\", \n    \"ENEP 250\", \"ENEP 410\", \"ENEP 425\", \"ENEP 426\", \"ENEP 427\", \"ENGL 390\", \"ENGL 394\", \"ENTR 253\", \"ENTR 350\", \"ENTR 457\", \"FASH 455\", \n    \"FREN 403\", \"GEOG 102\", \"GEOG 120\", \"GEOG 229\", \"GEOG 230\", \"GEOG 235\", \"GEOG 236\", \"GEOG 311\", \"GEOG 315\", \"GEOG 320\", \"GEOG 325\", \n    \"GEOG 430\", \"HDFS 201\", \"HDFS 202\", \"HDFS 220\", \"HDFS 221\", \"HDFS 223\", \"HDFS 230\", \"HDFS 270\", \"HDFS 271\", \"HDFS 318\", \"HDFS 329\", \n    \"HDFS 330\", \"HDFS 331\", \"HDFS 333\", \"HDFS 339\", \"HDFS 401\", \"HDFS 405\", \"HDFS 409\", \"HDFS 427\", \"HLPR 211\", \"HLPR 233\", \"HLTH 320\", \n    \"HLTH 315\", \"HONR 292\", \"HONR 294\", \"HONR 331\", \"KAAP 484\", \"LEAD 100\", \"LEAD 200\", \"LEAD 300\", \"LING 101\", \"LING 102\", \"LING 203\", \n    \"LING 222\", \"LING 265\", \"LING 404\", \"LING 471\", \"MAST 375\", \"MUSC 326\", \"MUSC 487\", \"NTDT 301\", \"NTDT 455\", \"PHIL 330\", \"PHIL 410\", \n    \"PLSC 145\", \"POSC 150\", \"POSC 220\", \"POSC 230\", \"POSC 240\", \"POSC 270\", \"POSC 317\", \"POSC 322\", \"POSC 329\", \"POSC 342\", \"POSC 345\", \n    \"POSC 355\", \"POSC 380\", \"POSC 412\", \"POSC 422\", \"POSC 441\", \"POSC 451\", \"POSC 455\", \"POSC 456\", \"PSYC 100\", \"PSYC 105\", \"PSYC 303\", \n    \"PSYC 325\", \"PSYC 333\", \"PSYC 334\", \"SOCI 201\", \"SOCI 204\", \"SOCI 209\", \"SOCI 213\", \"SOCI 215\", \"SOCI 302\", \"SOCI 303\", \"SOCI 304\", \n    \"SOCI 305\", \"SOCI 308\", \"SOCI 311\", \"SOCI 325\", \"SOCI 335\", \"SOCI 343\", \"SOCI 345\", \"SOCI 360\", \"SOCI 361\", \"SOCI 375\", \"SOCI 471\", \n    \"SPTM 330\", \"SPPA 414\", \"UAPP 102\", \"UAPP 110\", \"UAPP 225\", \"UAPP 403\", \"WOMS 201\", \"WOMS 206\", \"WOMS 212\", \"WOMS 240\", \"WOMS 301\", \n    \"WOMS 304\", \"WOMS 306\", \"WOMS 355\", \"WOMS 363\", \"WOMS 389\"];\n\n//courses satisfying arts and sciences group d requirement\nexport const groupD = [\"AGRI 100\", \"ANFS 101\", \"ANFS 102\", \"ANFS 230\", \"ANFS 241\", \"ANFS 261\", \"ANFS 305\", \"ANTH 102\", \"ANTH 104\", \"ANTH 106\", \n    \"ANTH 202\", \"ANTH 204\", \"ANTH 300\", \"ANTH 301\", \"ANTH 305\", \"ANTH 306\", \"ANTH 307\", \"ANTH 404\", \"ANTH 405\", \"ANTH 424\", \"ARTC 210\", \n    \"ARTH 205\", \"BISC 103\", \"BISC 104\", \"BISC 105\", \"BISC 106\", \"BISC 107\", \"BISC 110\", \"BISC 113\", \"BISC 115\", \"BISC 116\", \"BISC 117\", \n    \"BISC 127\", \"BISC 152\", \"BISC 171\", \"BISC 195\", \"BISC 207\", \"BISC 208\", \"CHEM 100\", \"CHEM 101\", \"CHEM 102\", \"CHEM 103\", \"CHEM 104\", \n    \"CHEM 111\", \"CHEM 112\", \"CHEM 131\", \"CHEM 132\", \"CHEM 133\", \"CHEM 134\", \"CISC 101\", \"CISC 103\", \"CISC 106\", \"CISC 108\", \"CISC 181\", \n    \"ECON 415\", \"EDUC 421\", \"ELEG 303\", \"ENWC 103\", \"ENWC 201\", \"ENWC 205\", \"ENWC 215\", \"ENTR 209\", \"ENTR 460\", \"ENSC 102\", \"GEOG 101\", \n    \"GEOG 106\", \"GEOG 111\", \"GEOG 152\", \"GEOG 220\", \"GEOG 271\", \"GEOG 480\", \"GEOG 483\", \"GEOL 105\", \"GEOL 107\", \"GEOL 108\", \"GEOL 109\", \n    \"GEOL 110\", \"GEOL 113\", \"GEOL 115\", \"HLPR 222\", \"KAAP 180\", \"KAAP 220\", \"KAAP 221\", \"KAAP 309\", \"KAAP 310\", \"LARC 222\", \"LING 451\", \n    \"MAST 120\", \"MAST 200\", \"MAST 202\", \"MAST 215\", \"MATH 201\", \"MATH 210\", \"MATH 221\", \"MATH 222\", \"MATH 230\", \"MATH 231\", \"MATH 232\", \n    \"MATH 241\", \"MATH 242\", \"MMSC 160\", \"MMSC 200\", \"MMSC 220\", \"MMSC 230\", \"MMSC 240\", \"MMSC 450\", \"MSEG 288\", \"MUSC 106\", \"NSCI 100\", \n    \"NSCI 320\", \"NTDT 200\", \"PHIL 205\", \"PHIL 207\", \"PHIL 211\", \"PHYS 133\", \"PHYS 141\", \"PHYS 143\", \"PHYS 144\", \"PHYS 145\", \"PHYS 146\", \n    \"PHYS 201\", \"PHYS 202\", \"PHYS 203\", \"PHYS 204\", \"PHYS 207\", \"PHYS 208\", \"PHYS 221\", \"PHYS 222\", \"PHYS 227\", \"PHYS 228\", \"PHYS 403\", \n    \"PHYS 404\", \"PLSC 101\", \"PLSC 140\", \"PLSC 170\", \"PLSC 204\", \"PLSC 212\", \"PLSC 214\", \"PLSC 218\", \"PLSC 302\", \"PSYC 314\", \"SCEN 101\", \n    \"SCEN 102\", \"SCEN 105\", \"SCEN 107\", \"SCEN 109\", \"SCEN 111\", \"SCEN 115\", \"SCEN 117\", \"SCEN 119\", \"STAT 200\", \"WOMS 422\"];\n\n//courses satisfying capstone requirement\nexport const capstone = [\"ACCT 425\", \"AFRA 480\", \"AFRA 490\", \"AGRI 400\", \"ANFS 404\", \"ANFS 411\", \"ANFS 417\", \"ANFS 418\", \"ANFS 421\", \"ANFS 422\", \n    \"ANFS 426\", \"ANTH 486\", \"ANTH 487\", \"ANTH 488\", \"ANTH 489\", \"APEC 409\", \"APEC 450\", \"ART 403 \", \"ART 419 \", \"ARTC 495\", \"ARTH 402\", \n    \"ARTH 405\", \"ARTH 406\", \"ARTH 413\", \"ARTH 414\", \"ARTH 415\", \"ARTH 417\", \"ARTH 419\", \"ARTH 421\", \"ARTH 422\", \"ARTH 423\", \"ARTH 424\", \n    \"ARTH 425\", \"ARTH 427\", \"ARTH 429\", \"ARTH 431\", \"ARTH 433\", \"ARTH 435\", \"ARTH 440\", \"ARTH 445\", \"ARTH 456\", \"ARSC 480\", \"ARSC 482\", \n    \"BHAN 464\", \"BISC 315\", \"BISC 316\", \"BISC 411\", \"BISC 412\", \"BISC 413\", \"BISC 484\", \"BMEG 450\", \"BUAD 441\", \"BUAD 445\", \"BUAD 479\", \n    \"CHEG 432\", \"CHEM 402\", \"CHEM 465\", \"CHEM 468\", \"CIEG 461\", \"CIEG 491\", \"CGSC 380\", \"CGSC 451\", \"CGSC 470\", \"CGSC 485\", \"COMM 408\", \n    \"COMM 409\", \"COMM 413\", \"COMM 417\", \"COMM 421\", \"COMM 423\", \"COMM 424\", \"COMM 426\", \"COMM 427\", \"COMM 431\", \"COMM 443\", \"COMM 450\", \n    \"COMM 452\", \"COMM 453\", \"COMM 456\", \"COMM 458\", \"COMM 468\", \"COMM 476\", \"COMM 485\", \"COMM 490\", \"CISC 475\", \"CISC 499\", \"CRJU 357\", \n    \"CRJU 417\", \"CRJU 420\", \"CRJU 424\", \"CRJU 425\", \"CRJU 431\", \"CRJU 435\", \"CRJU 437\", \"CRJU 451\", \"CRJU 452\", \"CRJU 456\", \"CRJU 460\", \n    \"CRJU 475\", \"CRJU 489\", \"CRJU 495\", \"ECON 422\", \"ECON 433\", \"ECON 435\", \"ECON 436\", \"EDUC 400\", \"EDUC 422\", \"EDUC 433\", \"ELEG 498\", \n    \"ENEP 364\", \"ENEP 472\", \"ENEP 485\", \"ENGL 462\", \"ENGL 464\", \"ENGL 480\", \"ENWC 465\", \"ENTR 455\", \"ENSC 450\", \"FASH 484\", \"FASH 490\", \n    \"FINC 425\", \"FINC 426\", \"GAME 490\", \"GEOG 445\", \"GEOG 479\", \"GEOL 306\", \"GEOL 401\", \"GEOL 405\", \"HIST 400\", \"HLTH 492\", \"HLTH 495\", \n    \"HOSP 450\", \"HOSP 489\", \"HOSP 495\", \"HDFS 422\", \"HDFS 428\", \"HDFS 449\", \"JAPN 490\", \"KAAP 400\", \"KAAP 441\", \"KAAP 442\", \"KAAP 485\", \n    \"KAAP 487\", \"LARC 456\", \"LLCU 499\", \"LEAD 490\", \"LEST 450\", \"LING 401\", \"LING 471\", \"LING 480\", \"MISY 432\", \"MAST 309\", \"MAST 476\", \n    \"MAST 492\", \"MSEG 401\", \"MATH 420\", \"MATH 460\", \"MATH 512\", \"MATH 530\", \"MATH 549\", \"MEEG 401\", \"MEEG 402\", \"MMSC 441\", \"MMSC 442\", \n    \"MMSC 443\", \"MMSC 444\", \"MMSC 462\", \"MMSC 473\", \"MMSC 474\", \"MMSC 475\", \"MMSC 476\", \"MMSC 477\", \"MMSC 478\", \"MMSC 479\", \"MMSC 481\", \n    \"MUSC 420\", \"MUSC 423\", \"MUSC 458\", \"MUSC 464\", \"MUSC 483\", \"MUSC 499\", \"NSCI 407\", \"NSCI 429\", \"NSCI 430\", \"NSCI 468\", \"NURS 443\", \n    \"NURS 477\", \"NURS 478\", \"NURS 479\", \"NURS 485\", \"NTDT 403\", \"PHIL 465\", \"PHYS 460\", \"PHYS 468\", \"PLSC 455\", \"POSC 468\", \"POSC 497\", \n    \"POSC 498\", \"POSC 499\", \"PSYC 405\", \"PSYC 409\", \"PSYC 415\", \"PSYC 420\", \"PSYC 435\", \"PSYC 466\", \"PSYC 468\", \"SOCI 407\", \"SOCI 410\", \n    \"SOCI 413\", \"SOCI 415\", \"SOCI 416\", \"SOCI 418\", \"SOCI 420\", \"SOCI 425\", \"SOCI 428\", \"SOCI 430\", \"SOCI 433\", \"SOCI 444\", \"SOCI 449\", \n    \"SOCI 450\", \"SOCI 470\", \"SOCI 471\", \"SPAN 491\", \"SPTM 464\", \"STAT 468\", \"UAPP 440\", \"UNIV 402\", \"UNIV 468\", \"WOMS 403\", \"WOMS 410\"];\n\n//courses satisfying second writing requirement for Arts and Sciences\nexport const secondWrite = [\"AFRA 250\", \"AFRA 304\", \"AFRA 305\", \"AFRA 306\", \"AFRA 314\", \"AFRA 325\", \"AFRA 329\", \"AFRA 362\", \"AFRA 363\", \n    \"AFRA 370\", \"AFRA 398\", \"AFRA 434\", \"AFRA 440\", \"AFRA 442\", \"AFRA 443\", \"AFRA 445\", \"AFRA 484\", \"ANTH 326\", \"ANTH 486\", \"ANTH 487\", \n    \"ANTH 488\", \"ANTH 489\", \"ART 315 \", \"ART 324 \", \"ARTH 301\", \"ARTH 302\", \"ARTH 303\", \"ARTH 310\", \"ARTH 311\", \"ARTH 314\", \"ARTH 323\", \n    \"ARTH 332\", \"ARTH 333\", \"ARTH 334\", \"ARTH 335\", \"ARTH 380\", \"ARTH 402\", \"ARTH 403\", \"ARTH 405\", \"ARTH 406\", \"ARTH 413\", \"ARTH 417\", \n    \"ARTH 419\", \"ARTH 423\", \"ARTH 429\", \"ARTH 431\", \"ARTH 433\", \"ARTH 435\", \"ARTH 440\", \"ARTH 445\", \"ARTH 444\", \"ARTH 456\", \"ARSC 316\", \n    \"BISC 452\", \"BISC 498\", \"CHEM 410\", \"CHEM 412\", \"CGSC 420\", \"CGSC 485\", \"COMM 306\", \"COMM 311\", \"COMM 329\", \"COMM 423\", \"COMM 424\", \n    \"COMM 427\", \"COMM 485\", \"CRJU 312\", \"CRJU 417\", \"CRJU 452\", \"CRJU 460\", \"CRJU 489\", \"ENEP 410\", \"ENEP 427\", \"ENEP 425\", \"ENEP 426\", \n    \"ENEP 468\", \"ENEP 470\", \"ENEP 472\", \"ENGL 225\", \"ENGL 280\", \"ENGL 301\", \"ENGL 304\", \"ENGL 305\", \"ENGL 306\", \"ENGL 307\", \"ENGL 308\", \n    \"ENGL 309\", \"ENGL 312\", \"ENGL 317\", \"ENGL 318\", \"ENGL 321\", \"ENGL 322\", \"ENGL 324\", \"ENGL 325\", \"ENGL 328\", \"ENGL 331\", \"ENGL 332\", \n    \"ENGL 334\", \"ENGL 338\", \"ENGL 340\", \"ENGL 341\", \"ENGL 342\", \"ENGL 344\", \"ENGL 345\", \"ENGL 347\", \"ENGL 348\", \"ENGL 351\", \"ENGL 352\", \n    \"ENGL 356\", \"ENGL 365\", \"ENGL 368\", \"ENGL 371\", \"ENGL 372\", \"ENGL 373\", \"ENGL 374\", \"ENGL 376\", \"ENGL 380\", \"ENGL 381\", \"ENGL 382\", \n    \"ENGL 385\", \"ENGL 386\", \"ENGL 409\", \"ENGL 410\", \"ENGL 411\", \"ENGL 412\", \"ENGL 413\", \"ENGL 416\", \"ENGL 418\", \"ENGL 430\", \"ENGL 450\", \n    \"ENGL 480\", \"ENGL 491\", \"GEOG 346\", \"GEOG 445\", \"GEOL 401\", \"HIST 250\", \"HIST 300\", \"HIST 302\", \"HIST 307\", \"HIST 308\", \"HIST 309\", \n    \"HIST 310\", \"HIST 313\", \"HIST 314\", \"HIST 318\", \"HIST 319\", \"HIST 323\", \"HIST 328\", \"HIST 334\", \"HIST 335\", \"HIST 337\", \"HIST 338\", \n    \"HIST 340\", \"HIST 341\", \"HIST 348\", \"HIST 349\", \"HIST 350\", \"HIST 352\", \"HIST 353\", \"HIST 354\", \"HIST 355\", \"HIST 356\", \"HIST 359\", \n    \"HIST 360\", \"HIST 361\", \"HIST 363\", \"HIST 365\", \"HIST 368\", \"HIST 369\", \"HIST 370\", \"HIST 373\", \"HIST 374\", \"HIST 377\", \"HIST 378\", \n    \"HIST 380\", \"HIST 382\", \"HIST 387\", \"HIST 388\", \"HIST 389\", \"HIST 392\", \"HIST 395\", \"HIST 397\", \"HIST 400\", \"HIST 411\", \"HIST 439\", \n    \"HIST 471\", \"HIST 473\", \"HIST 474\", \"HIST 475\", \"HIST 477\", \"HIST 479\", \"LLCU 321\", \"LLCU 327\", \"LLCU 328\", \"LLCU 329\", \"LLCU 330\", \n    \"LLCU 332\", \"LLCU 335\", \"LLCU 338\", \"LLCU 340\", \"LLCU 375\", \"LLCU 380\", \"LLCU 416\", \"LLCU 430\", \"LLCU 490\", \"LLCU 495\", \"MCST 402\", \n    \"MATH 308\", \"MATH 512\", \"MUSC 312\", \"MUSC 313\", \"MUSC 345\", \"MUSC 407\", \"NSCI 407\", \"NSCI 442\", \"PHIL 300\", \"PHIL 444\", \"PHIL 465\", \n    \"PHYS 460\", \"PHYS 480\", \"POSC 380\", \"POSC 387\", \"POSC 408\", \"POSC 411\", \"POSC 413\", \"POSC 414\", \"POSC 415\", \"POSC 419\", \"POSC 426\", \n    \"POSC 429\", \"POSC 433\", \"POSC 436\", \"POSC 443\", \"POSC 446\", \"POSC 448\", \"POSC 450\", \"POSC 459\", \"POSC 472\", \"POSC 482\", \"PSYC 314\", \n    \"PSYC 340\", \"PSYC 350\", \"PSYC 380\", \"PSYC 394\", \"PSYC 402\", \"PSYC 405\", \"PSYC 414\", \"PSYC 415\", \"PSYC 416\", \"PSYC 420\", \"PSYC 425\", \n    \"PSYC 445\", \"PSYC 492\", \"SOCI 305\", \"SOCI 407\", \"SOCI 415\", \"SOCI 418\", \"SOCI 425\", \"SOCI 428\", \"SOCI 433\", \"SOCI 444\", \"SOCI 449\", \n    \"SOCI 450\", \"SOCI 470\", \"THEA 340\", \"ENEP 425\", \"UAPP 230\", \"UAPP 401\", \"UNIV 402\", \"UNIV 490\", \"UNIV 491\", \"UNIV 495\", \"WOMS 308\", \n    \"WOMS 313\"];\n\n//interface that has all the university requirements\nexport interface univReqs{\n    \"ENGL 110\": boolean,  //E 110 req 3 cr\n    \"FYS\": boolean,       //First year experience 0-4 cr\n    \"DLE\": boolean,       //Discovery Learning Experience 3 cr\n    \"Multi\": boolean,     //Multicultural 3 cr  ***Can count also towards groups A-D***\n    \"groupA\": boolean,    //Creative Arts and Humanities 3 cr\n    \"groupB\": boolean,    //History and Cultural change 3 cr\n    \"groupC\": boolean,    // Social and Behavioral Sciences 3cr\n    \"groupD\": boolean,    // Math, Natural Science, Tech 3 cr\n    \"capstone\": boolean,  //Capstone\n}\n\n//list of engineering breadth courses\nexport const engineerBreadth = [\"AFRA 305\", \"AFRA 308\", \"AFRA 330\", \"AFRA 443\", \"ANTH 354\", \"APEC 324\", \"ARAB 105\", \"ARAB 106\", \"ARAB 107\", \n    \"ARAB 200\", \"ARAB 201\", \"ARAB 205\", \"ARAB 208\", \"ART 406 \", \"ARTH 198\", \"ARTH 199\", \"ARTH 249\", \"CHIN 105\", \"CHIN 106\", \"CHIN 107\", \n    \"CHIN 200\", \"CHIN 201\", \"CHIN 205\", \"CHIN 206\", \"CHIN 208\", \"CHIN 451\", \"CHIN 452\", \"CHIN 455\", \"CRJU 340\", \"CRJU 355\", \"CRJU 369\", \n    \"CRJU 375\", \"ECON 308\", \"ECON 320\", \"ECON 340\", \"ECON 408\", \"ECON 418\", \"ECON 430\", \"ECON 433\", \"ECON 443\", \"ECON 483\", \"ELEG 491\", \n    \"ENGL 214\", \"ENGL 294\", \"ENGL 301\", \"ENGL 312\", \"ENGL 318\", \"ENGL 322\", \"ENGL 325\", \"ENGL 328\", \"ENGL 331\", \"ENGL 332\", \"ENGL 338\", \n    \"ENGL 347\", \"ENGL 351\", \"ENGL 352\", \"ENGL 353\", \"ENGL 356\", \"ENGL 368\", \"ENGL 371\", \"ENGL 372\", \"ENGL 373\", \"ENGL 381\", \"ENGL 382\", \n    \"ENGL 410\", \"ENGL 413\", \"ENGL 472\", \"ENGL 494\", \"FASH 419\", \"FREN 105\", \"FREN 106\", \"FREN 107\", \"FREN 200\", \"FREN 205\", \"FREN 206\", \n    \"FREN 208\", \"FREN 209\", \"FREN 250\", \"FREN 301\", \"FREN 302\", \"FREN 303\", \"FREN 305\", \"FREN 306\", \"FREN 307\", \"FREN 308\", \"FREN 309\", \n    \"FREN 314\", \"FREN 325\", \"FREN 326\", \"FREN 350\", \"FREN 355\", \"FREN 376\", \"FREN 404\", \"FREN 405\", \"FREN 406\", \"FREN 407\", \"FREN 409\", \n    \"FREN 411\", \"FREN 412\", \"FREN 423\", \"FREN 424\", \"FREN 437\", \"FREN 438\", \"FREN 441\", \"FREN 442\", \"FREN 445\", \"FREN 446\", \"FREN 451\", \n    \"FREN 452\", \"FREN 453\", \"FREN 454\", \"FREN 455\", \"FREN 456\", \"FREN 457\", \"FREN 458\", \"FREN 459\", \"FREN 460\", \"FREN 476\", \"GEOG 230\", \n    \"GEOG 422\", \"GREK 101\", \"GREK 102\", \"GREK 201\", \"GREK 202\", \"GREK 366\", \"GREK 466\", \"GRMN 103\", \"GRMN 104\", \"GRMN 105\", \"GRMN 106\", \n    \"GRMN 107\", \"GRMN 200\", \"GRMN 205\", \"GRMN 206\", \"GRMN 235\", \"HEBR 105\", \"HEBR 106\", \"HEBR 107\", \"HEBR 205\", \"HEBR 366\", \"HEBR 466\", \n    \"HIST 336\", \"HIST 339\", \"HIST 350\", \"HIST 365\", \"ITAL 105\", \"ITAL 106\", \"ITAL 107\", \"ITAL 200\", \"ITAL 205\", \"ITAL 206\", \"JAPN 105\", \n    \"JAPN 106\", \"JAPN 107\", \"JAPN 200\", \"JAPN 201\", \"JAPN 202\", \"JAPN 205\", \"JAPN 206\", \"JAPN 208\", \"JAPN 209\", \"LLCU 105\", \"LLCU 106\", \n    \"LLCU 107\", \"LLCU 330\", \"LATN 101\", \"LATN 102\", \"LATN 201\", \"LATN 202\", \"MUSC 153\", \"MUSC 195\", \"MUSC 211\", \"MUSC 311\", \"MUSC 312\", \n    \"MUSC 313\", \"MUSC 328\", \"MUSC 363\", \"MUSC 403\", \"MUSC 405\", \"MUSC 407\", \"MUSC 430\", \"MUSC 484\", \"MUSC 485\", \"POSC 301\", \"POSC 309\", \n    \"POSC 310\", \"POSC 455\", \"POSC 313\", \"POSC 316\", \"POSC 317\", \"POSC 320\", \"POSC 322\", \"POSC 324\", \"POSC 330\", \"POSC 339\", \"POSC 340\", \n    \"POSC 350\", \"POSC 355\", \"POSC 377\", \"POSC 380\", \"POSC 407\", \"POSC 413\", \"POSC 417\", \"PORT 216\", \"PORT 316\", \"PSYC 310\", \"PSYC 312\", \n    \"PSYC 340\", \"PSYC 390\", \"PSYC 406\", \"PSYC 416\", \"PSYC 425\", \"PSYC 445\", \"PSYC 447\", \"RUSS 105\", \"RUSS 106\", \"RUSS 107\", \"RUSS 200\", \n    \"RUSS 205\", \"SOCI 203\", \"SOCI 312\", \"SOCI 323\", \"SOCI 341\", \"SOCI 348\", \"SOCI 415\", \"SOCI 416\", \"SOCI 418\", \"SOCI 428\", \"SOCI 430\", \n    \"SOCI 450\", \"SPAN 105\", \"SPAN 106\", \"SPAN 107\", \"SPAN 200\", \"SPAN 205\", \"SPAN 206\", \"SPAN 300\", \"SPAN 301\", \"SPAN 302\", \"SPAN 303\", \n    \"SPAN 304\", \"SPAN 305\", \"SPAN 306\", \"SPTM 320\", \"UAPP 406\"];\n\n//courses satisfying engineering professional development\nexport const engineerProfess = [\"ACCT 352\", \"AFSC 310\", \"AFSC 311\", \"BUAD 100\", \"BUAD 306\", \"BUAD 429\", \"CHEG 410\", \"ECON 251\", \"ENGL 392\", \n    \"EDUC 413\", \"EDUC 414\", \"EDUC 419\", \"EDUC 420\", \"SCEN 491\", \"ENEP 117\", \"ENEP 402\", \"ENEP 470\", \"ENTR 150\", \"ENTR 155\", \"ENTR 156\", \n    \"ENTR 157\", \"ENTR 351\", \"ENTR 353\", \"ENTR 356\", \"ENTR 364\", \"ENTR 420\", \"ENTR 450\", \"ENTR 451\", \"ENTR 455\", \"ENTR 456\", \"ENTR 457\", \n    \"ENTR 458\", \"FINC 459\", \"ENTR 460\", \"ENTR 464\", \"FINC 200\", \"LEAD 110\", \"LEAD 341\", \"LEAD 400\", \"LEAD 404\", \"LEAD 411\", \"UAPP 325\", \n    \"UAPP 406\", \"UAPP 411\", \"UAPP 421\"];\n\n//cisc courses not satisfying tech elective\nexport const noTech = [\"CISC 355\", \"CISC 356\", \"CISC 357\", \"CISC 366\", \"CISC 465\", \"CISC 466\"];\n\n//returns map object that has course code with a boolean.  boolean is for if course has been used to satisfy a req\nexport function accumulateCourses(semesters: Semester[]):Map<string, boolean>{\n    let cours = new Map<string, boolean>();\n    for (let i = 0; i < semesters.length; i++){\n        for (let j = 0; j < semesters[i].courses.length; j++){\n            cours = cours.set(semesters[i].courses[j].info.code, false);\n        }\n    }\n    return cours;\n}\n\n//gets courses that are in both subCourse and potentialCourses arrays\nexport function findCommonCourses(subCourse: string[], potentialCourses: string[]): string[]{\n    let courses: string[] = [];\n    for (let i = 0; i < subCourse.length; i++){\n        if(potentialCourses.includes(subCourse[i])){\n            courses = [...courses, subCourse[i]];\n        }\n    }\n    return courses;\n}","import { Semester } from \"../interfaces/semester\";\nimport { findCourse } from \"../utilities/findCourse\";\nimport { univReqs, noTech, accumulateCourses, findCommonCourses, secondWrite, dle, firstYearExp, capstone, multiCult, groupA, groupB, groupC, groupD } from \"./univReqs\";\n\nexport interface CSBA {\n    \"univ\": univReqs,\n    //Course work for the four groups cannot be all of same prefix\n    \"aExtra\": boolean, //same as Group A for univ, cannot overlap 6 cr\n    \"bExtra\": boolean, //cannot overlap 6 cr\n    \"cExtra\": boolean, //cannot overlap 6 cr\n    \"dExtra\": boolean, //cannot overlap 7 cr, 4 must be natural scince with lab\n    \"lang\": boolean, //completion of 107, 112, or 202 level language course\n    \"secondWrite\": boolean, //Second writing requirement, approved by Col A&S\n    // For the following, if there is no prefix, it means CISC\n    \"108\": boolean,\n    \"181\": boolean,\n    \"210\": boolean,\n    \"220\": boolean,\n    \"260\": boolean,\n    \"275\": boolean,\n    \"fifteenAt301\": boolean, //Must be tech electives, excludes noTech Courses\n    \"MATH 210\": boolean,\n    \"MATH 241\": boolean,\n    \"124\": boolean          //124 Credits needed to graduate\n}\n\nconst languages = [\"GREK 202\", \"CHIN 107\", \"FREN 107\", \"GRMN 107\", \"ITAL 107\", \"JAPN 107\", \"JAPN 202\", \"LATN 202\", \"RUSS 107\", \"SPAN 107\"];\n\nexport function updateCSBA(semesters: Semester[]): CSBA {\n    let totalCreds = 0;\n    for (let i = 0; i < semesters.length; i++){\n        for (let j = 0; j < semesters[i].courses.length; j++){\n            totalCreds = totalCreds + +semesters[i].courses[j].info.credits;\n        }\n    }\n    const cours = accumulateCourses(semesters);\n    let courseNames = Array.from(cours.keys());\n    let e110 = false;\n    let fys = false;\n    let dles = false;\n    let multi = false;\n    let groupa = false;\n    let groupb = false;\n    let groupc = false;\n    let groupd = false;\n    let caps = false;\n    let aExtra = false;\n    let bExtra = false;\n    let cExtra = false;\n    let dExtra = false;\n    let lang = false;\n    let secondWrites = false;\n    let c108 = false;\n    let c181 = false;\n    let c210 = false;\n    let c220 = false;\n    let c260 = false;\n    let c275 = false;\n    let fifteenat301 = false;\n    let m210 = false;\n    let m241 = false;\n    let total124 = false;\n    if(totalCreds >= 124){\n        total124 = true;\n    }\n    //check specific courses\n    if(courseNames.includes(\"ENGL 110\")){\n        e110 = true;\n        courseNames = courseNames.filter(key => key != \"ENGL 110\");\n    }\n    if(courseNames.includes(\"CISC 108\")){\n        c108 = true;\n        courseNames = courseNames.filter(key => key != \"CISC 108\");\n    }\n    if(courseNames.includes(\"CISC 181\")){\n        c181 = true;\n        courseNames = courseNames.filter(key => key != \"CISC 181\");\n    }\n    if(courseNames.includes(\"CISC 210\")){\n        c210 = true;\n        courseNames = courseNames.filter(key => key != \"CISC 210\");\n    }\n    if(courseNames.includes(\"CISC 220\")){\n        c220 = true;\n        courseNames = courseNames.filter(key => key != \"CISC 220\");\n    }\n    if(courseNames.includes(\"CISC 260\")){\n        c260 = true;\n        courseNames = courseNames.filter(key => key != \"CISC 260\");\n    }\n    if(courseNames.includes(\"CISC 275\")){\n        c275 = true;\n        courseNames = courseNames.filter(key => key != \"CISC 275\");\n    }\n    if(courseNames.includes(\"MATH 210\")){\n        m210 = true;\n        courseNames = courseNames.filter(key => key != \"MATH 210\");\n    }\n    if(courseNames.includes(\"MATH 241\")){\n        m241 = true;\n        courseNames = courseNames.filter(key => key != \"MATH 241\");\n    }\n    //language req\n    const potLang = findCommonCourses(courseNames, languages);\n    if(potLang.length > 0){\n        lang = true;\n        courseNames = courseNames.filter(key => key != potLang[0]);\n    }\n    //15 more cisc courses\n    let fifteen = 0;\n    for(let i = 0; i < courseNames.length; i++){\n        if(courseNames[i].substr(0, 4) === \"CISC\" && (+courseNames[i][4] >= 3) && !noTech.includes(courseNames[i])){\n            fifteen = fifteen + +findCourse(courseNames[i]).credits;\n            courseNames = courseNames.filter(key => key != courseNames[i]); \n            i = i - 1;\n        }\n        if(fifteen >= 15){\n            fifteenat301 = true;\n            break;\n        }\n    }\n    //second writing req\n    const second = findCommonCourses(courseNames, secondWrite);\n    if(second.length > 0){\n        secondWrites = true;\n    }\n    //breadth\n    const discov = findCommonCourses(courseNames, dle);\n    if(discov.length > 0){\n        dles = true;\n    }\n    const first = findCommonCourses(courseNames, firstYearExp);\n    if(first.length > 0){\n        fys = true;\n    }\n    const capstones = findCommonCourses(courseNames, capstone);\n    if(capstones.length > 0){\n        caps = true;\n    }\n    const cultural = findCommonCourses(courseNames, multiCult);\n    if(cultural.length > 0){\n        multi = true;\n    }\n    const a = findCommonCourses(courseNames, groupA);\n    if(a.length >= 1){\n        groupa = true;\n    }\n    if(a.length >= 3){\n        aExtra = true;\n    }\n    const b = findCommonCourses(courseNames, groupB);\n    if(b.length >= 1){\n        groupb = true;\n    }\n    if(b.length >= 3){\n        bExtra = true;\n    }\n    const c = findCommonCourses(courseNames, groupC);\n    if(c.length >= 1){\n        groupc = true;\n    }\n    if(c.length >= 3){\n        cExtra = true;\n    }\n    const d = findCommonCourses(courseNames, groupD);\n    if(d.length >= 1){\n        groupd = true;\n    }\n    if(d.length >= 3){\n        dExtra = true;\n    }\n\n    const univ:univReqs =  {\n        \"ENGL 110\": e110,  \n        \"FYS\": fys,       \n        \"DLE\": dles,       \n        \"Multi\": multi,     \n        \"groupA\": groupa,    \n        \"groupB\": groupb,    \n        \"groupC\": groupc,    \n        \"groupD\": groupd,    \n        \"capstone\": caps,\n    };\n\n    return {\"univ\": univ, \"aExtra\": aExtra, \"bExtra\": bExtra, \"cExtra\": cExtra, \"dExtra\": dExtra, \n        \"lang\": lang, \"secondWrite\": secondWrites, \"108\": c108, \"181\": c181, \n        \"210\": c210, \"220\": c220, \"260\": c260, \"275\": c275, \"fifteenAt301\": fifteenat301, \n        \"MATH 210\": m210, \"MATH 241\": m241, \"124\": total124};\n}","import React from \"react\";\nimport Titles from \"../data/keyToTitle.json\";\nimport \"../App.css\"\n;interface reqCourseText {\n    courseKeys : string[];\n    fulfilled : boolean;\n}\n\nconst TITLES: Record<string,Record<string,string>> = Titles;\n\nexport function ReqCourseText({courseKeys, fulfilled}: reqCourseText): JSX.Element {\n    \n    // Retrieves the title for a given key\n    function getTitle(key: string) {\n        if (Object.keys(TITLES).includes(key)) {\n            return TITLES[key][\"title\"];\n        }\n        return key;\n    }\n\n    // Returns either crossed out or not crossed out list\n    if (fulfilled) {\n        return <div>{courseKeys.map(key => <li key={key}><del>{getTitle(key)}</del></li>)}</div>;\n    } else {\n        return <div>{courseKeys.map(key => <li key={key}>{getTitle(key)}</li>)}</div>;\n    }\n}\n","import { Semester } from \"../interfaces/semester\";\nimport { univReqs, noTech, accumulateCourses, dle, groupA, groupB, groupC, groupD, engineerBreadth, engineerProfess, findCommonCourses, firstYearExp, multiCult } from \"./univReqs\";\n\nconst restrict = [\"CISC 436\", \"CISC 437\", \"CISC 489\", \"CISC 889\", \"EDUC 462\", \"ELEG 404\", \"ELEG 418\", \"ELEG 387\", \"ELEG 487\", \n    \"LING 202\", \"LING 404\", \"LING 418\", \"LING 444\", \"LING 451\", \"LING 455\", \"MAST 632\", \"MATH 242\", \"MATH 349\", \"MEEG 671\", \n    \"PSYC 310\", \"PSYC 340\", \"PSYC 344\"];\n\nexport interface CSAIRobots {\n    \"univ\": univReqs,\n    \"9 extra\": boolean, //can be from Group A, B, C or engineer breadth (No math/science/tech)\n    //6 must be at 300 level, or foreign lang at 107 or higher\n    //Max of 6 credits can come from Career and Professional Prep\n\n    // For the following, if there is no prefix, it means CISC\n    \"108\": boolean,\n    \"181\": boolean,\n    \"210\": boolean,\n    \"220\": boolean,\n    \"260\": boolean,\n    \"275\": boolean,\n    \"303\":boolean,\n    \"320\": boolean,\n    \"MATH 210\": boolean,\n    \"MATH 241\": boolean,\n    \"caps\": boolean, //(CISC 498 + CISC 499) OR (UNIV 401 + UNIV 402)\n    \"science\": boolean,\n    //OP 1: PHYS 207, PHYS 227, PHYS 208, PHYS 208, PHYS 228\n    //OP2: CHEM 103, CHEM 133, CHEM 104, CHEM 134\n    //OP 3: BISC 207, BISC 208\n    //OP 4: GEOL 105, GEOL 107, GEOL 115\n    //OP5: GEOL 107, GEOL 110\n    \"writing\": boolean, //ENGL 312 OR ENGL 410\n    \"355\": boolean, //ETHICS\n    // ENGL 312, ENGL 410 AND CISC 355 count for Engineer Breadth\n    \n    \"304\": boolean,\n    \"442\": boolean,\n    \"481\": boolean,\n    \"483\": boolean,\n    \"484\": boolean,\n    \"Prob/Stat\": boolean, //MATH 205 or MATH 350\n    \"systems\": boolean //CISC 361 or CISC 372\n    \"12Restrict\": boolean, //12 from list called restrict\n    \"cisc3-4Elect\": boolean, //3-4 credits of CISC AT 300 level or higher\n    \"124\": boolean          //124 Credits needed to graduate\n}\n\nexport function updateCSAIRobots(semesters: Semester[]): CSAIRobots {\n    let totalCreds = 0;\n    for (let i = 0; i < semesters.length; i++){\n        for (let j = 0; j < semesters[i].courses.length; j++){\n            totalCreds = totalCreds + +semesters[i].courses[j].info.credits;\n        }\n    }\n    const cours = accumulateCourses(semesters);\n    let courseNames = Array.from(cours.keys());\n\n    let e110 = false;\n    let fys = false;\n    let dles = false;\n    let multi = false;\n    let groupa = false;\n    let groupb = false;\n    let groupc = false;\n    let groupd = false;\n    let caps = false;\n\n    let extra9 = false;\n\n    let c108 = false;\n    let c181 = false;\n    let c210 = false;\n    let c220 = false;\n    let c260 = false;\n    let c275 = false;\n    let c303 = false;\n    let c320 = false;\n    let m210 = false;\n    let m241 = false;\n\n    let majCaps = false;\n    let science = false;\n    let writing = false;\n    let c355 = false;\n\n    let c304 = false;\n    let c442 = false;\n    let c481 = false;\n    let c483 = false;\n    let c484 = false;\n\n    let stats = false;\n    let systems = false;\n\n    let extra12 = false;\n    let extra34 = false;\n    \n    let total124 = false;\n\n    if(totalCreds >= 124){\n        total124 = true;\n    }\n    //check specific courses\n    if(courseNames.includes(\"ENGL 110\")){\n        e110 = true;\n        courseNames = courseNames.filter(key => key != \"ENGL 110\");\n    }\n    if(courseNames.includes(\"CISC 108\")){\n        c108 = true;\n        courseNames = courseNames.filter(key => key != \"CISC 108\");\n    }\n    if(courseNames.includes(\"CISC 181\")){\n        c181 = true;\n        courseNames = courseNames.filter(key => key != \"CISC 181\");\n    }\n    if(courseNames.includes(\"CISC 210\")){\n        c210 = true;\n        courseNames = courseNames.filter(key => key != \"CISC 210\");\n    }\n    if(courseNames.includes(\"CISC 220\")){\n        c220 = true;\n        courseNames = courseNames.filter(key => key != \"CISC 220\");\n    }\n    if(courseNames.includes(\"CISC 260\")){\n        c260 = true;\n        courseNames = courseNames.filter(key => key != \"CISC 260\");\n    }\n    if(courseNames.includes(\"CISC 275\")){\n        c275 = true;\n        courseNames = courseNames.filter(key => key != \"CISC 275\");\n    }\n    if(courseNames.includes(\"CISC 303\")){\n        c303 = true;\n        courseNames = courseNames.filter(key => key != \"CISC 303\");\n    }\n    if(courseNames.includes(\"CISC 320\")){\n        c320 = true;\n        courseNames = courseNames.filter(key => key != \"CISC 320\");\n    }\n    if(courseNames.includes(\"MATH 210\")){\n        m210 = true;\n        courseNames = courseNames.filter(key => key != \"MATH 210\");\n    }\n    if(courseNames.includes(\"MATH 241\")){\n        m241 = true;\n        courseNames = courseNames.filter(key => key != \"MATH 241\");\n    }\n\n    //capstone\n    if(courseNames.includes(\"CISC 498\") && courseNames.includes(\"CISC 499\")){\n        caps = true;\n        majCaps = true;\n        courseNames = courseNames.filter(key => key != \"CISC 498\");\n        courseNames = courseNames.filter(key => key != \"CISC 499\");\n    } else if(courseNames.includes(\"UNIV 401\") && courseNames.includes(\"UNIV 402\")){\n        caps = true;\n        majCaps = true;\n        courseNames = courseNames.filter(key => key != \"UNIV 401\");\n        courseNames = courseNames.filter(key => key != \"UNIV 402\");\n    }\n\n    //lab science\n    if(courseNames.includes(\"PHYS 207\") && courseNames.includes(\"PHYS 227\") && courseNames.includes(\"PHYS 208\") && courseNames.includes(\"PHYS 228\")){\n        science = true;\n        courseNames = courseNames.filter(key => key != \"PHYS 207\");\n        courseNames = courseNames.filter(key => key != \"PHYS 227\");\n        courseNames = courseNames.filter(key => key != \"PHYS 208\");\n        courseNames = courseNames.filter(key => key != \"PHYS 228\");\n    } else if(courseNames.includes(\"CHEM 103\") && courseNames.includes(\"CHEM 133\") && courseNames.includes(\"CHEM 104\") && courseNames.includes(\"CHEM 134\")){\n        science = true;\n        courseNames = courseNames.filter(key => key != \"CHEM 103\");\n        courseNames = courseNames.filter(key => key != \"CHEM 133\");\n        courseNames = courseNames.filter(key => key != \"CHEM 104\");\n        courseNames = courseNames.filter(key => key != \"CHEM 134\");\n    }else if(courseNames.includes(\"BISC 207\") && courseNames.includes(\"BISC 208\")){\n        science = true;\n        courseNames = courseNames.filter(key => key != \"BISC 207\");\n        courseNames = courseNames.filter(key => key != \"BISC 208\");\n    } else if(courseNames.includes(\"GEOL 105\") && courseNames.includes(\"GEOL 107\") && courseNames.includes(\"GEOL 115\")){\n        science = true;\n        courseNames = courseNames.filter(key => key != \"GEOL 105\");\n        courseNames = courseNames.filter(key => key != \"GEOL 107\");\n        courseNames = courseNames.filter(key => key != \"GEOL 115\");\n    } else if(courseNames.includes(\"GEOL 107\") && courseNames.includes(\"GEOL 110\")){\n        science = true;\n        courseNames = courseNames.filter(key => key != \"GEOL 107\");\n        courseNames = courseNames.filter(key => key != \"GEOL 110\");\n    }\n\n    //writing req\n    if(courseNames.includes(\"CISC 355\")){\n        c355 = true;\n    }\n    if(courseNames.includes(\"ENGL 312\")){\n        writing = true;\n    } else if(courseNames.includes(\"ENGL 410\")){\n        writing = true;\n    }\n\n    //check specific courses\n    if(courseNames.includes(\"CISC 304\")){\n        c304 = true;\n        courseNames = courseNames.filter(key => key != \"CISC 304\");\n    }\n    if(courseNames.includes(\"CISC 442\")){\n        c442 = true;\n        courseNames = courseNames.filter(key => key != \"CISC 442\");\n    }\n    if(courseNames.includes(\"CISC 481\")){\n        c481 = true;\n        courseNames = courseNames.filter(key => key != \"CISC 481\");\n    }\n    if(courseNames.includes(\"CISC 483\")){\n        c483 = true;\n        courseNames = courseNames.filter(key => key != \"CISC 483\");\n    }\n    if(courseNames.includes(\"CISC 484\")){\n        c484 = true;\n        courseNames = courseNames.filter(key => key != \"CISC 484\");\n    }  \n\n    //stats\n    if(courseNames.includes(\"MATH 205\")){\n        stats = true;\n        courseNames = courseNames.filter(key => key != \"MATH 205\");\n    } else if(courseNames.includes(\"MATH 350\")){\n        stats = true;\n        courseNames = courseNames.filter(key => key != \"MATH 350\");\n    }\n\n    //systesms req\n    const sys = findCommonCourses(courseNames, [\"CISC 361\", \"CISC 372\"]);\n    if(sys.length > 0){\n        systems = true;\n        courseNames = courseNames.filter(key => key != sys[0]);\n    }\n\n    //12 credits from restricted list\n    const e12 = findCommonCourses(courseNames, restrict);\n    if(e12.length >= 4){\n        extra12 = true;\n        courseNames = courseNames.filter(key => key != e12[0]);\n        courseNames = courseNames.filter(key => key != e12[1]);\n        courseNames = courseNames.filter(key => key != e12[2]);\n        courseNames = courseNames.filter(key => key != e12[3]);\n    }\n    //extra cisc courses\n    for(let i = 0; i < courseNames.length; i++){\n        if(courseNames[i].substr(0, 4) === \"CISC\" && (+courseNames[i][4] >= 3) && !noTech.includes(courseNames[i])){\n            extra34 = true;\n            courseNames = courseNames.filter(key => key != courseNames[i]);\n            break;\n        }\n    }\n    \n    //breadth\n    const discov = findCommonCourses(courseNames, dle);\n    if(discov.length > 0){\n        dles = true;\n    }\n    const first = findCommonCourses(courseNames, firstYearExp);\n    if(first.length > 0){\n        fys = true;\n    }\n    const cultural = findCommonCourses(courseNames, multiCult);\n    if(cultural.length > 0){\n        multi = true;\n    }\n    const a = findCommonCourses(courseNames, groupA);\n    if(a.length >= 1){\n        groupa = true;\n        courseNames = courseNames.filter(key => key != a[0]); \n    }\n    const b = findCommonCourses(courseNames, groupB);\n    if(b.length >= 1){\n        groupb = true;\n        courseNames = courseNames.filter(key => key != b[0]); \n    }\n    const c = findCommonCourses(courseNames, groupC);\n    if(c.length >= 1){\n        groupc = true;\n        courseNames = courseNames.filter(key => key != c[0]); \n    }\n    const d = findCommonCourses(courseNames, groupD);\n    if(d.length >= 1){\n        groupd = true;\n        courseNames = courseNames.filter(key => key != d[0]); \n    }\n    const extraBreadth = findCommonCourses(courseNames, groupA.concat(groupB).concat(groupC).concat(engineerBreadth).concat(engineerProfess));\n    if(extraBreadth.length >= 3){\n        extra9 = true;\n    }\n\n    const univ:univReqs =  {\n        \"ENGL 110\": e110,  \n        \"FYS\": fys,       \n        \"DLE\": dles,       \n        \"Multi\": multi,     \n        \"groupA\": groupa,    \n        \"groupB\": groupb,    \n        \"groupC\": groupc,    \n        \"groupD\": groupd,    \n        \"capstone\": caps,\n    };\n\n    return {\n        \"univ\": univ,\n        \"9 extra\": extra9,\n\n        \"108\": c108,\n        \"181\": c181,\n        \"210\": c210,\n        \"220\": c220,\n        \"260\": c260,\n        \"275\": c275,\n        \"303\": c303,\n        \"320\": c320,\n        \"MATH 210\": m210,\n        \"MATH 241\": m241,\n        \"caps\": majCaps, \n        \"science\": science,\n\n        \"writing\": writing,\n        \"355\": c355, \n        \n        \n        \"304\": c304,\n        \"442\": c442,\n        \"481\": c481,\n        \"483\": c483,\n        \"484\": c484,\n        \"Prob/Stat\": stats, \n        \"systems\": systems,\n        \"12Restrict\": extra12, \n        \"cisc3-4Elect\": extra34, \n        \"124\": total124,         \n    };\n}","import { Semester } from \"../interfaces/semester\";\nimport { univReqs, accumulateCourses, findCommonCourses, dle, engineerBreadth, engineerProfess, firstYearExp, groupA, groupB, groupC, groupD, multiCult } from \"./univReqs\";\n\nconst restrict = [\"ANFS 300\", \"ANFS 310\", \"ANFS 470\", \"BISC 403\", \"BISC 484\", \"BISC 492\", \"CHEM 214\", \"CHEM 216\", \"CHEM 322\", \n    \"CHEM 326\", \"MATH 243\"];\n\nexport interface CSBio {\n    \"univ\": univReqs,\n    \"9 extra\": boolean, //can be from Group A, B, C or engineer breadth (No math/science/tech)\n    //6 must be at 300 level, or foreign lang at 107 or higher\n    //Max of 6 credits can come from Career and Professional Prep\n\n    // For the following, if there is no prefix, it means CISC\n    \"108\": boolean,\n    \"181\": boolean,\n    \"210\": boolean,\n    \"220\": boolean,\n    \"260\": boolean,\n    \"275\": boolean,\n    \"303\":boolean,\n    \"320\": boolean,\n    \"MATH 210\": boolean,\n    \"MATH 241\": boolean,\n    \"caps\": boolean, //(CISC 498 + CISC 499) OR (UNIV 401 + UNIV 402)\n    \"writing\": boolean, //ENGL 312 OR ENGL 410\n    \"355\": boolean, //ETHICS\n    // ENGL 312, ENGL 410 AND CISC 355 count for Engineer Breadth\n    \n    \"BISC 207\": boolean,\n    \"BISC 208\": boolean,\n    \"BISC 401\": boolean,\n    \"CHEM 103\": boolean,\n    \"CHEM 133\": boolean,\n    \"CHEM 104\": boolean,\n    \"CHEM 134\": boolean,\n    \"372\": boolean,\n    \"436\": boolean,\n    \"MATH 242\": boolean,\n    \"MATH 349\": boolean,\n\n    \"orgo\": boolean, //(CHEM 213 + CHEM 215) OR (CHEM 321 + CHEM 325)\n    \"Prob/Stat\": boolean, //MATH 205 or MATH 350\n    \"data\": boolean, //CISC 483 OR CISC 484\n\n    \"6Restrict\": boolean, //6 from list called restrict, or CISC course at 300 level or above\n    \n    \"124\": boolean          //124 Credits needed to graduate\n}\n\nexport function updateCSBio(semesters: Semester[]): CSBio {\n    let totalCreds = 0;\n    for (let i = 0; i < semesters.length; i++){\n        for (let j = 0; j < semesters[i].courses.length; j++){\n            totalCreds = totalCreds + +semesters[i].courses[j].info.credits;\n        }\n    }\n    const cours = accumulateCourses(semesters);\n    let courseNames = Array.from(cours.keys());\n\n    let e110 = false;\n    let fys = false;\n    let dles = false;\n    let multi = false;\n    let groupa = false;\n    let groupb = false;\n    let groupc = false;\n    let groupd = false;\n    let caps = false;\n\n    let extra9 = false;\n\n    let c108 = false;\n    let c181 = false;\n    let c210 = false;\n    let c220 = false;\n    let c260 = false;\n    let c275 = false;\n    let c303 = false;\n    let c320 = false;\n    let m210 = false;\n    let m241 = false;\n\n    let majCaps = false;\n    let writing = false;\n    let c355 = false;\n\n    let b207 = false;\n    let b208 = false;\n    let b401 = false;\n    let ch103 = false;\n    let ch133 = false;\n    let ch104 = false;\n    let ch134 = false;\n    let c372 = false;\n    let c436 = false;\n    let m242 = false;\n    let m349 = false;\n\n    let orgo = false;\n    let stats = false;\n    let data = false;\n\n    let extra6 = false;\n    \n    let total124 = false;\n\n    if(totalCreds >= 124){\n        total124 = true;\n    }\n    //check specific courses\n    if(courseNames.includes(\"ENGL 110\")){\n        e110 = true;\n        courseNames = courseNames.filter(key => key != \"ENGL 110\");\n    }\n    if(courseNames.includes(\"CISC 108\")){\n        c108 = true;\n        courseNames = courseNames.filter(key => key != \"CISC 108\");\n    }\n    if(courseNames.includes(\"CISC 181\")){\n        c181 = true;\n        courseNames = courseNames.filter(key => key != \"CISC 181\");\n    }\n    if(courseNames.includes(\"CISC 210\")){\n        c210 = true;\n        courseNames = courseNames.filter(key => key != \"CISC 210\");\n    }\n    if(courseNames.includes(\"CISC 220\")){\n        c220 = true;\n        courseNames = courseNames.filter(key => key != \"CISC 220\");\n    }\n    if(courseNames.includes(\"CISC 260\")){\n        c260 = true;\n        courseNames = courseNames.filter(key => key != \"CISC 260\");\n    }\n    if(courseNames.includes(\"CISC 275\")){\n        c275 = true;\n        courseNames = courseNames.filter(key => key != \"CISC 275\");\n    }\n    if(courseNames.includes(\"CISC 303\")){\n        c303 = true;\n        courseNames = courseNames.filter(key => key != \"CISC 303\");\n    }\n    if(courseNames.includes(\"CISC 320\")){\n        c320 = true;\n        courseNames = courseNames.filter(key => key != \"CISC 320\");\n    }\n    if(courseNames.includes(\"MATH 210\")){\n        m210 = true;\n        courseNames = courseNames.filter(key => key != \"MATH 210\");\n    }\n    if(courseNames.includes(\"MATH 241\")){\n        m241 = true;\n        courseNames = courseNames.filter(key => key != \"MATH 241\");\n    }\n\n    //capstone\n    if(courseNames.includes(\"CISC 498\") && courseNames.includes(\"CISC 499\")){\n        caps = true;\n        majCaps = true;\n        courseNames = courseNames.filter(key => key != \"CISC 498\");\n        courseNames = courseNames.filter(key => key != \"CISC 499\");\n    } else if(courseNames.includes(\"UNIV 401\") && courseNames.includes(\"UNIV 402\")){\n        caps = true;\n        majCaps = true;\n        courseNames = courseNames.filter(key => key != \"UNIV 401\");\n        courseNames = courseNames.filter(key => key != \"UNIV 402\");\n    }\n\n    //check specific courses\n    if(courseNames.includes(\"CISC 355\")){\n        c355 = true;\n    }\n    if(courseNames.includes(\"ENGL 312\")){\n        writing = true;\n    } else if(courseNames.includes(\"ENGL 410\")){\n        writing = true;\n    }\n\n    //check specific courses\n    if(courseNames.includes(\"BISC 207\")){\n        b207 = true;\n        courseNames = courseNames.filter(key => key != \"BISC 207\");\n    }\n    if(courseNames.includes(\"BISC 208\")){\n        b208 = true;\n        courseNames = courseNames.filter(key => key != \"BISC 208\");\n    }\n    if(courseNames.includes(\"BISC 401\")){\n        b401 = true;\n        courseNames = courseNames.filter(key => key != \"BISC 401\");\n    }\n    if(courseNames.includes(\"CHEM 103\")){\n        ch103 = true;\n        courseNames = courseNames.filter(key => key != \"CHEM 103\");\n    }\n    if(courseNames.includes(\"CHEM 133\")){\n        ch133 = true;\n        courseNames = courseNames.filter(key => key != \"CHEM 133\");\n    } \n    if(courseNames.includes(\"CHEM 104\")){\n        ch104 = true;\n        courseNames = courseNames.filter(key => key != \"CHEM 104\");\n    }\n    if(courseNames.includes(\"CHEM 134\")){\n        ch134 = true;\n        courseNames = courseNames.filter(key => key != \"CHEM 134\");\n    } \n    if(courseNames.includes(\"CISC 372\")){\n        c372 = true;\n        courseNames = courseNames.filter(key => key != \"CISC 372\");\n    }\n    if(courseNames.includes(\"CISC 436\")){\n        c436 = true;\n        courseNames = courseNames.filter(key => key != \"CISC 436\");\n    } \n    if(courseNames.includes(\"MATH 242\")){\n        m242 = true;\n        courseNames = courseNames.filter(key => key != \"MATH 242\");\n    }\n    if(courseNames.includes(\"MATH 349\")){\n        m349 = true;\n        courseNames = courseNames.filter(key => key != \"MATH 349\");\n    } \n\n    //stat\n    if(courseNames.includes(\"MATH 205\")){\n        stats = true;\n        courseNames = courseNames.filter(key => key != \"MATH 205\");\n    } else if(courseNames.includes(\"MATH 350\")){\n        stats = true;\n        courseNames = courseNames.filter(key => key != \"MATH 350\");\n    }\n\n    //chem reqs\n    if(courseNames.includes(\"CHEM 213\") && courseNames.includes(\"CHEM 215\")){\n        orgo = true;\n        courseNames = courseNames.filter(key => key != \"CHEM 213\");\n        courseNames = courseNames.filter(key => key != \"CHEM 215\");\n    } else if(courseNames.includes(\"CHEM 321\") && courseNames.includes(\"CHEM 325\")){\n        orgo = true;\n        courseNames = courseNames.filter(key => key != \"CHEM 321\");\n        courseNames = courseNames.filter(key => key != \"CHEM 325\");\n    }\n\n    //data req\n    const dat = findCommonCourses(courseNames, [\"CISC 483\", \"CISC 484\"]);\n    if(dat.length > 0){\n        data = true;\n        courseNames = courseNames.filter(key => key != dat[0]);\n    }\n\n    //extra courses\n    const e6 = findCommonCourses(courseNames, restrict);\n    if(e6.length >= 2){\n        extra6 = true;\n        courseNames = courseNames.filter(key => key != e6[0]);\n        courseNames = courseNames.filter(key => key != e6[1]);\n    }\n    \n    //breadth\n    const discov = findCommonCourses(courseNames, dle);\n    if(discov.length > 0){\n        dles = true;\n    }\n    const first = findCommonCourses(courseNames, firstYearExp);\n    if(first.length > 0){\n        fys = true;\n    }\n    const cultural = findCommonCourses(courseNames, multiCult);\n    if(cultural.length > 0){\n        multi = true;\n    }\n    const a = findCommonCourses(courseNames, groupA);\n    if(a.length >= 1){\n        groupa = true;\n        courseNames = courseNames.filter(key => key != a[0]); \n    }\n    const b = findCommonCourses(courseNames, groupB);\n    if(b.length >= 1){\n        groupb = true;\n        courseNames = courseNames.filter(key => key != b[0]); \n    }\n    const c = findCommonCourses(courseNames, groupC);\n    if(c.length >= 1){\n        groupc = true;\n        courseNames = courseNames.filter(key => key != c[0]); \n    }\n    const d = findCommonCourses(courseNames, groupD);\n    if(d.length >= 1){\n        groupd = true;\n        courseNames = courseNames.filter(key => key != d[0]); \n    }\n    const extraBreadth = findCommonCourses(courseNames, groupA.concat(groupB).concat(groupC).concat(engineerBreadth).concat(engineerProfess));\n    if(extraBreadth.length >= 3){\n        extra9 = true;\n    }\n\n    const univ:univReqs =  {\n        \"ENGL 110\": e110,  \n        \"FYS\": fys,       \n        \"DLE\": dles,       \n        \"Multi\": multi,     \n        \"groupA\": groupa,    \n        \"groupB\": groupb,    \n        \"groupC\": groupc,    \n        \"groupD\": groupd,    \n        \"capstone\": caps,\n    };\n\n    return {\n        \"univ\": univ,\n        \"9 extra\": extra9, \n\n        \"108\": c108,\n        \"181\": c181,\n        \"210\": c210,\n        \"220\": c220,\n        \"260\": c260,\n        \"275\": c275,\n        \"303\": c303,\n        \"320\": c320,\n        \"MATH 210\": m210,\n        \"MATH 241\": m241,\n        \"caps\": majCaps, \n\n        \"writing\": writing,\n        \"355\": c355,  \n        \n        \"BISC 207\": b207,\n        \"BISC 208\": b208,\n        \"BISC 401\": b401,\n        \"CHEM 103\": ch103,\n        \"CHEM 133\": ch133,\n        \"CHEM 104\": ch104,\n        \"CHEM 134\": ch134,\n        \"372\": c372,\n        \"436\": c436,\n        \"MATH 242\": m242,\n        \"MATH 349\": m349,\n    \n        \"orgo\": orgo, \n        \"Prob/Stat\": stats,\n        \"data\": data, \n    \n        \"6Restrict\": extra6, \n        \n        \"124\": total124          \n    };\n}","import { Semester } from \"../interfaces/semester\";\nimport { univReqs, noTech, accumulateCourses, findCommonCourses, dle, engineerBreadth, engineerProfess, firstYearExp, groupA, groupB, groupC, groupD, multiCult } from \"./univReqs\";\n\nconst restrict = [\"MATH 242\", \"MATH 349\", \"MATH 549\", \"CISC 304\", \"CISC 436\", \"CISC 437\", \"CISC 440\", \"CISC 442\", \"CISC 449\", \n    \"CISC 453\", \"CISC 459\", \"CISC 481\", \"CISC 483\", \"CISC 484\", \"CISC 474\", \"CPEG 470\", \"CPEG 471\", \"CPEG 472\", \"CPEG 473\", \n    \"CPEG 475\", \"CPEG 476\", \"CPEG 494\", \"CPEG 495\", \"ELEG 387\", \"ELEG 487\"];\n\nexport interface CSCyber {\n    \"univ\": univReqs,\n    \"9 extra\": boolean, //can be from Group A, B, C or engineer breadth (No math/science/tech)\n    //6 must be at 300 level, or foreign lang at 107 or higher\n    //Max of 6 credits can come from Career and Professional Prep\n\n    // For the following, if there is no prefix, it means CISC\n    \"108\": boolean,\n    \"181\": boolean,\n    \"210\": boolean,\n    \"220\": boolean,\n    \"260\": boolean,\n    \"275\": boolean,\n    \"303\":boolean,\n    \"320\": boolean,\n    \"MATH 210\": boolean,\n    \"MATH 241\": boolean,\n    \"caps\": boolean, //(CISC 498 + CISC 499) OR (UNIV 401 + UNIV 402)\n    \"science\": boolean,\n    //OP 1: PHYS 207, PHYS 227, PHYS 208, PHYS 208, PHYS 228\n    //OP2: CHEM 103, CHEM 133, CHEM 104, CHEM 134\n    //OP 3: BISC 207, BISC 208\n    //OP 4: GEOL 105, GEOL 107, GEOL 115\n    //OP5: GEOL 107, GEOL 110\n    \"writing\": boolean, //ENGL 312 OR ENGL 410\n    \"355\": boolean, //ETHICS\n    // ENGL 312, ENGL 410 AND CISC 355 count for Engineer Breadth\n    \n    \"361\": boolean,\n    \"372\": boolean,\n    \"450\": boolean,\n    \"464\": boolean,\n    \"CPEG 465\": boolean,\n    \"CPEG 494\": boolean,\n    \"Prob/Stat\": boolean, //MATH 205 or MATH 350\n    \"advanced\": boolean //Two of CPEG 472, CPEG 473, CPEG 475, CPEG 476, CPEG 495\n    \"6Restrict\": boolean, //6 from list called restrict\n    \"cisc3-4Elect\": boolean, //3-4 credits of CISC AT 300 level or higher\n    \"124\": boolean          //124 Credits needed to graduate\n}\n\nexport function updateCSCyber(semesters: Semester[]): CSCyber {\n    let totalCreds = 0;\n    for (let i = 0; i < semesters.length; i++){\n        for (let j = 0; j < semesters[i].courses.length; j++){\n            totalCreds = totalCreds + +semesters[i].courses[j].info.credits;\n        }\n    }\n    const cours = accumulateCourses(semesters);\n    let courseNames = Array.from(cours.keys());\n\n    let e110 = false;\n    let fys = false;\n    let dles = false;\n    let multi = false;\n    let groupa = false;\n    let groupb = false;\n    let groupc = false;\n    let groupd = false;\n    let caps = false;\n\n    let extra9 = false;\n\n    let c108 = false;\n    let c181 = false;\n    let c210 = false;\n    let c220 = false;\n    let c260 = false;\n    let c275 = false;\n    let c303 = false;\n    let c320 = false;\n    let m210 = false;\n    let m241 = false;\n\n    let majCaps = false;\n    let science = false;\n    let writing = false;\n    let c355 = false;\n\n    let c361 = false;\n    let c372 = false;\n    let c450 = false;\n    let c464 = false;\n\n    let cp465 = false;\n    let cp494 = false;\n\n    let stats = false;\n    let advanced = false;\n\n    let extra6 = false;\n    let extra34 = false;\n    \n    let total124 = false;\n\n    if(totalCreds >= 124){\n        total124 = true;\n    }\n    //check specific course\n    if(courseNames.includes(\"ENGL 110\")){\n        e110 = true;\n        courseNames = courseNames.filter(key => key != \"ENGL 110\");\n    }\n    if(courseNames.includes(\"CISC 108\")){\n        c108 = true;\n        courseNames = courseNames.filter(key => key != \"CISC 108\");\n    }\n    if(courseNames.includes(\"CISC 181\")){\n        c181 = true;\n        courseNames = courseNames.filter(key => key != \"CISC 181\");\n    }\n    if(courseNames.includes(\"CISC 210\")){\n        c210 = true;\n        courseNames = courseNames.filter(key => key != \"CISC 210\");\n    }\n    if(courseNames.includes(\"CISC 220\")){\n        c220 = true;\n        courseNames = courseNames.filter(key => key != \"CISC 220\");\n    }\n    if(courseNames.includes(\"CISC 260\")){\n        c260 = true;\n        courseNames = courseNames.filter(key => key != \"CISC 260\");\n    }\n    if(courseNames.includes(\"CISC 275\")){\n        c275 = true;\n        courseNames = courseNames.filter(key => key != \"CISC 275\");\n    }\n    if(courseNames.includes(\"CISC 303\")){\n        c303 = true;\n        courseNames = courseNames.filter(key => key != \"CISC 303\");\n    }\n    if(courseNames.includes(\"CISC 320\")){\n        c320 = true;\n        courseNames = courseNames.filter(key => key != \"CISC 320\");\n    }\n    if(courseNames.includes(\"MATH 210\")){\n        m210 = true;\n        courseNames = courseNames.filter(key => key != \"MATH 210\");\n    }\n    if(courseNames.includes(\"MATH 241\")){\n        m241 = true;\n        courseNames = courseNames.filter(key => key != \"MATH 241\");\n    }\n\n    //capstone\n    if(courseNames.includes(\"CISC 498\") && courseNames.includes(\"CISC 499\")){\n        caps = true;\n        majCaps = true;\n        courseNames = courseNames.filter(key => key != \"CISC 498\");\n        courseNames = courseNames.filter(key => key != \"CISC 499\");\n    } else if(courseNames.includes(\"UNIV 401\") && courseNames.includes(\"UNIV 402\")){\n        caps = true;\n        majCaps = true;\n        courseNames = courseNames.filter(key => key != \"UNIV 401\");\n        courseNames = courseNames.filter(key => key != \"UNIV 402\");\n    }\n\n    //lab science\n    if(courseNames.includes(\"PHYS 207\") && courseNames.includes(\"PHYS 227\") && courseNames.includes(\"PHYS 208\") && courseNames.includes(\"PHYS 228\")){\n        science = true;\n        courseNames = courseNames.filter(key => key != \"PHYS 207\");\n        courseNames = courseNames.filter(key => key != \"PHYS 227\");\n        courseNames = courseNames.filter(key => key != \"PHYS 208\");\n        courseNames = courseNames.filter(key => key != \"PHYS 228\");\n    } else if(courseNames.includes(\"CHEM 103\") && courseNames.includes(\"CHEM 133\") && courseNames.includes(\"CHEM 104\") && courseNames.includes(\"CHEM 134\")){\n        science = true;\n        courseNames = courseNames.filter(key => key != \"CHEM 103\");\n        courseNames = courseNames.filter(key => key != \"CHEM 133\");\n        courseNames = courseNames.filter(key => key != \"CHEM 104\");\n        courseNames = courseNames.filter(key => key != \"CHEM 134\");\n    }else if(courseNames.includes(\"BISC 207\") && courseNames.includes(\"BISC 208\")){\n        science = true;\n        courseNames = courseNames.filter(key => key != \"BISC 207\");\n        courseNames = courseNames.filter(key => key != \"BISC 208\");\n    } else if(courseNames.includes(\"GEOL 105\") && courseNames.includes(\"GEOL 107\") && courseNames.includes(\"GEOL 115\")){\n        science = true;\n        courseNames = courseNames.filter(key => key != \"GEOL 105\");\n        courseNames = courseNames.filter(key => key != \"GEOL 107\");\n        courseNames = courseNames.filter(key => key != \"GEOL 115\");\n    } else if(courseNames.includes(\"GEOL 107\") && courseNames.includes(\"GEOL 110\")){\n        science = true;\n        courseNames = courseNames.filter(key => key != \"GEOL 107\");\n        courseNames = courseNames.filter(key => key != \"GEOL 110\");\n    }\n\n    //writing req\n    if(courseNames.includes(\"CISC 355\")){\n        c355 = true;\n    }\n    if(courseNames.includes(\"ENGL 312\")){\n        writing = true;\n    } else if(courseNames.includes(\"ENGL 410\")){\n        writing = true;\n    }\n\n    //check specific courses\n    if(courseNames.includes(\"CISC 361\")){\n        c361 = true;\n        courseNames = courseNames.filter(key => key != \"CISC 361\");\n    }\n    if(courseNames.includes(\"CISC 372\")){\n        c372 = true;\n        courseNames = courseNames.filter(key => key != \"CISC 372\");\n    }\n    if(courseNames.includes(\"CISC 450\")){\n        c450 = true;\n        courseNames = courseNames.filter(key => key != \"CISC 450\");\n    }\n    if(courseNames.includes(\"CISC 464\")){\n        c464 = true;\n        courseNames = courseNames.filter(key => key != \"CISC 464\");\n    }\n    if(courseNames.includes(\"CPEG 465\")){\n        cp465 = true;\n        courseNames = courseNames.filter(key => key != \"CPEG 465\");\n    } \n    if(courseNames.includes(\"CPEG 494\")){\n        cp494 = true;\n        courseNames = courseNames.filter(key => key != \"CPEG 494\");\n    }  \n\n    //stats\n    if(courseNames.includes(\"MATH 205\")){\n        stats = true;\n        courseNames = courseNames.filter(key => key != \"MATH 205\");\n    } else if(courseNames.includes(\"MATH 350\")){\n        stats = true;\n        courseNames = courseNames.filter(key => key != \"MATH 350\");\n    }\n\n    //advanced cpeg\n    const adv = findCommonCourses(courseNames, [\"CPEG 472\", \"CPEG 473\", \"CPEG 475\", \"CPEG 476\", \"CPEG 495\"]);\n    if(adv.length >= 2){\n        advanced = true;\n        courseNames = courseNames.filter(key => key != adv[0]);\n        courseNames = courseNames.filter(key => key != adv[1]);\n    }\n\n    //extra tech\n    const e6 = findCommonCourses(courseNames, restrict);\n    if(e6.length >= 2){\n        extra6 = true;\n        courseNames = courseNames.filter(key => key != e6[0]);\n        courseNames = courseNames.filter(key => key != e6[1]);\n    }\n    for(let i = 0; i < courseNames.length; i++){\n        if(courseNames[i].substr(0, 4) === \"CISC\" && (+courseNames[i][4] >= 3) && !noTech.includes(courseNames[i])){\n            extra34 = true;\n            courseNames = courseNames.filter(key => key != courseNames[i]);\n            break;\n        }\n    }\n    \n    //breadth\n    const discov = findCommonCourses(courseNames, dle);\n    if(discov.length > 0){\n        dles = true;\n    }\n    const first = findCommonCourses(courseNames, firstYearExp);\n    if(first.length > 0){\n        fys = true;\n    }\n    const cultural = findCommonCourses(courseNames, multiCult);\n    if(cultural.length > 0){\n        multi = true;\n    }\n    const a = findCommonCourses(courseNames, groupA);\n    if(a.length >= 1){\n        groupa = true;\n        courseNames = courseNames.filter(key => key != a[0]); \n    }\n    const b = findCommonCourses(courseNames, groupB);\n    if(b.length >= 1){\n        groupb = true;\n        courseNames = courseNames.filter(key => key != b[0]); \n    }\n    const c = findCommonCourses(courseNames, groupC);\n    if(c.length >= 1){\n        groupc = true;\n        courseNames = courseNames.filter(key => key != c[0]); \n    }\n    const d = findCommonCourses(courseNames, groupD);\n    if(d.length >= 1){\n        groupd = true;\n        courseNames = courseNames.filter(key => key != d[0]); \n    }\n    const extraBreadth = findCommonCourses(courseNames, groupA.concat(groupB).concat(groupC).concat(engineerBreadth).concat(engineerProfess));\n    if(extraBreadth.length >= 3){\n        extra9 = true;\n    }\n\n    const univ:univReqs =  {\n        \"ENGL 110\": e110,  \n        \"FYS\": fys,       \n        \"DLE\": dles,       \n        \"Multi\": multi,     \n        \"groupA\": groupa,    \n        \"groupB\": groupb,    \n        \"groupC\": groupc,    \n        \"groupD\": groupd,    \n        \"capstone\": caps,\n    };\n\n    return {\n        \"univ\": univ,\n        \"9 extra\": extra9,\n\n        \"108\": c108,\n        \"181\": c181,\n        \"210\": c210,\n        \"220\": c220,\n        \"260\": c260,\n        \"275\": c275,\n        \"303\": c303,\n        \"320\": c320,\n        \"MATH 210\": m210,\n        \"MATH 241\": m241,\n        \"caps\": majCaps, \n        \"science\": science,\n\n        \"writing\": writing,\n        \"355\": c355, \n        \n        \n        \"361\": c361,\n        \"372\": c372,\n        \"450\": c450,\n        \"464\": c464,\n        \"CPEG 465\": cp465,\n        \"CPEG 494\": cp494,\n        \"Prob/Stat\": stats, \n        \"advanced\": advanced, \n        \"6Restrict\": extra6, \n        \"cisc3-4Elect\": extra34,\n        \"124\": total124             \n    };\n}","import { Semester } from \"../interfaces/semester\";\nimport { univReqs, noTech, accumulateCourses, findCommonCourses, dle, engineerBreadth, engineerProfess, firstYearExp, groupA, groupB, groupC, groupD, multiCult } from \"./univReqs\";\n\nconst restrict = [\"CISC 361\", \"CISC 410\", \"CISC 436\", \"CISC 440\", \"CISC 442\", \"CISC 449\", \"CISC 450\", \"CISC 471\", \"CISC 474\", \n    \"CISC 483\", \"CISC 484\", \"CISC 489\", \"ELEG 387\", \"ELEG 487\", \"MATH 302\", \"MATH 350\", \"MATH 428\", \"MATH 450\"];\n\nexport interface CSData {\n    \"univ\": univReqs,\n    \"9 extra\": boolean, //can be from Group A, B, C or engineer breadth (No math/science/tech)\n    //6 must be at 300 level, or foreign lang at 107 or higher\n    //Max of 6 credits can come from Career and Professional Prep\n\n    // For the following, if there is no prefix, it means CISC\n    \"108\": boolean,\n    \"181\": boolean,\n    \"210\": boolean,\n    \"220\": boolean,\n    \"260\": boolean,\n    \"275\": boolean,\n    \"303\":boolean,\n    \"320\": boolean,\n    \"MATH 210\": boolean,\n    \"MATH 241\": boolean,\n    \"caps\": boolean, //(CISC 498 + CISC 499) OR (UNIV 401 + UNIV 402)\n    \"science\": boolean,\n    //OP 1: PHYS 207, PHYS 227, PHYS 208, PHYS 208, PHYS 228\n    //OP2: CHEM 103, CHEM 133, CHEM 104, CHEM 134\n    //OP 3: BISC 207, BISC 208\n    //OP 4: GEOL 105, GEOL 107, GEOL 115\n    //OP5: GEOL 107, GEOL 110\n    \"writing\": boolean, //ENGL 312 OR ENGL 410\n    \"355\": boolean, //ETHICS\n    // ENGL 312, ENGL 410 AND CISC 355 count for Engineer Breadth\n    \n    \"304\": boolean,\n    \"372\": boolean,\n    \"437\": boolean,\n    \"481\": boolean,\n    \"MATH 205\": boolean,\n    \"MATH 242\": boolean,\n    \"MATH 243\": boolean,\n    \"MATH 349\": boolean,\n\n    \"advDS\": boolean //CISC 483 or CISC 484\n    \"advMath\": boolean, //MATH 302 or MATH 350 or MATH 426\n    \"3Restrict\": boolean, //3 from list called restrict\n    \"cisc3-4Elect\": boolean, //3-4 credits of CISC AT 300 level or higher\n    \"124\": boolean          //124 Credits needed to graduate\n}\n\nexport function updateCSData(semesters: Semester[]): CSData {\n    let totalCreds = 0;\n    for (let i = 0; i < semesters.length; i++){\n        for (let j = 0; j < semesters[i].courses.length; j++){\n            totalCreds = totalCreds + +semesters[i].courses[j].info.credits;\n        }\n    }\n    const cours = accumulateCourses(semesters);\n    let courseNames = Array.from(cours.keys());\n\n    let e110 = false;\n    let fys = false;\n    let dles = false;\n    let multi = false;\n    let groupa = false;\n    let groupb = false;\n    let groupc = false;\n    let groupd = false;\n    let caps = false;\n\n    let extra9 = false;\n\n    let c108 = false;\n    let c181 = false;\n    let c210 = false;\n    let c220 = false;\n    let c260 = false;\n    let c275 = false;\n    let c303 = false;\n    let c320 = false;\n    let m210 = false;\n    let m241 = false;\n\n    let majCaps = false;\n    let science = false;\n    let writing = false;\n    let c355 = false;\n\n    let c304 = false;\n    let c372 = false;\n    let c437 = false;\n    let c481 = false;\n    let m205 = false;\n    let m242 = false;\n    let m243 = false;\n    let m349 = false;\n\n    let advDS = false;\n    let advMath = false;\n    \n    let extra3 = false;\n    let extra34 = false;\n    \n    let total124 = false;\n\n    if(totalCreds >= 124){\n        total124 = true;\n    }\n    //check for specific courses\n    if(courseNames.includes(\"ENGL 110\")){\n        e110 = true;\n        courseNames = courseNames.filter(key => key != \"ENGL 110\");\n    }\n    if(courseNames.includes(\"CISC 108\")){\n        c108 = true;\n        courseNames = courseNames.filter(key => key != \"CISC 108\");\n    }\n    if(courseNames.includes(\"CISC 181\")){\n        c181 = true;\n        courseNames = courseNames.filter(key => key != \"CISC 181\");\n    }\n    if(courseNames.includes(\"CISC 210\")){\n        c210 = true;\n        courseNames = courseNames.filter(key => key != \"CISC 210\");\n    }\n    if(courseNames.includes(\"CISC 220\")){\n        c220 = true;\n        courseNames = courseNames.filter(key => key != \"CISC 220\");\n    }\n    if(courseNames.includes(\"CISC 260\")){\n        c260 = true;\n        courseNames = courseNames.filter(key => key != \"CISC 260\");\n    }\n    if(courseNames.includes(\"CISC 275\")){\n        c275 = true;\n        courseNames = courseNames.filter(key => key != \"CISC 275\");\n    }\n    if(courseNames.includes(\"CISC 303\")){\n        c303 = true;\n        courseNames = courseNames.filter(key => key != \"CISC 303\");\n    }\n    if(courseNames.includes(\"CISC 320\")){\n        c320 = true;\n        courseNames = courseNames.filter(key => key != \"CISC 320\");\n    }\n    if(courseNames.includes(\"MATH 210\")){\n        m210 = true;\n        courseNames = courseNames.filter(key => key != \"MATH 210\");\n    }\n    if(courseNames.includes(\"MATH 241\")){\n        m241 = true;\n        courseNames = courseNames.filter(key => key != \"MATH 241\");\n    }\n    //capstone\n    if(courseNames.includes(\"CISC 498\") && courseNames.includes(\"CISC 499\")){\n        caps = true;\n        majCaps = true;\n        courseNames = courseNames.filter(key => key != \"CISC 498\");\n        courseNames = courseNames.filter(key => key != \"CISC 499\");\n    } else if(courseNames.includes(\"UNIV 401\") && courseNames.includes(\"UNIV 402\")){\n        caps = true;\n        majCaps = true;\n        courseNames = courseNames.filter(key => key != \"UNIV 401\");\n        courseNames = courseNames.filter(key => key != \"UNIV 402\");\n    }\n    //lab science\n    if(courseNames.includes(\"PHYS 207\") && courseNames.includes(\"PHYS 227\") && courseNames.includes(\"PHYS 208\") && courseNames.includes(\"PHYS 228\")){\n        science = true;\n        courseNames = courseNames.filter(key => key != \"PHYS 207\");\n        courseNames = courseNames.filter(key => key != \"PHYS 227\");\n        courseNames = courseNames.filter(key => key != \"PHYS 208\");\n        courseNames = courseNames.filter(key => key != \"PHYS 228\");\n    } else if(courseNames.includes(\"CHEM 103\") && courseNames.includes(\"CHEM 133\") && courseNames.includes(\"CHEM 104\") && courseNames.includes(\"CHEM 134\")){\n        science = true;\n        courseNames = courseNames.filter(key => key != \"CHEM 103\");\n        courseNames = courseNames.filter(key => key != \"CHEM 133\");\n        courseNames = courseNames.filter(key => key != \"CHEM 104\");\n        courseNames = courseNames.filter(key => key != \"CHEM 134\");\n    }else if(courseNames.includes(\"BISC 207\") && courseNames.includes(\"BISC 208\")){\n        science = true;\n        courseNames = courseNames.filter(key => key != \"BISC 207\");\n        courseNames = courseNames.filter(key => key != \"BISC 208\");\n    } else if(courseNames.includes(\"GEOL 105\") && courseNames.includes(\"GEOL 107\") && courseNames.includes(\"GEOL 115\")){\n        science = true;\n        courseNames = courseNames.filter(key => key != \"GEOL 105\");\n        courseNames = courseNames.filter(key => key != \"GEOL 107\");\n        courseNames = courseNames.filter(key => key != \"GEOL 115\");\n    } else if(courseNames.includes(\"GEOL 107\") && courseNames.includes(\"GEOL 110\")){\n        science = true;\n        courseNames = courseNames.filter(key => key != \"GEOL 107\");\n        courseNames = courseNames.filter(key => key != \"GEOL 110\");\n    }\n\n    //writing reqs\n    if(courseNames.includes(\"CISC 355\")){\n        c355 = true;\n    }\n    if(courseNames.includes(\"ENGL 312\")){\n        writing = true;\n    } else if(courseNames.includes(\"ENGL 410\")){\n        writing = true;\n    }\n\n    //check for specific courses\n    if(courseNames.includes(\"CISC 304\")){\n        c304 = true;\n        courseNames = courseNames.filter(key => key != \"CISC 304\");\n    }\n    if(courseNames.includes(\"CISC 372\")){\n        c372 = true;\n        courseNames = courseNames.filter(key => key != \"CISC 372\");\n    }\n    if(courseNames.includes(\"CISC 437\")){\n        c437 = true;\n        courseNames = courseNames.filter(key => key != \"CISC 437\");\n    }\n    if(courseNames.includes(\"CISC 481\")){\n        c481 = true;\n        courseNames = courseNames.filter(key => key != \"CISC 481\");\n    }\n    if(courseNames.includes(\"MATH 205\")){\n        m205 = true;\n        courseNames = courseNames.filter(key => key != \"MATH 205\");\n    }\n    if(courseNames.includes(\"MATH 242\")){\n        m242 = true;\n        courseNames = courseNames.filter(key => key != \"MATH 242\");\n    }  \n    if(courseNames.includes(\"MATH 243\")){\n        m243 = true;\n        courseNames = courseNames.filter(key => key != \"MATH 243\");\n    }\n    if(courseNames.includes(\"MATH 349\")){\n        m349 = true;\n        courseNames = courseNames.filter(key => key != \"MATH 349\");\n    }\n\n    //checking if atleast one course in list\n    const ds = findCommonCourses(courseNames, [\"CISC 483\", \"CISC 484\"]);\n    if(ds.length > 0){\n        advDS = true;\n        courseNames = courseNames.filter(key => key != ds[0]);\n    }\n\n    //checking if atleast one course in list\n    const math = findCommonCourses(courseNames, [\"MATH 302\", \"MATH 350\", \"MATH 426\"]);\n    if(math.length > 0){\n        advMath = true;\n        courseNames = courseNames.filter(key => key != math[0]);\n    }\n\n    //extra cisc elective\n    const e3 = findCommonCourses(courseNames, restrict);\n    if(e3.length >= 1){\n        extra3 = true;\n        courseNames = courseNames.filter(key => key != e3[0]);\n    }\n    for(let i = 0; i < courseNames.length; i++){\n        if(courseNames[i].substr(0, 4) === \"CISC\" && (+courseNames[i][4] >= 3) && !noTech.includes(courseNames[i])){\n            extra34 = true;\n            courseNames = courseNames.filter(key => key != courseNames[i]);\n            break;\n        }\n    }\n    \n    //breadths\n    const discov = findCommonCourses(courseNames, dle);\n    if(discov.length > 0){\n        dles = true;\n    }\n    const first = findCommonCourses(courseNames, firstYearExp);\n    if(first.length > 0){\n        fys = true;\n    }\n    const cultural = findCommonCourses(courseNames, multiCult);\n    if(cultural.length > 0){\n        multi = true;\n    }\n    const a = findCommonCourses(courseNames, groupA);\n    if(a.length >= 1){\n        groupa = true;\n        courseNames = courseNames.filter(key => key != a[0]); \n    }\n    const b = findCommonCourses(courseNames, groupB);\n    if(b.length >= 1){\n        groupb = true;\n        courseNames = courseNames.filter(key => key != b[0]); \n    }\n    const c = findCommonCourses(courseNames, groupC);\n    if(c.length >= 1){\n        groupc = true;\n        courseNames = courseNames.filter(key => key != c[0]); \n    }\n    const d = findCommonCourses(courseNames, groupD);\n    if(d.length >= 1){\n        groupd = true;\n        courseNames = courseNames.filter(key => key != d[0]); \n    }\n    const extraBreadth = findCommonCourses(courseNames, groupA.concat(groupB).concat(groupC).concat(engineerBreadth).concat(engineerProfess));\n    if(extraBreadth.length >= 3){\n        extra9 = true;\n    }\n\n    const univ:univReqs =  {\n        \"ENGL 110\": e110,  \n        \"FYS\": fys,       \n        \"DLE\": dles,       \n        \"Multi\": multi,     \n        \"groupA\": groupa,    \n        \"groupB\": groupb,    \n        \"groupC\": groupc,    \n        \"groupD\": groupd,    \n        \"capstone\": caps,\n    };\n\n    return {\n        \"univ\": univ,\n        \"9 extra\": extra9,\n\n        \"108\": c108,\n        \"181\": c181,\n        \"210\": c210,\n        \"220\": c220,\n        \"260\": c260,\n        \"275\": c275,\n        \"303\": c303,\n        \"320\": c320,\n        \"MATH 210\": m210,\n        \"MATH 241\": m241,\n        \"caps\": majCaps, \n        \"science\": science,\n\n        \"writing\": writing,\n        \"355\": c355, \n        \n        \n        \"304\": c304,\n        \"372\": c372,\n        \"437\": c437,\n        \"481\": c481,\n        \"MATH 205\": m205,\n        \"MATH 242\": m242,\n        \"MATH 243\": m243,\n        \"MATH 349\": m349,\n\n        \"advDS\": advDS,\n        \"advMath\": advMath, \n        \"3Restrict\": extra3, \n        \"cisc3-4Elect\": extra34, \n        \"124\": total124               \n    };\n}","import { Semester } from \"../interfaces/semester\";\nimport { univReqs, noTech, accumulateCourses, findCommonCourses, dle, engineerBreadth, engineerProfess, firstYearExp, groupA, groupB, groupC, groupD, multiCult } from \"./univReqs\";\n\nconst restrict = [\"CISC 304\", \"CISC 436\", \"CISC 437\", \"CISC 440\", \"CISC 442\", \"CISC 449\", \"CISC 453\", \"CISC 459\", \"CISC 464\", \"CISC 474\", \n    \"CISC 475\", \"CISC 479\", \"CISC 481\", \"CISC 483\", \"CISC 484\", \"CISC 489\", \"CPEG 202\", \"CPEG 222\", \"CPEG 323\", \"CPEG 422\", \n    \"CPEG 460\", \"CPEG 465\", \"CPEG 470\", \"CPEG 475\", \"CPEG 476\", \"CPEG 494\", \"CPEG 497\", \"ELEG 387\", \"ELEG 487\", \"MATH 242\", \"MATH 349\"];\n\nexport interface CSSystems {\n    \"univ\": univReqs,\n    \"9 extra\": boolean, //can be from Group A, B, C or engineer breadth (No math/science/tech)\n    //6 must be at 300 level, or foreign lang at 107 or higher\n    //Max of 6 credits can come from Career and Professional Prep\n\n    // For the following, if there is no prefix, it means CISC\n    \"108\": boolean,\n    \"181\": boolean,\n    \"210\": boolean,\n    \"220\": boolean,\n    \"260\": boolean,\n    \"275\": boolean,\n    \"303\":boolean,\n    \"320\": boolean,\n    \"MATH 210\": boolean,\n    \"MATH 241\": boolean,\n    \"caps\": boolean, //(CISC 498 + CISC 499) OR (UNIV 401 + UNIV 402)\n    \"science\": boolean,\n    //OP 1: PHYS 207, PHYS 227, PHYS 208, PHYS 208, PHYS 228\n    //OP2: CHEM 103, CHEM 133, CHEM 104, CHEM 134\n    //OP 3: BISC 207, BISC 208\n    //OP 4: GEOL 105, GEOL 107, GEOL 115\n    //OP5: GEOL 107, GEOL 110\n    \"writing\": boolean, //ENGL 312 OR ENGL 410\n    \"355\": boolean, //ETHICS\n    // ENGL 312, ENGL 410 AND CISC 355 count for Engineer Breadth\n    \n    \"360\": boolean,\n    \"361\": boolean,\n    \"372\": boolean,\n    \"450\": boolean,\n    \"471\": boolean,\n    \"Prob/Stat\": boolean, //MATH 205 or MATH 350\n    \"security\": boolean, //One of CISC 464, CPEG 465, CPEG 470, CPEG 476, CPEG 473, CPEG 475, CPEG 497\n    \"advSys\": boolean, //Two of CISC 437, CISC 453, CISC 459, CISC 464, CISC 474, CISC 475, CISC 479, CPEG 473, CPEG 497\n    \"6Restrict\": boolean, //6 from list called restrict\n    \"cisc3-4Elect\": boolean, //3-4 credits of CISC AT 300 level or higher\n    \"124\": boolean          //124 Credits needed to graduate\n}\n\nexport function updateCSSystems(semesters: Semester[]): CSSystems {\n    let totalCreds = 0;\n    for (let i = 0; i < semesters.length; i++){\n        for (let j = 0; j < semesters[i].courses.length; j++){\n            totalCreds = totalCreds + +semesters[i].courses[j].info.credits;\n        }\n    }\n    const cours = accumulateCourses(semesters);\n    let courseNames = Array.from(cours.keys());\n\n    let e110 = false;\n    let fys = false;\n    let dles = false;\n    let multi = false;\n    let groupa = false;\n    let groupb = false;\n    let groupc = false;\n    let groupd = false;\n    let caps = false;\n\n    let extra9 = false;\n\n    let c108 = false;\n    let c181 = false;\n    let c210 = false;\n    let c220 = false;\n    let c260 = false;\n    let c275 = false;\n    let c303 = false;\n    let c320 = false;\n    let m210 = false;\n    let m241 = false;\n\n    let majCaps = false;\n    let science = false;\n    let writing = false;\n    let c355 = false;\n\n    let c360 = false;\n    let c361 = false;\n    let c372 = false;\n    let c450 = false;\n    let c471 = false;\n    let stats = false;\n    let security = false;\n    let advSys = false;\n\n    let extra6 = false;\n    let extra34 = false;\n    \n    let total124 = false;\n\n    if(totalCreds >= 124){\n        total124 = true;\n    }\n    //testing for specific courses\n    if(courseNames.includes(\"ENGL 110\")){\n        e110 = true;\n        courseNames = courseNames.filter(key => key != \"ENGL 110\");\n    }\n    if(courseNames.includes(\"CISC 108\")){\n        c108 = true;\n        courseNames = courseNames.filter(key => key != \"CISC 108\");\n    }\n    if(courseNames.includes(\"CISC 181\")){\n        c181 = true;\n        courseNames = courseNames.filter(key => key != \"CISC 181\");\n    }\n    if(courseNames.includes(\"CISC 210\")){\n        c210 = true;\n        courseNames = courseNames.filter(key => key != \"CISC 210\");\n    }\n    if(courseNames.includes(\"CISC 220\")){\n        c220 = true;\n        courseNames = courseNames.filter(key => key != \"CISC 220\");\n    }\n    if(courseNames.includes(\"CISC 260\")){\n        c260 = true;\n        courseNames = courseNames.filter(key => key != \"CISC 260\");\n    }\n    if(courseNames.includes(\"CISC 275\")){\n        c275 = true;\n        courseNames = courseNames.filter(key => key != \"CISC 275\");\n    }\n    if(courseNames.includes(\"CISC 303\")){\n        c303 = true;\n        courseNames = courseNames.filter(key => key != \"CISC 303\");\n    }\n    if(courseNames.includes(\"CISC 320\")){\n        c320 = true;\n        courseNames = courseNames.filter(key => key != \"CISC 320\");\n    }\n    if(courseNames.includes(\"MATH 210\")){\n        m210 = true;\n        courseNames = courseNames.filter(key => key != \"MATH 210\");\n    }\n    if(courseNames.includes(\"MATH 241\")){\n        m241 = true;\n        courseNames = courseNames.filter(key => key != \"MATH 241\");\n    }\n\n    //capstone\n    if(courseNames.includes(\"CISC 498\") && courseNames.includes(\"CISC 499\")){\n        caps = true;\n        majCaps = true;\n        courseNames = courseNames.filter(key => key != \"CISC 498\");\n        courseNames = courseNames.filter(key => key != \"CISC 499\");\n    } else if(courseNames.includes(\"UNIV 401\") && courseNames.includes(\"UNIV 402\")){\n        caps = true;\n        majCaps = true;\n        courseNames = courseNames.filter(key => key != \"UNIV 401\");\n        courseNames = courseNames.filter(key => key != \"UNIV 402\");\n    }\n\n    //lab science\n    if(courseNames.includes(\"PHYS 207\") && courseNames.includes(\"PHYS 227\") && courseNames.includes(\"PHYS 208\") && courseNames.includes(\"PHYS 228\")){\n        science = true;\n        courseNames = courseNames.filter(key => key != \"PHYS 207\");\n        courseNames = courseNames.filter(key => key != \"PHYS 227\");\n        courseNames = courseNames.filter(key => key != \"PHYS 208\");\n        courseNames = courseNames.filter(key => key != \"PHYS 228\");\n    } else if(courseNames.includes(\"CHEM 103\") && courseNames.includes(\"CHEM 133\") && courseNames.includes(\"CHEM 104\") && courseNames.includes(\"CHEM 134\")){\n        science = true;\n        courseNames = courseNames.filter(key => key != \"CHEM 103\");\n        courseNames = courseNames.filter(key => key != \"CHEM 133\");\n        courseNames = courseNames.filter(key => key != \"CHEM 104\");\n        courseNames = courseNames.filter(key => key != \"CHEM 134\");\n    }else if(courseNames.includes(\"BISC 207\") && courseNames.includes(\"BISC 208\")){\n        science = true;\n        courseNames = courseNames.filter(key => key != \"BISC 207\");\n        courseNames = courseNames.filter(key => key != \"BISC 208\");\n    } else if(courseNames.includes(\"GEOL 105\") && courseNames.includes(\"GEOL 107\") && courseNames.includes(\"GEOL 115\")){\n        science = true;\n        courseNames = courseNames.filter(key => key != \"GEOL 105\");\n        courseNames = courseNames.filter(key => key != \"GEOL 107\");\n        courseNames = courseNames.filter(key => key != \"GEOL 115\");\n    } else if(courseNames.includes(\"GEOL 107\") && courseNames.includes(\"GEOL 110\")){\n        science = true;\n        courseNames = courseNames.filter(key => key != \"GEOL 107\");\n        courseNames = courseNames.filter(key => key != \"GEOL 110\");\n    }\n\n    //writnig reqs\n    if(courseNames.includes(\"CISC 355\")){\n        c355 = true;\n    }\n    if(courseNames.includes(\"ENGL 312\")){\n        writing = true;\n    } else if(courseNames.includes(\"ENGL 410\")){\n        writing = true;\n    }\n\n    //specific courses check\n    if(courseNames.includes(\"CISC 360\")){\n        c360 = true;\n        courseNames = courseNames.filter(key => key != \"CISC 360\");\n    }\n    if(courseNames.includes(\"CISC 361\")){\n        c361 = true;\n        courseNames = courseNames.filter(key => key != \"CISC 361\");\n    }\n    if(courseNames.includes(\"CISC 372\")){\n        c372 = true;\n        courseNames = courseNames.filter(key => key != \"CISC 372\");\n    }\n    if(courseNames.includes(\"CISC 450\")){\n        c450 = true;\n        courseNames = courseNames.filter(key => key != \"CISC 450\");\n    }\n    if(courseNames.includes(\"CISC 471\")){\n        c471 = true;\n        courseNames = courseNames.filter(key => key != \"CISC 471\");\n    }  \n\n    //stat check\n    if(courseNames.includes(\"MATH 205\")){\n        stats = true;\n        courseNames = courseNames.filter(key => key != \"MATH 205\");\n    } else if(courseNames.includes(\"MATH 350\")){\n        stats = true;\n        courseNames = courseNames.filter(key => key != \"MATH 350\");\n    }\n\n    //security req\n    const sec = findCommonCourses(courseNames, [\"CISC 464\", \"CPEG 465\", \"CPEG 470\", \"CPEG 476\", \"CPEG 473\", \"CPEG 475\", \"CPEG 497\"]);\n    if(sec.length > 0){\n        security = true;\n        courseNames = courseNames.filter(key => key != sec[0]);\n    }\n\n    //advanced system req\n    const sys = findCommonCourses(courseNames, [\"CISC 437\", \"CISC 453\", \"CISC 459\", \"CISC 464\", \"CISC 474\", \"CISC 475\", \"CISC 479\", \"CPEG 473\", \"CPEG 497\"]);\n    if(sys.length >= 2){\n        advSys = true;\n        courseNames = courseNames.filter(key => key != sys[0]);\n        courseNames = courseNames.filter(key => key != sys[1]);\n    }\n\n    //extra cisc courses\n    const e6 = findCommonCourses(courseNames, restrict);\n    if(e6.length >= 2){\n        extra6 = true;\n        courseNames = courseNames.filter(key => key != e6[0]);\n        courseNames = courseNames.filter(key => key != e6[1]);\n    }\n    for(let i = 0; i < courseNames.length; i++){\n        if(courseNames[i].substr(0, 4) === \"CISC\" && (+courseNames[i][4] >= 3) && !noTech.includes(courseNames[i])){\n            extra34 = true;\n            courseNames = courseNames.filter(key => key != courseNames[i]);\n            break;\n        }\n    }\n    \n    //breadth check\n    const discov = findCommonCourses(courseNames, dle);\n    if(discov.length > 0){\n        dles = true;\n    }\n    const first = findCommonCourses(courseNames, firstYearExp);\n    if(first.length > 0){\n        fys = true;\n    }\n    const cultural = findCommonCourses(courseNames, multiCult);\n    if(cultural.length > 0){\n        multi = true;\n    }\n    const a = findCommonCourses(courseNames, groupA);\n    if(a.length >= 1){\n        groupa = true;\n        courseNames = courseNames.filter(key => key != a[0]); \n    }\n    const b = findCommonCourses(courseNames, groupB);\n    if(b.length >= 1){\n        groupb = true;\n        courseNames = courseNames.filter(key => key != b[0]); \n    }\n    const c = findCommonCourses(courseNames, groupC);\n    if(c.length >= 1){\n        groupc = true;\n        courseNames = courseNames.filter(key => key != c[0]); \n    }\n    const d = findCommonCourses(courseNames, groupD);\n    if(d.length >= 1){\n        groupd = true;\n        courseNames = courseNames.filter(key => key != d[0]); \n    }\n    const extraBreadth = findCommonCourses(courseNames, groupA.concat(groupB).concat(groupC).concat(engineerBreadth).concat(engineerProfess));\n    if(extraBreadth.length >= 3){\n        extra9 = true;\n    }\n\n    const univ:univReqs =  {\n        \"ENGL 110\": e110,  \n        \"FYS\": fys,       \n        \"DLE\": dles,       \n        \"Multi\": multi,     \n        \"groupA\": groupa,    \n        \"groupB\": groupb,    \n        \"groupC\": groupc,    \n        \"groupD\": groupd,    \n        \"capstone\": caps,\n    };\n\n    return {\n        \"univ\": univ,\n        \"9 extra\": extra9,\n\n        \"108\": c108,\n        \"181\": c181,\n        \"210\": c210,\n        \"220\": c220,\n        \"260\": c260,\n        \"275\": c275,\n        \"303\": c303,\n        \"320\": c320,\n        \"MATH 210\": m210,\n        \"MATH 241\": m241,\n        \"caps\": majCaps, \n        \"science\": science,\n\n        \"writing\": writing,\n        \"355\": c355, \n        \n        \n        \"360\": c360,\n        \"361\": c361,\n        \"372\": c372,\n        \"450\": c450,\n        \"471\": c471,\n        \"Prob/Stat\": stats, \n        \"security\": security, \n        \"advSys\": advSys,\n        \"6Restrict\": extra6,\n        \"cisc3-4Elect\": extra34,\n        \"124\": total124         \n    };\n}","import { Semester } from \"../interfaces/semester\";\nimport { univReqs, noTech, accumulateCourses, findCommonCourses, dle, engineerBreadth, engineerProfess, firstYearExp, groupA, groupB, groupC, groupD, multiCult } from \"./univReqs\";\n\nconst restrict = [\"CISC 372\", \"CISC 404\", \"CISC 410\", \"CISC 414\", \"CISC 471\", \"CISC 481\", \"ELEG 387\", \"ELEG 487\", \"MATH 243\", \"MATH 245\", \n    \"MATH 302\", \"MATH 315\", \"MATH 350\", \"MATH 428\", \"MATH 450\", \"MATH 451\"];\n\nexport interface CSTheory {\n    \"univ\": univReqs,\n    \"9 extra\": boolean, //can be from Group A, B, C or engineer breadth (No math/science/tech)\n    //6 must be at 300 level, or foreign lang at 107 or higher\n    //Max of 6 credits can come from Career and Professional Prep\n\n    // For the following, if there is no prefix, it means CISC\n    \"108\": boolean,\n    \"181\": boolean,\n    \"210\": boolean,\n    \"220\": boolean,\n    \"260\": boolean,\n    \"275\": boolean,\n    \"303\":boolean,\n    \"320\": boolean,\n    \"MATH 210\": boolean,\n    \"MATH 241\": boolean,\n    \"caps\": boolean, //(CISC 498 + CISC 499) OR (UNIV 401 + UNIV 402)\n    \"science\": boolean,\n    //OP 1: PHYS 207, PHYS 227, PHYS 208, PHYS 208, PHYS 228\n    //OP2: CHEM 103, CHEM 133, CHEM 104, CHEM 134\n    //OP 3: BISC 207, BISC 208\n    //OP 4: GEOL 105, GEOL 107, GEOL 115\n    //OP5: GEOL 107, GEOL 110\n    \"writing\": boolean, //ENGL 312 OR ENGL 410\n    \"355\": boolean, //ETHICS\n    // ENGL 312, ENGL 410 AND CISC 355 count for Engineer Breadth\n    \n    \"304\": boolean,\n    \"401\": boolean,\n    \"MATH 242\": boolean,\n    \"MATH 349\": boolean,\n    \"Prob/Stat\": boolean, //MATH 205 or MATH 350\n\n    \"discreteTrack\": discrete,\n    \"contTrack\": continuous, \n    \"track\": boolean, //true if one of discrete or continuous is complete\n    \"6Restrict\": boolean, //6 from list called restrict\n    \"cisc3-4Elect\": boolean, //3-4 credits of CISC AT 300 level or higher\n    \n    \"124\": boolean          //124 Credits needed to graduate\n}\n\ninterface discrete{\n    \"complete\": boolean, //true if all sub categories in this are true\n    \"404\": boolean,\n    \"MATH 245\": boolean,\n    \"MATH 315\": boolean,\n    \"MATH 451\": boolean,\n}\n\ninterface continuous{\n    \"complete\": boolean, //true if all sub categories in this are true\n    \"MATH 243\": boolean,\n    \"MATH 302\": boolean,\n    \"MATH 535\": boolean,\n    \"MATH 426\": boolean\n}\n\nexport function updateCSTheory(semesters: Semester[]): CSTheory {\n    let totalCreds = 0;\n    for (let i = 0; i < semesters.length; i++){\n        for (let j = 0; j < semesters[i].courses.length; j++){\n            totalCreds = totalCreds + +semesters[i].courses[j].info.credits;\n        }\n    }\n    const cours = accumulateCourses(semesters);\n    let courseNames = Array.from(cours.keys());\n\n    let e110 = false;\n    let fys = false;\n    let dles = false;\n    let multi = false;\n    let groupa = false;\n    let groupb = false;\n    let groupc = false;\n    let groupd = false;\n    let caps = false;\n\n    let extra9 = false;\n\n    let c108 = false;\n    let c181 = false;\n    let c210 = false;\n    let c220 = false;\n    let c260 = false;\n    let c275 = false;\n    let c303 = false;\n    let c320 = false;\n    let m210 = false;\n    let m241 = false;\n\n    let majCaps = false;\n    let science = false;\n    let writing = false;\n    let c355 = false;\n\n    let c304 = false;\n    let c401 = false;\n    let m242 = false;\n    let m349 = false;\n    let stats = false;\n\n    let extra6 = false;\n    let extra34 = false;\n    \n    let total124 = false;\n\n    if(totalCreds >= 124){ //check for total credits\n        total124 = true;\n    }\n    //the below check to see if specific course is in plan\n    if(courseNames.includes(\"ENGL 110\")){\n        e110 = true;\n        courseNames = courseNames.filter(key => key != \"ENGL 110\");\n    }\n    if(courseNames.includes(\"CISC 108\")){\n        c108 = true;\n        courseNames = courseNames.filter(key => key != \"CISC 108\");\n    }\n    if(courseNames.includes(\"CISC 181\")){\n        c181 = true;\n        courseNames = courseNames.filter(key => key != \"CISC 181\");\n    }\n    if(courseNames.includes(\"CISC 210\")){\n        c210 = true;\n        courseNames = courseNames.filter(key => key != \"CISC 210\");\n    }\n    if(courseNames.includes(\"CISC 220\")){\n        c220 = true;\n        courseNames = courseNames.filter(key => key != \"CISC 220\");\n    }\n    if(courseNames.includes(\"CISC 260\")){\n        c260 = true;\n        courseNames = courseNames.filter(key => key != \"CISC 260\");\n    }\n    if(courseNames.includes(\"CISC 275\")){\n        c275 = true;\n        courseNames = courseNames.filter(key => key != \"CISC 275\");\n    }\n    if(courseNames.includes(\"CISC 303\")){\n        c303 = true;\n        courseNames = courseNames.filter(key => key != \"CISC 303\");\n    }\n    if(courseNames.includes(\"CISC 320\")){\n        c320 = true;\n        courseNames = courseNames.filter(key => key != \"CISC 320\");\n    }\n    if(courseNames.includes(\"MATH 210\")){\n        m210 = true;\n        courseNames = courseNames.filter(key => key != \"MATH 210\");\n    }\n    if(courseNames.includes(\"MATH 241\")){\n        m241 = true;\n        courseNames = courseNames.filter(key => key != \"MATH 241\");\n    }\n\n    //checks for capstone\n    if(courseNames.includes(\"CISC 498\") && courseNames.includes(\"CISC 499\")){\n        caps = true;\n        majCaps = true;\n        courseNames = courseNames.filter(key => key != \"CISC 498\");\n        courseNames = courseNames.filter(key => key != \"CISC 499\");\n    } else if(courseNames.includes(\"UNIV 401\") && courseNames.includes(\"UNIV 402\")){\n        caps = true;\n        majCaps = true;\n        courseNames = courseNames.filter(key => key != \"UNIV 401\");\n        courseNames = courseNames.filter(key => key != \"UNIV 402\");\n    }\n\n    //checks lab requirement\n    if(courseNames.includes(\"PHYS 207\") && courseNames.includes(\"PHYS 227\") && courseNames.includes(\"PHYS 208\") && courseNames.includes(\"PHYS 228\")){\n        science = true;\n        courseNames = courseNames.filter(key => key != \"PHYS 207\");\n        courseNames = courseNames.filter(key => key != \"PHYS 227\");\n        courseNames = courseNames.filter(key => key != \"PHYS 208\");\n        courseNames = courseNames.filter(key => key != \"PHYS 228\");\n    } else if(courseNames.includes(\"CHEM 103\") && courseNames.includes(\"CHEM 133\") && courseNames.includes(\"CHEM 104\") && courseNames.includes(\"CHEM 134\")){\n        science = true;\n        courseNames = courseNames.filter(key => key != \"CHEM 103\");\n        courseNames = courseNames.filter(key => key != \"CHEM 133\");\n        courseNames = courseNames.filter(key => key != \"CHEM 104\");\n        courseNames = courseNames.filter(key => key != \"CHEM 134\");\n    }else if(courseNames.includes(\"BISC 207\") && courseNames.includes(\"BISC 208\")){\n        science = true;\n        courseNames = courseNames.filter(key => key != \"BISC 207\");\n        courseNames = courseNames.filter(key => key != \"BISC 208\");\n    } else if(courseNames.includes(\"GEOL 105\") && courseNames.includes(\"GEOL 107\") && courseNames.includes(\"GEOL 115\")){\n        science = true;\n        courseNames = courseNames.filter(key => key != \"GEOL 105\");\n        courseNames = courseNames.filter(key => key != \"GEOL 107\");\n        courseNames = courseNames.filter(key => key != \"GEOL 115\");\n    } else if(courseNames.includes(\"GEOL 107\") && courseNames.includes(\"GEOL 110\")){\n        science = true;\n        courseNames = courseNames.filter(key => key != \"GEOL 107\");\n        courseNames = courseNames.filter(key => key != \"GEOL 110\");\n    }\n\n    //checks writing reqs\n    if(courseNames.includes(\"CISC 355\")){\n        c355 = true;\n    }\n    if(courseNames.includes(\"ENGL 312\")){\n        writing = true;\n    } else if(courseNames.includes(\"ENGL 410\")){\n        writing = true;\n    }\n\n    //checks for specific courses\n    if(courseNames.includes(\"CISC 304\")){\n        c304 = true;\n        courseNames = courseNames.filter(key => key != \"CISC 304\");\n    }\n    if(courseNames.includes(\"CISC 401\")){\n        c401 = true;\n        courseNames = courseNames.filter(key => key != \"CISC 442\");\n    }\n    if(courseNames.includes(\"MATH 242\")){\n        m242 = true;\n        courseNames = courseNames.filter(key => key != \"MATH 242\");\n    }\n    if(courseNames.includes(\"MATH 349\")){\n        m349 = true;\n        courseNames = courseNames.filter(key => key != \"MATH 349\");\n    }  \n\n    //checks for stats\n    if(courseNames.includes(\"MATH 205\")){\n        stats = true;\n        courseNames = courseNames.filter(key => key != \"MATH 205\");\n    } else if(courseNames.includes(\"MATH 350\")){\n        stats = true;\n        courseNames = courseNames.filter(key => key != \"MATH 350\");\n    }\n\n    let c404 = false;\n    let m245 = false;\n    let m315 = false;\n    let m451 = false;\n    let m243 = false;\n    let m302 = false;\n    let m535 = false;\n    let m426 = false;\n\n    //checks for specific courses\n    if(courseNames.includes(\"CISC 404\")){\n        c404 = true;\n    }\n    if(courseNames.includes(\"MATH 245\")){\n        m245 = true;\n    }\n    if(courseNames.includes(\"MATH 315\")){\n        m315 = true;\n    } \n    if(courseNames.includes(\"MATH 451\")){\n        m451 = true;\n    }\n    if(courseNames.includes(\"MATH 243\")){\n        m243 = true;\n    }  \n    if(courseNames.includes(\"MATH 302\")){\n        m302 = true;\n    } \n    if(courseNames.includes(\"MATH 535\")){\n        m535 = true;\n    }\n    if(courseNames.includes(\"MATH 426\")){\n        m426 = true;\n    } \n    \n    const disComp = c404 && m245 && m315 && m451;\n    const conComp = m243 && m302 && m535 && m426;\n\n    const discrete = {\n        \"complete\": disComp, //true if all sub categories in this are true\n        \"404\": c404,\n        \"MATH 245\": m245,\n        \"MATH 315\": m315,\n        \"MATH 451\": m451,\n    };\n    \n    const continuous = {\n        \"complete\": conComp, //true if all sub categories in this are true\n        \"MATH 243\": m243,\n        \"MATH 302\": m302,\n        \"MATH 535\": m535,\n        \"MATH 426\": m426\n    };\n\n    const track = disComp && conComp;\n\n    const e6 = findCommonCourses(courseNames, restrict);\n    if(e6.length >= 2){\n        extra6 = true;\n        courseNames = courseNames.filter(key => key != e6[0]);\n        courseNames = courseNames.filter(key => key != e6[1]);\n    }\n    for(let i = 0; i < courseNames.length; i++){\n        if(courseNames[i].substr(0, 4) === \"CISC\" && (+courseNames[i][4] >= 3) && !noTech.includes(courseNames[i])){\n            extra34 = true;\n            courseNames = courseNames.filter(key => key != courseNames[i]);\n            break;\n        }\n    }\n    \n    //the below check for breadths\n    const discov = findCommonCourses(courseNames, dle);\n    if(discov.length > 0){\n        dles = true;\n    }\n    const first = findCommonCourses(courseNames, firstYearExp);\n    if(first.length > 0){\n        fys = true;\n    }\n    const cultural = findCommonCourses(courseNames, multiCult);\n    if(cultural.length > 0){\n        multi = true;\n    }\n    const a = findCommonCourses(courseNames, groupA);\n    if(a.length >= 1){\n        groupa = true;\n        courseNames = courseNames.filter(key => key != a[0]); \n    }\n    const b = findCommonCourses(courseNames, groupB);\n    if(b.length >= 1){\n        groupb = true;\n        courseNames = courseNames.filter(key => key != b[0]); \n    }\n    const c = findCommonCourses(courseNames, groupC);\n    if(c.length >= 1){\n        groupc = true;\n        courseNames = courseNames.filter(key => key != c[0]); \n    }\n    const d = findCommonCourses(courseNames, groupD);\n    if(d.length >= 1){\n        groupd = true;\n        courseNames = courseNames.filter(key => key != d[0]); \n    }\n    const extraBreadth = findCommonCourses(courseNames, groupA.concat(groupB).concat(groupC).concat(engineerBreadth).concat(engineerProfess));\n    if(extraBreadth.length >= 3){\n        extra9 = true;\n    }\n\n    const univ:univReqs =  {\n        \"ENGL 110\": e110,  \n        \"FYS\": fys,       \n        \"DLE\": dles,       \n        \"Multi\": multi,     \n        \"groupA\": groupa,    \n        \"groupB\": groupb,    \n        \"groupC\": groupc,    \n        \"groupD\": groupd,    \n        \"capstone\": caps,\n    };\n\n    //returning new object\n    return {\n        \"univ\": univ,\n        \"9 extra\": extra9,\n\n        \"108\": c108,\n        \"181\": c181,\n        \"210\": c210,\n        \"220\": c220,\n        \"260\": c260,\n        \"275\": c275,\n        \"303\": c303,\n        \"320\": c320,\n        \"MATH 210\": m210,\n        \"MATH 241\": m241,\n        \"caps\": majCaps, \n        \"science\": science,\n\n        \"writing\": writing,\n        \"355\": c355, \n        \n        \"304\": c304,\n        \"401\": c401,\n        \"MATH 242\": m242,\n        \"MATH 349\": m349,\n        \"Prob/Stat\": stats,\n\n        \"discreteTrack\": discrete,\n        \"contTrack\": continuous, \n        \"track\": track,\n        \"6Restrict\": extra6,\n        \"cisc3-4Elect\": extra34, \n        \n        \"124\": total124       \n    };\n}","import { CSAIRobots, updateCSAIRobots } from \"../data/csAIRobots\";\nimport { CSBio, updateCSBio } from \"../data/csBio\";\nimport { CSBS, updateCSBS } from \"../data/csBS\";\nimport { CSCyber, updateCSCyber } from \"../data/csCyber\";\nimport { CSData, updateCSData } from \"../data/csData\";\nimport { CSHighPerf, updateCSHighPerf } from \"../data/csHighPerf\";\nimport { CSSystems, updateCSSystems } from \"../data/csSystems\";\nimport { CSTheory, updateCSTheory } from \"../data/csTheory\";\nimport { Semester } from \"../interfaces/semester\";\n\nexport type Concentrations = | CSBS\n    | CSAIRobots\n    | CSBio\n    | CSCyber\n    | CSData\n    | CSHighPerf\n    | CSSystems\n    | CSTheory\n\nexport type updateFunction = (s: Semester[]) => Concentrations\n\n//mapping concentration name to corresponding update function\nexport const dispatch : Record<string, updateFunction> = {\n    \"Traditional Program\": updateCSBS,\n    \"Artificial Intelligence and Robotics\": updateCSAIRobots,\n    \"Bioinformatics\": updateCSBio,\n    \"Cybersecurity\": updateCSCyber,\n    \"Data Science\": updateCSData,\n    \"High Performance Computing\": updateCSHighPerf,\n    \"Systems and Networks\": updateCSSystems,\n    \"Theory and Computation\": updateCSTheory,\n};\n\n//find concentration function\nexport function findConcentration(conc: string,semesters: Semester[]): Concentrations {\n    return dispatch[conc](semesters);\n}\n","import { Semester } from \"../interfaces/semester\";\nimport { findCourse } from \"../utilities/findCourse\";\nimport { univReqs, noTech, accumulateCourses, dle, firstYearExp, multiCult, groupA, groupB, groupC, groupD, findCommonCourses, engineerBreadth, engineerProfess } from \"./univReqs\";\n\nexport interface CSBS {\n    \"univ\": univReqs,\n    \"9 extra\": boolean, //can be from Group A, B, C or engineer breadth (No math/science/tech)\n    //6 must be at 300 level, or foreign lang at 107 or higher\n    //Max of 6 credits can come from Career and Professional Prep\n\n    // For the following, if there is no prefix, it means CISC\n    \"108\": boolean,\n    \"181\": boolean,\n    \"210\": boolean,\n    \"220\": boolean,\n    \"260\": boolean,\n    \"275\": boolean,\n    \"303\":boolean,\n    \"320\": boolean,\n    \"361\": boolean,\n    \"372\": boolean,\n    \"6Extra301\": boolean, //6 credits, exclude noTech list, must be at 301 or above\n    \"12Extra\": boolean, //12 credits, exclude noTech list, cannot overlap other electives\n    \"Prob/Stat\": boolean, //MATH 205 or MATH 350\n    \"MATH 210\": boolean,\n    \"MATH 241\": boolean,\n    \"MATH 242\": boolean,\n    \"caps\": boolean, //(CISC 498 + CISC 499) OR (UNIV 401 + UNIV 402)\n    \"science\": boolean,\n    //OP 1: PHYS 207, PHYS 227, PHYS 208, PHYS 208, PHYS 228\n    //OP2: CHEM 103, CHEM 133, CHEM 104, CHEM 134\n    //OP 3: BISC 207, BISC 208\n    //OP 4: GEOL 105, GEOL 107, GEOL 115\n    //OP5: GEOL 107, GEOL 110\n\n    \"math300\": boolean, //usually CISC 304 OR MATH 349, or another 300 math course approved\n    \"writing\": boolean, //ENGL 312 OR ENGL 410\n    \"355\": boolean, //ETHICS\n    // ENGL 312, ENGL 410 AND CISC 355 count for Engineer Breadth\n    \n    \"124\": boolean          //124 Credits needed to graduate\n}\n\nexport function updateCSBS(semesters: Semester[]): CSBS {\n    let totalCreds = 0;\n    for (let i = 0; i < semesters.length; i++){\n        for (let j = 0; j < semesters[i].courses.length; j++){\n            totalCreds = totalCreds + +semesters[i].courses[j].info.credits;\n        }\n    }\n    const cours = accumulateCourses(semesters);\n    let courseNames = Array.from(cours.keys());\n\n    let e110 = false;\n    let fys = false;\n    let dles = false;\n    let multi = false;\n    let groupa = false;\n    let groupb = false;\n    let groupc = false;\n    let groupd = false;\n    let caps = false;\n\n    let extra9 = false;\n\n    let c108 = false;\n    let c181 = false;\n    let c210 = false;\n    let c220 = false;\n    let c260 = false;\n    let c275 = false;\n    let c303 = false;\n    let c320 = false;\n    let c361 = false;\n    let c372 = false;\n    let m210 = false;\n    let m241 = false;\n    let m242 = false;\n    let sixat300 = false;\n    let extra12 = false;\n    let stats = false;\n    let majCaps = false;\n    let science = false;\n    let m300 = false;\n    let writing = false;\n    let c355 = false;\n    let total124 = false;\n\n    if(totalCreds >= 124){\n        total124 = true;\n    }\n    //check specific courses\n    if(courseNames.includes(\"ENGL 110\")){\n        e110 = true;\n        courseNames = courseNames.filter(key => key != \"ENGL 110\");\n    }\n    if(courseNames.includes(\"CISC 108\")){\n        c108 = true;\n        courseNames = courseNames.filter(key => key != \"CISC 108\");\n    }\n    if(courseNames.includes(\"CISC 181\")){\n        c181 = true;\n        courseNames = courseNames.filter(key => key != \"CISC 181\");\n    }\n    if(courseNames.includes(\"CISC 210\")){\n        c210 = true;\n        courseNames = courseNames.filter(key => key != \"CISC 210\");\n    }\n    if(courseNames.includes(\"CISC 220\")){\n        c220 = true;\n        courseNames = courseNames.filter(key => key != \"CISC 220\");\n    }\n    if(courseNames.includes(\"CISC 260\")){\n        c260 = true;\n        courseNames = courseNames.filter(key => key != \"CISC 260\");\n    }\n    if(courseNames.includes(\"CISC 275\")){\n        c275 = true;\n        courseNames = courseNames.filter(key => key != \"CISC 275\");\n    }\n    if(courseNames.includes(\"MATH 210\")){\n        m210 = true;\n        courseNames = courseNames.filter(key => key != \"MATH 210\");\n    }\n    if(courseNames.includes(\"MATH 241\")){\n        m241 = true;\n        courseNames = courseNames.filter(key => key != \"MATH 241\");\n    }\n    if(courseNames.includes(\"CISC 303\")){\n        c303 = true;\n        courseNames = courseNames.filter(key => key != \"CISC 303\");\n    }\n    if(courseNames.includes(\"CISC 320\")){\n        c320 = true;\n        courseNames = courseNames.filter(key => key != \"CISC 320\");\n    }\n    if(courseNames.includes(\"CISC 361\")){\n        c361 = true;\n        courseNames = courseNames.filter(key => key != \"CISC 361\");\n    }\n    if(courseNames.includes(\"CISC 372\")){\n        c372 = true;\n        courseNames = courseNames.filter(key => key != \"CISC 372\");\n    }\n    if(courseNames.includes(\"MATH 242\")){\n        m242 = true;\n        courseNames = courseNames.filter(key => key != \"MATH 242\");\n    }\n    if(courseNames.includes(\"CISC 355\")){\n        c355 = true;\n    }\n    //math req\n    if(courseNames.includes(\"CISC 304\")){\n        m300 = true;\n        courseNames = courseNames.filter(key => key != \"CISC 304\");\n    } else if(courseNames.includes(\"MATH 349\")){\n        m300 = true;\n        courseNames = courseNames.filter(key => key != \"MATH 349\");\n    }\n    //stats\n    if(courseNames.includes(\"MATH 205\")){\n        stats = true;\n        courseNames = courseNames.filter(key => key != \"MATH 205\");\n    } else if(courseNames.includes(\"MATH 350\")){\n        stats = true;\n        courseNames = courseNames.filter(key => key != \"MATH 350\");\n    }\n    //writing req\n    if(courseNames.includes(\"ENGL 312\")){\n        writing = true;\n    } else if(courseNames.includes(\"ENGL 410\")){\n        writing = true;\n    }\n    //capstone\n    if(courseNames.includes(\"CISC 498\") && courseNames.includes(\"CISC 499\")){\n        caps = true;\n        majCaps = true;\n        courseNames = courseNames.filter(key => key != \"CISC 498\");\n        courseNames = courseNames.filter(key => key != \"CISC 499\");\n    } else if(courseNames.includes(\"UNIV 401\") && courseNames.includes(\"UNIV 402\")){\n        caps = true;\n        majCaps = true;\n        courseNames = courseNames.filter(key => key != \"UNIV 401\");\n        courseNames = courseNames.filter(key => key != \"UNIV 402\");\n    }\n    //lab science\n    if(courseNames.includes(\"PHYS 207\") && courseNames.includes(\"PHYS 227\") && courseNames.includes(\"PHYS 208\") && courseNames.includes(\"PHYS 228\")){\n        science = true;\n        courseNames = courseNames.filter(key => key != \"PHYS 207\");\n        courseNames = courseNames.filter(key => key != \"PHYS 227\");\n        courseNames = courseNames.filter(key => key != \"PHYS 208\");\n        courseNames = courseNames.filter(key => key != \"PHYS 228\");\n    } else if(courseNames.includes(\"CHEM 103\") && courseNames.includes(\"CHEM 133\") && courseNames.includes(\"CHEM 104\") && courseNames.includes(\"CHEM 134\")){\n        science = true;\n        courseNames = courseNames.filter(key => key != \"CHEM 103\");\n        courseNames = courseNames.filter(key => key != \"CHEM 133\");\n        courseNames = courseNames.filter(key => key != \"CHEM 104\");\n        courseNames = courseNames.filter(key => key != \"CHEM 134\");\n    }else if(courseNames.includes(\"BISC 207\") && courseNames.includes(\"BISC 208\")){\n        science = true;\n        courseNames = courseNames.filter(key => key != \"BISC 207\");\n        courseNames = courseNames.filter(key => key != \"BISC 208\");\n    } else if(courseNames.includes(\"GEOL 105\") && courseNames.includes(\"GEOL 107\") && courseNames.includes(\"GEOL 115\")){\n        science = true;\n        courseNames = courseNames.filter(key => key != \"GEOL 105\");\n        courseNames = courseNames.filter(key => key != \"GEOL 107\");\n        courseNames = courseNames.filter(key => key != \"GEOL 115\");\n    } else if(courseNames.includes(\"GEOL 107\") && courseNames.includes(\"GEOL 110\")){\n        science = true;\n        courseNames = courseNames.filter(key => key != \"GEOL 107\");\n        courseNames = courseNames.filter(key => key != \"GEOL 110\");\n    }\n    //extra 6 credits\n    let six = 0;\n    for(let i = 0; i < courseNames.length; i++){\n        if(courseNames[i].substr(0, 4) === \"CISC\" && (+courseNames[i][4] >= 3) && !noTech.includes(courseNames[i])){\n            six = six + +findCourse(courseNames[i]).credits;\n            courseNames = courseNames.filter(key => key != courseNames[i]); \n            i = i - 1;\n        }\n        if(six >= 6){\n            sixat300 = true;\n            break;\n        }\n    }\n    //extra 12 credits\n    let twelve = 0;\n    for(let i = 0; i < courseNames.length; i++){\n        if(courseNames[i].substr(0, 4) === \"CISC\" && (+courseNames[i][4] >= 3) && !noTech.includes(courseNames[i])){\n            twelve = twelve + +findCourse(courseNames[i]).credits;\n            courseNames = courseNames.filter(key => key != courseNames[i]); \n            i = i - 1;\n        }\n        if(six >= 6){\n            extra12 = true;\n            break;\n        }\n    }\n\n    //breadth\n    const discov = findCommonCourses(courseNames, dle);\n    if(discov.length > 0){\n        dles = true;\n    }\n    const first = findCommonCourses(courseNames, firstYearExp);\n    if(first.length > 0){\n        fys = true;\n    }\n    const cultural = findCommonCourses(courseNames, multiCult);\n    if(cultural.length > 0){\n        multi = true;\n    }\n    const a = findCommonCourses(courseNames, groupA);\n    if(a.length >= 1){\n        groupa = true;\n        courseNames = courseNames.filter(key => key != a[0]); \n    }\n    const b = findCommonCourses(courseNames, groupB);\n    if(b.length >= 1){\n        groupb = true;\n        courseNames = courseNames.filter(key => key != b[0]); \n    }\n    const c = findCommonCourses(courseNames, groupC);\n    if(c.length >= 1){\n        groupc = true;\n        courseNames = courseNames.filter(key => key != c[0]); \n    }\n    const d = findCommonCourses(courseNames, groupD);\n    if(d.length >= 1){\n        groupd = true;\n        courseNames = courseNames.filter(key => key != d[0]); \n    }\n    const extraBreadth = findCommonCourses(courseNames, groupA.concat(groupB).concat(groupC).concat(engineerBreadth).concat(engineerProfess));\n    if(extraBreadth.length >= 3){\n        extra9 = true;\n    }\n\n    const univ:univReqs =  {\n        \"ENGL 110\": e110,  \n        \"FYS\": fys,       \n        \"DLE\": dles,       \n        \"Multi\": multi,     \n        \"groupA\": groupa,    \n        \"groupB\": groupb,    \n        \"groupC\": groupc,    \n        \"groupD\": groupd,    \n        \"capstone\": caps,\n    };\n\n    return {\n        \"univ\": univ,\n        \"9 extra\": extra9,\n        \"108\": c108,\n        \"181\": c181,\n        \"210\": c210,\n        \"220\": c220,\n        \"260\": c260,\n        \"275\": c275,\n        \"303\": c303,\n        \"320\": c320,\n        \"361\": c361,\n        \"372\": c372,\n        \"6Extra301\": sixat300, \n        \"12Extra\": extra12,\n        \"Prob/Stat\": stats, \n        \"MATH 210\": m210,\n        \"MATH 241\": m241,\n        \"MATH 242\": m242,\n        \"caps\": majCaps,\n        \"science\": science,\n    \n        \"math300\": m300, //usually CISC 304 OR MATH 349, or another 300 math course approved\n        \"writing\": writing, //ENGL 312 OR ENGL 410\n        \"355\": c355, //ETHICS\n        // ENGL 312, ENGL 410 AND CISC 355 count for Engineer Breadth\n        \n        \"124\": total124          //124 Credits needed to graduate\n    };\n}\n\n","import { Semester } from \"../interfaces/semester\";\nimport { univReqs, noTech, accumulateCourses, findCommonCourses, dle, engineerBreadth, engineerProfess, firstYearExp, groupA, groupB, groupC, groupD, multiCult } from \"./univReqs\";\n\nexport interface CSHighPerf {\n    \"univ\": univReqs,\n    \"9 extra\": boolean, //can be from Group A, B, C or engineer breadth (No math/science/tech)\n    //6 must be at 300 level, or foreign lang at 107 or higher\n    //Max of 6 credits can come from Career and Professional Prep\n\n    // For the following, if there is no prefix, it means CISC\n    \"108\": boolean,\n    \"181\": boolean,\n    \"210\": boolean,\n    \"220\": boolean,\n    \"260\": boolean,\n    \"275\": boolean,\n    \"303\":boolean,\n    \"320\": boolean,\n    \"MATH 210\": boolean,\n    \"MATH 241\": boolean,\n    \"caps\": boolean, //(CISC 498 + CISC 499) OR (UNIV 401 + UNIV 402)\n    \"science\": boolean,\n    //OP 1: PHYS 207, PHYS 227, PHYS 208, PHYS 208, PHYS 228\n    //OP2: CHEM 103, CHEM 133, CHEM 104, CHEM 134\n    //OP 3: BISC 207, BISC 208\n    //OP 4: GEOL 105, GEOL 107, GEOL 115\n    //OP5: GEOL 107, GEOL 110\n    \"writing\": boolean, //ENGL 312 OR ENGL 410\n    \"355\": boolean, //ETHICS\n    // ENGL 312, ENGL 410 AND CISC 355 count for Engineer Breadth\n    \n    \"360\": boolean,\n    \"361\": boolean,\n    \"372\": boolean,\n    \"450\": boolean,\n    \"471\": boolean,\n    \"MATH 242\": boolean,\n    \"MATH 243\": boolean,\n    \"apMathTrack\": apMath,\n    \"dataTrack\": data, \n    \"track\": boolean, //true if one of apMathTrack or Data Track is complete\n\n    \"124\": boolean          //124 Credits needed to graduate\n}\n\ninterface apMath{\n    \"complete\": boolean, //true if all sub categories in this are true\n    \"MATH 351\": boolean,\n    \"MATH 428\": boolean,\n    \"Prob/Stat\": boolean, //MATH 205 or MATH 350\n    \"elec\": boolean // 5 credits from CISC 300 level +, MATH 205, MATH 350\n}\n\ninterface data{\n    \"complete\": boolean, //true if all sub categories in this are true\n    \"437\": boolean,\n    \"MATH 350\": boolean,\n    \"MATH 450\": boolean,\n    \"ml\": boolean, //CISC 483 OR CISC 484\n    \"elec\": boolean // 5 credits from CISC 300 level +, MATH 302, MATH 349, MATH 351, MATH 535\n}\n\nexport function updateCSHighPerf(semesters: Semester[]): CSHighPerf {\n    let totalCreds = 0;\n    for (let i = 0; i < semesters.length; i++){\n        for (let j = 0; j < semesters[i].courses.length; j++){\n            totalCreds = totalCreds + +semesters[i].courses[j].info.credits;\n        }\n    }\n    const cours = accumulateCourses(semesters);\n    let courseNames = Array.from(cours.keys());\n\n    let e110 = false;\n    let fys = false;\n    let dles = false;\n    let multi = false;\n    let groupa = false;\n    let groupb = false;\n    let groupc = false;\n    let groupd = false;\n    let caps = false;\n\n    let extra9 = false;\n\n    let c108 = false;\n    let c181 = false;\n    let c210 = false;\n    let c220 = false;\n    let c260 = false;\n    let c275 = false;\n    let c303 = false;\n    let c320 = false;\n    let m210 = false;\n    let m241 = false;\n\n    let majCaps = false;\n    let science = false;\n    let writing = false;\n    let c355 = false;\n\n    let c360 = false;\n    let c361 = false;\n    let c372 = false;\n    let c450 = false;\n    let c471 = false;\n    let m242 = false;\n    let m243 = false;\n\n    //apMath\n    let apComp = false;\n    let m351 = false;\n    let m428 = false;\n    let stats = false;\n    let apElec = false;\n\n    //Data\n    let datComp = false;\n    let c437 = false;\n    let m350 = false;\n    let m450 = false;\n    let ml = false;\n    let datElec = false;\n\n    let total124 = false;\n\n    if(totalCreds >= 124){\n        total124 = true;\n    }\n    //check for specific courses\n    if(courseNames.includes(\"ENGL 110\")){\n        e110 = true;\n        courseNames = courseNames.filter(key => key != \"ENGL 110\");\n    }\n    if(courseNames.includes(\"CISC 108\")){\n        c108 = true;\n        courseNames = courseNames.filter(key => key != \"CISC 108\");\n    }\n    if(courseNames.includes(\"CISC 181\")){\n        c181 = true;\n        courseNames = courseNames.filter(key => key != \"CISC 181\");\n    }\n    if(courseNames.includes(\"CISC 210\")){\n        c210 = true;\n        courseNames = courseNames.filter(key => key != \"CISC 210\");\n    }\n    if(courseNames.includes(\"CISC 220\")){\n        c220 = true;\n        courseNames = courseNames.filter(key => key != \"CISC 220\");\n    }\n    if(courseNames.includes(\"CISC 260\")){\n        c260 = true;\n        courseNames = courseNames.filter(key => key != \"CISC 260\");\n    }\n    if(courseNames.includes(\"CISC 275\")){\n        c275 = true;\n        courseNames = courseNames.filter(key => key != \"CISC 275\");\n    }\n    if(courseNames.includes(\"CISC 303\")){\n        c303 = true;\n        courseNames = courseNames.filter(key => key != \"CISC 303\");\n    }\n    if(courseNames.includes(\"CISC 320\")){\n        c320 = true;\n        courseNames = courseNames.filter(key => key != \"CISC 320\");\n    }\n    if(courseNames.includes(\"MATH 210\")){\n        m210 = true;\n        courseNames = courseNames.filter(key => key != \"MATH 210\");\n    }\n    if(courseNames.includes(\"MATH 241\")){\n        m241 = true;\n        courseNames = courseNames.filter(key => key != \"MATH 241\");\n    }\n\n    //capstone\n    if(courseNames.includes(\"CISC 498\") && courseNames.includes(\"CISC 499\")){\n        caps = true;\n        majCaps = true;\n        courseNames = courseNames.filter(key => key != \"CISC 498\");\n        courseNames = courseNames.filter(key => key != \"CISC 499\");\n    } else if(courseNames.includes(\"UNIV 401\") && courseNames.includes(\"UNIV 402\")){\n        caps = true;\n        majCaps = true;\n        courseNames = courseNames.filter(key => key != \"UNIV 401\");\n        courseNames = courseNames.filter(key => key != \"UNIV 402\");\n    }\n\n    //lab science\n    if(courseNames.includes(\"PHYS 207\") && courseNames.includes(\"PHYS 227\") && courseNames.includes(\"PHYS 208\") && courseNames.includes(\"PHYS 228\")){\n        science = true;\n        courseNames = courseNames.filter(key => key != \"PHYS 207\");\n        courseNames = courseNames.filter(key => key != \"PHYS 227\");\n        courseNames = courseNames.filter(key => key != \"PHYS 208\");\n        courseNames = courseNames.filter(key => key != \"PHYS 228\");\n    } else if(courseNames.includes(\"CHEM 103\") && courseNames.includes(\"CHEM 133\") && courseNames.includes(\"CHEM 104\") && courseNames.includes(\"CHEM 134\")){\n        science = true;\n        courseNames = courseNames.filter(key => key != \"CHEM 103\");\n        courseNames = courseNames.filter(key => key != \"CHEM 133\");\n        courseNames = courseNames.filter(key => key != \"CHEM 104\");\n        courseNames = courseNames.filter(key => key != \"CHEM 134\");\n    }else if(courseNames.includes(\"BISC 207\") && courseNames.includes(\"BISC 208\")){\n        science = true;\n        courseNames = courseNames.filter(key => key != \"BISC 207\");\n        courseNames = courseNames.filter(key => key != \"BISC 208\");\n    } else if(courseNames.includes(\"GEOL 105\") && courseNames.includes(\"GEOL 107\") && courseNames.includes(\"GEOL 115\")){\n        science = true;\n        courseNames = courseNames.filter(key => key != \"GEOL 105\");\n        courseNames = courseNames.filter(key => key != \"GEOL 107\");\n        courseNames = courseNames.filter(key => key != \"GEOL 115\");\n    } else if(courseNames.includes(\"GEOL 107\") && courseNames.includes(\"GEOL 110\")){\n        science = true;\n        courseNames = courseNames.filter(key => key != \"GEOL 107\");\n        courseNames = courseNames.filter(key => key != \"GEOL 110\");\n    }\n\n    //writing req\n    if(courseNames.includes(\"CISC 355\")){\n        c355 = true;\n    }\n    if(courseNames.includes(\"ENGL 312\")){\n        writing = true;\n    } else if(courseNames.includes(\"ENGL 410\")){\n        writing = true;\n    }\n\n    //specific courses\n    if(courseNames.includes(\"CISC 360\")){\n        c360 = true;\n        courseNames = courseNames.filter(key => key != \"CISC 360\");\n    }\n    if(courseNames.includes(\"CISC 361\")){\n        c361 = true;\n        courseNames = courseNames.filter(key => key != \"CISC 361\");\n    }\n    if(courseNames.includes(\"CISC 372\")){\n        c372 = true;\n        courseNames = courseNames.filter(key => key != \"CISC 372\");\n    }\n    if(courseNames.includes(\"CISC 450\")){\n        c450 = true;\n        courseNames = courseNames.filter(key => key != \"CISC 450\");\n    }\n    if(courseNames.includes(\"CISC 471\")){\n        c471 = true;\n        courseNames = courseNames.filter(key => key != \"CISC 471\");\n    } \n    if(courseNames.includes(\"MATH 242\")){\n        m242 = true;\n        courseNames = courseNames.filter(key => key != \"MATH 242\");\n    }\n    if(courseNames.includes(\"MATH 243\")){\n        m243 = true;\n        courseNames = courseNames.filter(key => key != \"MATH 243\");\n    }  \n\n    //stats\n    if(courseNames.includes(\"MATH 205\")){\n        stats = true;\n        courseNames = courseNames.filter(key => key != \"MATH 205\");\n    } else if(courseNames.includes(\"MATH 350\")){\n        stats = true;\n        courseNames = courseNames.filter(key => key != \"MATH 350\");\n    }\n    //specific courses\n    if(courseNames.includes(\"MATH 351\")){\n        m351 = true;\n    }\n    if(courseNames.includes(\"MATH 428\")){\n        m428 = true;\n    }\n    if(courseNames.includes(\"CISC 437\")){\n        c437 = true;\n    }\n    if(courseNames.includes(\"MATH 350\")){\n        m350 = true;\n    }\n    if(courseNames.includes(\"MATH 450\")){\n        m450 = true;\n    }\n    if(courseNames.includes(\"MATH 450\")){\n        m450 = true;\n    }\n    if(courseNames.includes(\"CISC 483\") || courseNames.includes(\"CISC 484\")){\n        ml = true;\n    }\n\n    //checking for different tracks\n    let total = 0;\n    for(let i = 0; i < courseNames.length; i++){\n        if(courseNames[i].substr(0, 4) === \"CISC\" && (+courseNames[i][4] >= 3) && !noTech.includes(courseNames[i])){\n            total = total + 3;\n            break;\n        }\n    }\n    if(total >= 5){\n        apElec = true;\n        datElec = true;\n    }\n\n    apComp = m351 && m428 && stats && apElec;\n    datComp = c437 && m350 && m450 && ml && datElec;\n\n    const track = apComp && datComp;\n\n    const apMath = {\n        \"complete\": apComp,\n        \"MATH 351\": m351,\n        \"MATH 428\": m428,\n        \"Prob/Stat\": stats,\n        \"elec\": apElec \n    };\n    \n    const data = {\n        \"complete\": datComp, \n        \"437\": c437,\n        \"MATH 350\": m350,\n        \"MATH 450\": m450,\n        \"ml\": ml,\n        \"elec\": datElec\n    };\n    \n    //breadths\n    const discov = findCommonCourses(courseNames, dle);\n    if(discov.length > 0){\n        dles = true;\n    }\n    const first = findCommonCourses(courseNames, firstYearExp);\n    if(first.length > 0){\n        fys = true;\n    }\n    const cultural = findCommonCourses(courseNames, multiCult);\n    if(cultural.length > 0){\n        multi = true;\n    }\n    const a = findCommonCourses(courseNames, groupA);\n    if(a.length >= 1){\n        groupa = true;\n        courseNames = courseNames.filter(key => key != a[0]); \n    }\n    const b = findCommonCourses(courseNames, groupB);\n    if(b.length >= 1){\n        groupb = true;\n        courseNames = courseNames.filter(key => key != b[0]); \n    }\n    const c = findCommonCourses(courseNames, groupC);\n    if(c.length >= 1){\n        groupc = true;\n        courseNames = courseNames.filter(key => key != c[0]); \n    }\n    const d = findCommonCourses(courseNames, groupD);\n    if(d.length >= 1){\n        groupd = true;\n        courseNames = courseNames.filter(key => key != d[0]); \n    }\n    const extraBreadth = findCommonCourses(courseNames, groupA.concat(groupB).concat(groupC).concat(engineerBreadth).concat(engineerProfess));\n    if(extraBreadth.length >= 3){\n        extra9 = true;\n    }\n\n    const univ:univReqs =  {\n        \"ENGL 110\": e110,  \n        \"FYS\": fys,       \n        \"DLE\": dles,       \n        \"Multi\": multi,     \n        \"groupA\": groupa,    \n        \"groupB\": groupb,    \n        \"groupC\": groupc,    \n        \"groupD\": groupd,    \n        \"capstone\": caps,\n    };\n\n    return {\n        \"univ\": univ,\n        \"9 extra\": extra9,\n\n        \"108\": c108,\n        \"181\": c181,\n        \"210\": c210,\n        \"220\": c220,\n        \"260\": c260,\n        \"275\": c275,\n        \"303\": c303,\n        \"320\": c320,\n        \"MATH 210\": m210,\n        \"MATH 241\": m241,\n        \"caps\": majCaps, \n        \"science\": science,\n\n        \"writing\": writing,\n        \"355\": c355, \n        \n        \"360\": c360,\n        \"361\": c361,\n        \"372\": c372,\n        \"450\": c450,\n        \"471\": c471,\n        \"MATH 242\": m242,\n        \"MATH 243\": m243,\n        \"apMathTrack\": apMath,\n        \"dataTrack\": data, \n        \"track\": track, //true if one of apMathTrack or Data Track is complete\n\n        \"124\": total124      \n    };\n}","import React, { useEffect, useState } from \"react\";\nimport { Col } from \"react-bootstrap\";\nimport \"../App.css\";\nimport { updateCSBA } from \"../data/csBA\";\nimport { CSMinorUpdate } from \"../data/minor\";\nimport { Semester } from \"../interfaces/semester\";\nimport { ReqCourseText } from \"./ReqCourseText\";\nimport { findConcentration } from \"../utilities/findConcentration\";\n\ninterface iReq {\n    semesters: Semester[];\n    bsba: string;\n    major: string;\n    conc: string;\n}\n\nexport function Requirements({ semesters, bsba, major, conc }: iReq): JSX.Element {\n    const [remainingCourses,setRemainingCourses] = useState<string[]>([]);\n    const [fulfilledCourses, setFulfilledCourses] = useState<string[]>([]);\n\n    function getConc() {\n        if (major === \"Minor\") {\n            return CSMinorUpdate(semesters);\n        } else {\n            if (bsba === \"BA\") {\n                return updateCSBA(semesters);\n            } else {\n                return findConcentration(conc,semesters);\n            }\n        }\n    }\n    useEffect(() => {\n        const newRemCourses : string[] = [];\n        const newFulCourses : string[] = [];\n        const requirements = Object.entries(getConc());\n\n        // Loops through all elements in the updated degree plan to split all\n        // requirements into a fulfilled list and a remaining list\n        for (const [key, value] of requirements) {\n            if (key === \"univ\") {\n                for (const [univKey, univValue] of Object.entries(value)) { \n                    univValue && newFulCourses.push(univKey);\n                    !univValue && newRemCourses.push(univKey);\n                }\n            } else if ([\"apMathTrack\", \"dataTrack\", \"discreteTrack\", \"contTrack\"].includes(key)) {\n                let trackComplete = false;\n                let trackCount = 0;\n                for (const [univKey, univValue] of Object.entries(value)) { \n                    if (univKey === \"complete\") {\n                        trackComplete = trackComplete || univValue as boolean;\n                        trackCount++;\n                    } else {\n                        univValue && !newFulCourses.includes(univKey) && newFulCourses.push(univKey);\n                        !univValue && !newRemCourses.includes(univKey) && newRemCourses.push(univKey);\n                    }\n                }\n                trackCount == 2 && trackComplete && newFulCourses.push(\"complete\");\n                trackCount == 2 && !trackComplete && newRemCourses.push(\"complete\");\n            } else {\n                if (value) {\n                    newFulCourses.push(key);\n                } else {\n                    newRemCourses.push(key);\n                }\n            }\n        }\n        setFulfilledCourses(newFulCourses);\n        setRemainingCourses(newRemCourses);\n\n    }, [semesters,bsba,major,conc] );\n    return <Col id=\"move-when-scroll\">\n        <h2 className=\"subtitle\">Degree Requirements</h2>\n        <ul>\n            <ReqCourseText courseKeys={remainingCourses} fulfilled={false}></ReqCourseText>\n            <ReqCourseText courseKeys={fulfilledCourses} fulfilled={true}></ReqCourseText>\n        </ul>\n    </Col>;\n}","import { Semester } from \"../interfaces/semester\";\nimport { accumulateCourses } from \"./univReqs\";\n\n\nexport interface CSMinor{\n    \"intro\": boolean, //CISC 106 or CISC 108\n    \"181\": boolean,\n    \"210\": boolean,\n    \"220\": boolean,\n    \"6 Extra\": boolean\n}\n\nexport function CSMinorUpdate(semesters:Semester[]):CSMinor{\n    let intro = false;\n    let c181 = false;\n    let c210 = false;\n    let c220 = false;\n    let extra6 = false;\n\n    const cours = accumulateCourses(semesters);\n    let courseNames = Array.from(cours.keys());\n\n    if(courseNames.includes(\"CISC 181\")){ //checks for 181\n        c181 = true;\n        courseNames = courseNames.filter(key => key != \"CISC 181\");\n    }\n    if(courseNames.includes(\"CISC 210\")){ //checks for 210\n        c210 = true;\n        courseNames = courseNames.filter(key => key != \"CISC 210\");\n    }\n    if(courseNames.includes(\"CISC 220\")){ //checks for 220\n        c220 = true;\n        courseNames = courseNames.filter(key => key != \"CISC 220\");\n    }\n    if(courseNames.includes(\"CISC 106\")){ //checks for 106 or 108\n        intro = true;\n        courseNames = courseNames.filter(key => key != \"CISC 106\");\n    } else if(courseNames.includes(\"CISC 108\")){\n        intro = true;\n        courseNames = courseNames.filter(key => key != \"CISC 108\");\n    }\n    let total = 0;\n    for(let i = 0; i < courseNames.length; i++){  //checks if the extra electives are present, is still buggy\n        if(courseNames[i].substr(0, 4) === \"CISC\" && ![\"CISC 355\", \"CISC 356\"].includes(courseNames[i])){\n            total = total + 3;\n            courseNames = courseNames.filter(key => key != courseNames[i]);\n        }\n    }\n    if(total >= 6){\n        extra6 = true;\n    }\n\n    //returns updated object \n    return {\n        \"intro\": intro, //CISC 106 or CISC 108\n        \"181\": c181,\n        \"210\": c210,\n        \"220\": c220,\n        \"6 Extra\": extra6\n    };\n}","// Drag and Drop used https://medium.com/nmc-techblog/easy-drag-and-drop-in-react-22778b30ba37\n\nimport React from \"react\";\nimport { useDrag } from \"react-dnd\";\nimport { CourseDisplay } from \"../interfaces/course\";\n\n//interface for things being passed into component, we anticipate more \n// values will be needed later\ninterface iDragClass{\n    course:CourseDisplay\n}\n\nexport function DraggableCourse({course}: iDragClass): JSX.Element {\n    //dragging hook from dnd package, exact copy\n    const [{ isDragging }, dragRef] = useDrag({\n        type: \"course\",\n        item: course,\n        collect: (monitor) => ({\n            isDragging: monitor.isDragging()\n        })\n    });\n\n    //makes card looking object that can be dragged\n    return (\n        <div className = \"dragCourse\" ref={dragRef} role = \"drag\">\n            {course.info.code} {course.info.name}\n            {isDragging}\n        </div>\n    );\n}","import React, { useState } from \"react\";\nimport { Button, Col, Form } from \"react-bootstrap\";\nimport { Course, CourseDisplay } from \"../interfaces/course\";\nimport { findCourse, getAllCourses } from \"../utilities/findCourse\";\nimport {DraggableCourse} from \"./DraggableCourse\";\nimport \"../App.css\";\nimport { Autocomplete, TextField } from \"@mui/material\";\n\n//Autocomplete came from https://mui.com/components/autocomplete/#useautocomplete\n\n//interface for things getting passed to component\ninterface iCoursePl{\n    coursesPool: CourseDisplay[],  //array that has courses in poool\n    setCoursesPool: (cs: CourseDisplay[]) => void;  //setter to update this array\n}\n\n// the left column of the app, holds the course select and drag and drop buttons\nexport function CoursePool({coursesPool, setCoursesPool}: iCoursePl): JSX.Element {\n    const [inpu, setInpu] = useState<string>(\"\"); //string value for input for class\n\n    //check if course already in course pool, returns true if it is, false if not\n    function courseExists(code:string):boolean{\n        return coursesPool.some(function(el:CourseDisplay) {\n            return el.info.code === code;\n        });         \n    }\n\n    //check course existence then add course in course pool\n    function addCourse(name: string): void {\n        const course:Course = findCourse(name); //will see if inputed course is in catalog\n        if(course.name === \"\"){\n            alert(\"Course Does not Exist\");\n        }else{\n            if(courseExists(name)){\n                alert(\"Course is Already in Pool\");\n            } else{\n                setCoursesPool([...coursesPool, {info:course, grade:\"-\"}]);\n            }\n        }\n    }\n\n    //form came from react bootstrap\n    return<Col id=\"move-when-scroll\" >\n        <h2 className = \"subtitle\">Course Pool</h2>\n        <Form id= \"searchBar\" onSubmit={(event)=>{\n            addCourse(inpu);\n            event.preventDefault();\n        }}>\n            <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n                <Form.Label>Enter the desired course code:</Form.Label>\n                <Autocomplete onChange={(event, value) => {\n                    setInpu(value as string); event.preventDefault();\n                }} disablePortal id=\"combo-box-demo\" options = {getAllCourses()} renderInput= {(params) => <TextField {...params} label = \"Course Code\"/>}/>\n            </Form.Group>\n            <Button data-testid=\"add-Course-button\" onClick={() => {\n                addCourse(inpu);\n            }}>\n            Add Course  \n            </Button>\n        </Form>\n        {coursesPool.length===0 && <p>Drag and drop courses from course pool into a semester.</p>}\n        {coursesPool.map(course => \n            <div key = {course.info.code}>\n                <DraggableCourse course = {course}></DraggableCourse>\n            </div>\n        )}\n    </Col>;\n}","import React from \"react\";\nimport { Container, Dropdown } from \"react-bootstrap\";\nimport \"../App.css\";\n\ninterface iConc{\n    bsba : string;\n    setBSBA : (sb : string) =>void\n    major: string;\n    setMajor: (sm: string) => void\n    conc: string;\n    setConc: (sc: string) => void\n}\nexport function Concentration({bsba,setBSBA,major,setMajor,conc,setConc}:iConc): JSX.Element {\n    return (\n        <Container>\n            <div id=\"major-minor-row\" data-testid=\"degree-select\">\n                <Dropdown>\n                    <strong>Computer Science : </strong>\n                    <Dropdown.Toggle variant=\"outline-dark\" data-testid = \"dropdown-basic\" id=\"dropdown-basic\">\n                        {major}\n                    </Dropdown.Toggle>\n                    <Dropdown.Menu>\n                        <Dropdown.Item data-testid=\"option-minor\" onClick={() => {\n                            setMajor(\"Minor\"); setConc(\"Traditional Program\"); setBSBA(\"BS\");\n                        }}>Minor</Dropdown.Item>\n                        <Dropdown.Item data-testid=\"option-major\" onClick={() => setMajor(\"Major\")}>Major</Dropdown.Item>\n                    </Dropdown.Menu>\n                </Dropdown>\n                {major === \"Major\" && <Dropdown data-testid=\"concentration-row\">\n                    <Dropdown.Toggle variant=\"outline-dark\" data-testid = \"dropdown-bsba\" id=\"dropdown-basic\">\n                        {bsba}\n                    </Dropdown.Toggle>\n                    <Dropdown.Menu>\n                        <Dropdown.Item data-testid=\"option\" onClick={() => setBSBA(\"BS\")}>BS</Dropdown.Item>\n                        <Dropdown.Item data-testid=\"option\" onClick={() => {\n                            setBSBA(\"BA\"); setConc(\"Traditional Program\");\n                        }}>BA</Dropdown.Item>\n                    </Dropdown.Menu>\n                </Dropdown>}\n            </div>\n            {major === \"Major\" && bsba === \"BS\" && <div data-testid = \"concentration-dropdown\" id=\"concentration-dropdown\">\n                <strong>Concentration : </strong>\n                <Dropdown>\n                    <Dropdown.Toggle variant=\"outline-dark\" id=\"dropdown-basic\">\n                        {conc}\n                    </Dropdown.Toggle>\n                    <Dropdown.Menu>\n                        <Dropdown.Item data-testid=\"option\" onClick={() => setConc(\"Traditional Program\")}>Traditional Program</Dropdown.Item>\n                        <Dropdown.Item data-testid=\"option\" onClick={() => setConc(\"Artificial Intelligence and Robotics\")}>Artificial Intelligence and Robotics</Dropdown.Item>\n                        <Dropdown.Item data-testid=\"option\" onClick={() => setConc(\"Bioinformatics\")}>Bioinformatics</Dropdown.Item>\n                        <Dropdown.Item data-testid=\"option\" onClick={() => setConc(\"Cybersecurity\")}>Cybersecurity</Dropdown.Item>\n                        <Dropdown.Item data-testid=\"option\" onClick={() => setConc(\"Data Science\")}>Data Science </Dropdown.Item>\n                        <Dropdown.Item data-testid=\"option\" onClick={() => setConc(\"High Performance Computing\")}>High Performance Computing</Dropdown.Item>\n                        <Dropdown.Item data-testid=\"option\" onClick={() => setConc(\"Systems and Networks\")}>Systems and Networks Concentration</Dropdown.Item>\n                        <Dropdown.Item data-testid=\"option\" onClick={() => setConc(\"Theory and Computation\")}>Theory and Computation</Dropdown.Item>\n                    </Dropdown.Menu>\n                </Dropdown>\n            </div>}\n        </Container>\n    );\n}","import React, { useState } from \"react\";\nimport { Button, Carousel, Modal } from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"../App.css\";\n\ninterface welc {\n    show: boolean;\n    setShow: (s: boolean) => void;\n}\n\nexport function Welcome({ show, setShow }: welc): JSX.Element {\n    const [index, setIndex] = useState(0);\n    const handleSelect = (selectedIndex: number, e: Record<string, unknown> | null) => { //type of e is from react bootstrap\n        setIndex(selectedIndex);\n        console.log(e);\n    };\n    return (\n        <div>\n            {show && <Modal size=\"lg\" show={show} onHide={() => {\n                setShow(false);\n                setIndex(0);\n            }}>\n                <Modal.Header>\n                    <Modal.Title>Usage Guide</Modal.Title>\n                </Modal.Header>\n                <Modal.Body className=\"welcome-container\">\n                    <Carousel className=\"welcome-carousel\" variant=\"dark\" activeIndex={index} interval={null} onSelect={handleSelect}>\n                        <Carousel.Item id=\"welcome-item\">\n                            <Carousel.Caption id=\"welcome-carousel-cap\">\n                                <h1>Welcome to UD CISC Scheduler</h1>\n                                <p>You can click button on the right to see step-by-step guiding of how to navigate this website and create an effective plan for your degree!</p>\n                                <p>This guide can also be accessed by the help button on the top right corner!</p>\n                            </Carousel.Caption>\n                        </Carousel.Item>\n                        <Carousel.Item id=\"welcome-item\">\n                            <Carousel.Caption>\n                                <h3>Second slide label</h3>\n                                <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>\n                            </Carousel.Caption>\n                        </Carousel.Item >\n                        <Carousel.Item id=\"welcome-item\">\n                            <Carousel.Caption>\n                                <h3>Third slide label</h3>\n                                <p>Praesent commodo cursus magna, vel scelerisque nisl consectetur.</p>\n                            </Carousel.Caption>\n                        </Carousel.Item>\n                    </Carousel>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button onClick={() => {\n                        setShow(false);\n                        setIndex(0);\n                    }}>Close Guide</Button>\n                </Modal.Footer>\n            </Modal>}\n        </div>\n    );\n}\n\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Button, Col, Container, Row } from \"react-bootstrap\";\nimport { FourYearPlan } from \"./components/FourYearPlan\";\nimport { Requirements } from \"./components/Requirements\";\nimport { CoursePool } from \"./components/CoursePool\";\nimport { DndProvider } from \"react-dnd\";\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\nimport { season, Semester } from \"./interfaces/semester\";\nimport { Concentration } from \"./components/Concentrations\";\nimport { CourseDisplay } from \"./interfaces/course\";\nimport { Welcome } from \"./components/Welcome\";\n\nconst defaultSemesters: Semester[] = [\n    { season: season.fall, year: 2021, courses: [] },\n    { season: season.spring, year: 2022, courses: [] },\n];\nfunction App(): JSX.Element {\n    const [semesters, setSemesters] = useState<Semester[]>(defaultSemesters);\n    const [bsba, setBSBA] = useState<string>(\"BS\");\n    const [major, setMajor] = useState<string>(\"Major\");\n    const [conc, setConc] = useState<string>(\"Traditional Program\");\n    const [coursesPool, setCoursesPool] = useState<CourseDisplay[]>([]); //for course pool\n    const [show, setShow] = useState<boolean>(true);\n    return (\n        <div>\n            <Welcome show={show} setShow={setShow}></Welcome>\n            <DndProvider backend={HTML5Backend}>\n                <Container fluid className=\"App\">\n                    <div className=\"help-button\"><Button variant=\"outline-dark\" onClick={()=>setShow(true)}>Help</Button></div>\n                    <h1 id=\"title\">UD CIS Scheduler</h1>\n                    <p>Click on the course name in a semester to view additional information and to edit.</p>\n                    <Row>\n                        <Col><CoursePool coursesPool={coursesPool} setCoursesPool={setCoursesPool}></CoursePool></Col>\n                        <Col md={8}>\n                            <Row><Concentration bsba={bsba} setBSBA={setBSBA} major={major} setMajor={setMajor} conc={conc} setConc={setConc} ></Concentration></Row>\n                            <Row><FourYearPlan semesters={semesters} setSemesters={setSemesters} coursesPool={coursesPool} setCoursesPool={setCoursesPool}></FourYearPlan></Row>\n                        </Col>\n                        <Col><Requirements semesters={semesters} bsba={bsba} major={major} conc={conc} ></Requirements></Col>\n                    </Row>\n                </Container>\n            </DndProvider>\n        </div>\n    );\n}\nexport default App;\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}