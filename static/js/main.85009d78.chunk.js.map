{"version":3,"sources":["components/semester.tsx","components/Requirements.tsx","components/CoursePool.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["initialTable","year","Semester","classes","setClasses","removeRow","name","newList","filter","item","console","log","useState","numTable","setNumTable","Col","md","className","map","index","Row","Table","striped","bordered","hover","colSpan","credits","Button","color","onClick","ButtonGroup","newT","addT","length","variant","removeTab","Requirements","CoursePool","App","classes1","setClasses1","Container","id","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.85009d78.chunk.js","sourcesContent":["import React, {useState} from \"react\";\nimport {Button, Col, Row, Table, ButtonGroup} from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"../App.css\";\nimport {indSemes, iNumTable} from \"../interfaces/classTable\";\n\n/* Getting a table to render based on a list is from https://stackoverflow.com/questions/54659039/remove-table-row-using-hooks */\n/* Removing from a list is from https://www.robinwieruch.de/react-remove-item-from-list */\n\nconst initialTable: Array<iNumTable> = [{year: 1}];\nexport function Semester({classes, setClasses}: indSemes): JSX.Element {\n    function removeRow(name: string): void {\n        const newList = classes.filter(item => item.name != name);\n        setClasses(newList);\n        console.log(classes);\n    }\n    function addT(year: number): void {\n        const newT: iNumTable = {year: year};\n        setNumTable(numTable => [...numTable, newT]);\n    }\n    function removeTab(year: number): void {\n        const newT = numTable.filter(item => item.year != year);\n        setNumTable(newT);\n    }\n    const [numTable, setNumTable] = useState<Array<iNumTable>>(initialTable);\n    return (\n        <Col md={8}>\n            <h2 className=\"subtitle\">Four Year Plan</h2>\n            {numTable.map((item, index) => \n                <Row key={index}>\n                    <Col>\n                        <Table striped bordered hover className=\"semester\">\n                            <thead>\n                                <tr>\n                                    <th colSpan={3}>{\"Fall 2021\"}</th>\n                                </tr>\n                                <tr>\n                                    <th>Course</th>\n                                    <th>Credits</th>\n                                    <th>{\"\"}</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {classes.map((item, index) => \n                                    <tr key={index}>\n                                        <td>{item.name}</td>\n                                        <td>{item.credits}</td>\n                                        <td>\n                                            <Button\n                                                color=\"red\"\n                                                onClick={() => removeRow(item.name)}>\n                                                {\" \"}\n                                                X{\" \"}\n                                            </Button>\n                                        </td>\n                                    </tr>\n                                )}\n                            </tbody>\n                        </Table>\n                    </Col>\n                    <Col>\n                        <Table striped bordered hover className=\"semester\">\n                            <thead>\n                                <tr>\n                                    <th colSpan={3}>{\"Spring 2022\"}</th>\n                                </tr>\n                                <tr>\n                                    <th>Course</th>\n                                    <th>Credits</th>\n                                    <th>{\"\"}</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {classes.map((item, index) => \n                                    <tr key={index}>\n                                        <td>{item.name}</td>\n                                        <td>{item.credits}</td>\n                                        <td>\n                                            <Button\n                                                color=\"red\"\n                                                onClick={() => {\n                                                    removeRow(item.name);\n                                                }}>\n                                                {\" \"}\n                                                X{\" \"}\n                                            </Button>\n                                        </td>\n                                    </tr>\n                                )}\n                            </tbody>\n                        </Table>\n                    </Col>\n                </Row>\n            )}\n            <ButtonGroup>\n                <Button\n                    onClick={() => {\n                        addT(numTable.length + 1);\n                    }}>\n                    + Add School Year\n                </Button>\n                <Button\n                    variant=\"danger\"\n                    onClick={() => {\n                        if (numTable.length > 0) {\n                            removeTab(numTable.length);\n                        }\n                    }}>\n                    - Delete School Year\n                </Button>\n            </ButtonGroup>\n        </Col>\n    );\n}\n","import React from \"react\";\nimport { Col } from \"react-bootstrap\";\nimport \"../App.css\";\n\nexport function Requirements(): JSX.Element {\n\n    return<Col>\n        <h2 className = \"subtitle\">Degree Requirements</h2>\n        <p>Below are the list of degree requirements that remain unsatisfied.</p>\n    </Col>;\n}","import React from \"react\";\nimport { Col } from \"react-bootstrap\";\nimport \"../App.css\";\n\nexport function CoursePool(): JSX.Element {\n\n    return<Col>\n        <h2 className = \"subtitle\">Course Pool</h2>\n    </Col>;\n}","import React, {useState} from \"react\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport {Container, Row} from \"react-bootstrap\";\nimport {Semester} from \"./components/semester\";\nimport {Requirements} from \"./components/Requirements\";\nimport {CoursePool} from \"./components/CoursePool\";\nimport {classTable} from \"./interfaces/classTable\";\n\nconst classes: Array<classTable> = [\n    {name: \"EGGG101 Introduction to Engineering\", credits: 2},\n    {name: \"CISC108 Introduction to Computer Science I\", credits: 3},\n    {name: \"MATH241 Analytic Geometry and Calculus A\", credits: 3},\n    {name: \"ENGL110 Seminar in Composition\", credits: 3},\n    {name: \"ARTH237 Art in Tibet\", credits: 3},\n];\n\nfunction App(): JSX.Element {\n    const [classes1, setClasses1] = useState<Array<classTable>>(classes);\n    return (\n        <Container className=\"App\">\n            <h1 id=\"title\">UD CIS Scheduler</h1>\n\n            <Row>\n                <CoursePool></CoursePool>\n                <Semester classes={classes1} setClasses={setClasses1}></Semester>\n                <Requirements></Requirements>\n            </Row>\n        </Container>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}