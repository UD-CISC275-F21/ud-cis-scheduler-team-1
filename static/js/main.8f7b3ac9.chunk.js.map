{"version":3,"sources":["components/SemesterTable.tsx","components/FourYearPlan.tsx","components/Requirements.tsx","utilities/findCourse.ts","components/CoursePool.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["SemesterTable","semester","setSemester","semesters","useState","courses","setCourses","Col","Table","striped","bordered","hover","className","colSpan","title","Button","color","onClick","name","filter","map","course","info","code","credits","grade","variant","FourYearPlan","setSemesters","id","Row","xs","md","ButtonGroup","length","splice","window","location","reload","Requirements","findCourse","substr","CATALOG_DATA","Catalog","console","log","descr","preReq","restrict","breadth","typ","undefined","CoursePool","inpu","setInpu","addCourse","alert","some","el","Form","Group","controlId","Label","Control","value","type","placeholder","onChange","e","target","defaultSemesters","App","Container","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8f7b3ac9.chunk.js","sourcesContent":["import React, {useState} from \"react\";\nimport {Button, Col, Table} from \"react-bootstrap\";\nimport {CourseDisplay} from \"../interfaces/course\";\nimport {Semester} from \"../interfaces/semester\";\n\n/* Getting a table to render based on a list is from https://stackoverflow.com/questions/54659039/remove-table-row-using-hooks */\n/* Removing from a list is from https://www.robinwieruch.de/react-remove-item-from-list */\n\ninterface semesterTable {\n    semester: Semester;\n    setSemester: (s: Semester[]) => void;\n    semesters: Semester[];\n}\n\nexport function SemesterTable({semester, setSemester, semesters}: semesterTable): JSX.Element {\n    const [courses, setCourses] = useState<CourseDisplay[]>(semester.courses);\n\n    // Removes a course from a semester based on its name\n    function removeCourse(name: string): void {\n        setCourses([...courses.filter(course => course.info.name !== name)]);\n        semester.courses = courses;\n    }\n\n    function removeSemester(name: string): void {\n        setSemester([...semesters.filter(semester => semester.title !== name)]);\n        semester.courses = courses;\n    }\n\n    return (\n        <Col>\n            <Table striped bordered hover className=\"semester\">\n                <thead>\n                    <tr>\n                        <th colSpan={3}>{semester.title}</th>\n                        <th>\n                            <Button color=\"red\" onClick={() => removeSemester(semester.title)}>\n                                {\" \"}\n                                X{\" \"}\n                            </Button>\n                        </th>\n                    </tr>\n                    <tr>\n                        <th>Course</th>\n                        <th>Credits</th>\n                        <th>Grade</th>\n                        <th>Delete</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {courses.map(course => \n                        <tr key={course.info.name}>\n                            <td>{course.info.code}{\"-\"}{course.info.name}</td>\n                            <td>{course.info.credits}</td>\n                            <td>{course.grade}</td>\n                            <td>\n                                <Button color=\"red\" onClick={() => removeCourse(course.info.name)}>\n                                    {\" \"}\n                                    X{\" \"}\n                                </Button>\n                            </td>\n                        </tr>\n                    )}\n                </tbody>\n            </Table>\n            <Button\n                variant=\"secondary\"\n                onClick={() => {\n                    setCourses([]);\n                }}>\n                Delete All Courses\n            </Button>\n        </Col>\n    );\n}\n","import React from \"react\";\nimport { Button, Row, ButtonGroup } from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"../App.css\";\nimport { Semester } from \"../interfaces/semester\";\nimport { SemesterTable } from \"./SemesterTable\";\n// import { Course } from \"../interfaces/course\";\n\n/* Getting a table to render based on a list is from https://stackoverflow.com/questions/54659039/remove-table-row-using-hooks */\n/* Removing from a list is from https://www.robinwieruch.de/react-remove-item-from-list */\n\ninterface fyp {\n    semesters: Semester[],\n    setSemesters: (s: Semester[]) => void\n\n}\n\n\nexport function FourYearPlan({ semesters, setSemesters }: fyp): JSX.Element {\n\n    // Removes the most recently added semester in the list, does nothing if no semesters left\n    function removeLastSemester(): void {\n        if (semesters.length) {\n            semesters.splice(-1);\n            setSemesters([...semesters]);\n        }\n    }\n\n    // Adds a new semester with the given title (ex. \"Fall 2021\") and no courses\n    function addSemester(title: string): void {\n        setSemesters([...semesters, { title: title, courses: [] }]);\n    }\n\n    return <div id=\"plan\">\n        <h2 className=\"subtitle\">Four Year Plan</h2>\n        <Row xs={1} md={2} className=\"g-4\">\n            {semesters.map((semester) => <div key={semester.title}>\n                <SemesterTable semester={semester} setSemester={setSemesters} semesters={semesters}></SemesterTable>\n            </div>)}\n        </Row>\n        <Row>\n            <ButtonGroup id = \"buttonGroup\">\n                <Button\n                    onClick={() => {\n                        addSemester(\"test semester\");\n                    }}>\n                    + Add Semester\n                </Button>\n                <Button\n                    variant=\"danger\"\n                    onClick={() => {\n                        removeLastSemester();\n                    }}>\n                    - Delete Semester\n                </Button>\n                <Button\n                    variant=\"secondary\"\n                    onClick={() => {\n                        window.location.reload();\n                    }}>\n                    Reset Plan\n                </Button>\n            </ButtonGroup>\n        </Row>\n    </div>;\n}","import React from \"react\";\nimport { Col } from \"react-bootstrap\";\nimport \"../App.css\";\n\nexport function Requirements(): JSX.Element {\n\n    return<Col>\n        <h2 className = \"subtitle\">Degree Requirements</h2>\n        <p>Below are the list of degree requirements that remain unsatisfied.</p>\n    </Col>;\n}","import { Course } from \"../interfaces/course\";\nimport Catalog from \"../data/catalog.json\";\n\nexport function findCourse(name:string): Course{\n    const code = name.substr(0, 4);\n    const CATALOG_DATA: Record<string, Record<string, Course>> = Catalog;\n    let course:Course;\n    try{\n        course = CATALOG_DATA[code][name];\n    }catch{\n        console.log(\"catch\");\n        course = {\n            code: \"\",\n            name: \"\",\n            descr: \"\",\n            credits: \"\",\n            preReq: \"\",\n            restrict: \"\",\n            breadth: \"\",\n            typ: \"\",\n        };\n    }\n    if(course === undefined){\n        course = {\n            code: \"\",\n            name: \"\",\n            descr: \"\",\n            credits: \"\",\n            preReq: \"\",\n            restrict: \"\",\n            breadth: \"\",\n            typ: \"\",\n        };\n    }\n    return course;\n}","import React, { useState } from \"react\";\nimport { Button, Col, Form } from \"react-bootstrap\";\nimport \"../App.css\";\nimport { Course, CourseDisplay } from \"../interfaces/course\";\nimport { findCourse } from \"../utilities/findCourse\";\n\nexport function CoursePool(): JSX.Element {\n    const [inpu, setInpu] = useState<string>(\"\");\n    const [courses, setCourses] = useState<CourseDisplay[]>([]);\n\n    function courseExists(code:string):boolean{\n        return courses.some(function(el:CourseDisplay) {\n            return el.info.code === code;\n        });         \n    }\n\n    function addCourse(name: string): void {\n        const course:Course = findCourse(name);\n        console.log(course);\n        if(course.name === \"\"){\n            alert(\"Course Does not Exist\");\n        }else{\n            if(courseExists(name)){\n                alert(\"Course is Already in Pool\");\n            } else{\n                setCourses([...courses, {info:course, grade:\"A\"}]);\n            }\n        }\n    }\n\n    return<Col>\n        <h2 className = \"subtitle\">Course Pool</h2>\n        <Form>\n            <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n                <Form.Label>Enter desired course like so: ACCT 207</Form.Label>\n                <Form.Control value = {inpu} type=\"text\" placeholder=\"Coure Code\" onChange={e=>setInpu(e.target.value)} />\n            </Form.Group>\n            <Button onClick={() => {\n                addCourse(inpu);\n            }}>\n            Add Course  \n            </Button>\n        </Form>\n        {courses.map(course => \n            <div key = {course.info.code}>\n                {course.info.code} {course.info.name}\n            </div>\n        )}\n    </Col>;\n}","import React, {useState} from \"react\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport {Col, Container, Row} from \"react-bootstrap\";\nimport {FourYearPlan} from \"./components/FourYearPlan\";\nimport {Requirements} from \"./components/Requirements\";\nimport {CoursePool} from \"./components/CoursePool\";\nimport {CourseDisplay } from \"./interfaces/course\";\nimport { Semester } from \"./interfaces/semester\";\nimport { findCourse } from \"./utilities/findCourse\";\n\nconst testCourses: CourseDisplay[] = [\n    {info: findCourse(\"EGGG 101\"), grade: \"F\"},\n    {info: findCourse(\"CISC 108\"), grade: \"F\"},\n    {info: findCourse(\"MATH 241\"), grade: \"F\"},\n    {info: findCourse(\"ENGL 110\"), grade: \"F\"},\n    {info: findCourse(\"ARTH 237\"), grade: \"F\"},\n];\n\nconst defaultSemesters: Semester[] = [\n    {title: \"Fall 2021\", courses: testCourses},\n    {title: \"Spring 2022\", courses: []}\n];\n\n\n\nfunction App(): JSX.Element {\n    // All courses in our database\n    // const [courses, setCourses] = useState<Course[]>(testCourses);\n\n    const [semesters, setSemesters] = useState<Semester[]>(defaultSemesters);\n\n    return (\n        <Container className=\"App\">\n            <h1 id=\"title\">UD CIS Scheduler</h1>\n\n            <Row>\n                <Col><CoursePool></CoursePool></Col>\n                <Col xs={6}><FourYearPlan semesters={semesters} setSemesters={setSemesters} ></FourYearPlan></Col>\n                <Col><Requirements></Requirements></Col>\n            </Row>\n        </Container>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}